post_id,title,title_summary,score,upvote_ratio,url,num_comments,created_utc,all_comments,comments_summary
1li722k,"Weekly Entering & Transitioning - Thread 23 Jun, 2025 - 30 Jun, 2025",Jun. Weekly Entering & Transitioning - Thread. Weekly Entering & Transitioning - Thread 23 Jun. 2025. 2025 - 30,9,0.91,https://www.reddit.com/r/datascience/comments/1li722k/weekly_entering_transitioning_thread_23_jun_2025/,45,1750651294.0,"Hey! If you’re just getting into data science, there are tons of great resources out there. I’d start with Python (YouTube has awesome beginner tutorials), then check out pandas, scikit-learn, and some SQL. Coursera and DataCamp are also solid for structured learning.

For job hunting, building a portfolio with projects (like Kaggle or GitHub) really helps. And when you’re prepping for interviews or want to level up your skills, definitely check out Prepare.sh - it’s super helpful for practicing coding and data science questions (I’m a contributor and used it a lot myself).

Don’t stress about asking basic stuff - everyone starts somewhere. Good luck! | Hello, I am new to this reddit. I am recently a new grad and looking into Data Science. I have a BS, Applied Mathematics Degree. I don't have that much experience, well technically I do but not for the big name companies, I worked as a Data Analyst for a small business and the director of Finance for a club at UCLA in the past two years. I am here seeking for advice on how to break into the industry/gain more experience. Please give me some advice! Thank you so much! | What are some recommended math courses to make sure I really have a good foundation outside of just writing code. 
I want to get to a place where thinking about and understanding the how to and why become second nature. | I have completed my Masters in Mathematics, my thesis was about clustering problems. Now I have learnt neural networks and transformers on my own. Where to go from here? What should be the next thing I should learn? | Where do you start out in this field?

I'm getting my masters degree in spatial data science and it's been absolutely impossible to find a place to start my career. I live in a place with no jobs, which doesn't help, but I'm willing to move. Even an internship. I simply am not finding anything entry level that will help me increase my skills. I reach out to my classmates who have jobs and it's radio silence.

Looking for help and advice. I have read responses on this forum that make fun of people who tack data science onto their degrees. That's not what I'm trying to do here. I don't feel my program has set me up for success. I know a lot of success in the field is independent work but I've been stuck at dead end temp positions that haven't let me even dabble in this stuff and just want me to make maps. I had one class in Python, one in R, that's it. I am trying.

Most of the folks I take classes with already work in the field of data analysis or stats and aren't willing to help me figure out what the heck I can do to start a career. I'm trying with what I've got. Even specific project types to add to my portfolio - anything - that will get me a job where I can grow.

Thanks for any ideas. My degrees are psychology and librarianship. I have no idea how I'd even compete with CS or math majors. Should I even try to carve a path in this field? I'm 41 and have spent the majority of my life in school. I am extremely dejected and feel like just giving up.  | I am a Senior CS student from Syria, due to a variety of reasons I didn't do that good in my studies (mainly due to the environment as you may be aware) and I ended up focusing on web dev since it is the more logical career choice here.

But a lot has happened to me recently, and I am finding myself wanting to do something in my life and contribute to the field in some way, and since I've always been interested in stats and data science, I am wondering if it is feasible to study the data science in my free time for the hope of contributing some sort of research in the future.

Of course, I admit I may not be smart enough to do so, but I still would like to try.

What do you think?

Sorry for my bad English. | I'm beginning to put together portfolio projects in order to look for entry-level positions in the industry. Where can I find places to share these projects for feedback? | Why would I be invited to a final round interview before I even complete the technical interview? | Hello there,   
I'm starting to be interested in datascience in general.  
I'm currently a system adminstrator with 10y exp.

I've always be fan of stats and numbers, particulary in sport.

  
But also I'm wondering if Datascience isn't often a BS job ? (no offense guys)  
I'm looking for a high-value job. I don't want to deal with financial/commercial aspects or HR optimization. I'd like to help out locally or see what I can bring to the company.

What are the chances of me finding what I am looking for ? | Hello! I am currently going into my second year of university as a data science major, and I am hoping to use my summer to get ahead and learn stuff that won't be taught in university (or only taught at a surface level).

I have delved a bit into some different learning vehicles, including:

\- Krish Naik's content on YouTube and Udemy  
\- Titanic ML Tutorial from YouTube (note: felt like I learned a lot but it was a tutorial)

But I'm also aware of some other resources, such as:

\- Andrew Ng's course, ""Machine Learning Specialization"", on Coursera  
\- CS4780 on YouTube

I am just wondering which one would be the best for me to get into and do first to give me a strong introduction into Machine Learning and the connected + relevant concepts. I've taken Calculus 1/2 and Linear Algebra in school already (don't plan on taking Calc 3), and I've taken some basic statistics classes (1st/2nd year courses).

Any advice would be great, thank you! | What's your biggest challenge in entering or transitioning into the data science field, and I'll do my best to help? | So I decided to pursuing this field seriously, and I think my biggest issue would be Math.

I am a CS student, and programming isn't an issue for me, but unfortunately I didn't have good math classes  so I am very lacking in stats, proparity, and linear algebra.

My question is how deep should I study this stuff? Should I take a couple of months to study math before studying DS theory and programming libraries, or should I split my time so I can study them together? | I'm currently planning on specializing in Causal Inference / AdTech and have spent quite a bit of time studying it, and I enjoy it, but recently I've been thinking about pivoting into Recommendation Systems. I've done some research into demand and career progression for both of these fields but information online seems iffy at best and outdated. 

To people in either of these fields: How in-demand do you feel these roles are and how would you say the career progression is? Are there any real pain points you don't like about your job, or is there anything you really enjoy about it?

For some added context, I'm about to start grad school for applied stats and I have a healtcare data analytics job right now + 2 past internships. | I got a call from recruiter for the Data Science Manager role. Can anyone help me with should I be expecting and what would the interview process be like? Would appreciate if anyone has any reading material available. 

Looking at Blind and some threads on the internet says the screening will involve SQL and product case which I’m confident of. I couldn’t get a lot of detail on the further rounds and what the onsite loop would look like. Also, let me know if I need to practice Python Leetcode again for the screen. | Where do you guys get your resumes done?

Long story short, I've found that a ton of Fiverr listings are fake (I found that they steal photos from real people on LinkedIn/Instagram so now I can't trust them) and I don't feel comfortable going to resume writing centers because data science resumes are structured differently. What do you recommend?

I should mention I've tried redoing my own resume but due to a lack of turnaround from jobs I've applied to, I want to get professional help. | Thank you for the insightful comment! | You are underselling your experience a bit. You have had jobs as a Data Analyst for a small business and at a university. That is much better than a lot of new grads. 

What I think you should focus on is refining your resume further (a resume review on Reddit could help) and applying for new grad roles at the companies that you are aiming for. Also, I saw you mention big companies. Be sure to not just apply at big companies. Apply anywhere that you think would be good to work at.

Search ""new graduate data analyst"" on Indeed, LinkedIn, and other job platforms: [https://www.indeed.com/jobs?q=new+graduate+data+analyst&l=california&radius=35&from=searchOnDesktopSerp&vjk=3c6ebb69170b2988](https://www.indeed.com/jobs?q=new+graduate+data+analyst&l=california&radius=35&from=searchOnDesktopSerp&vjk=3c6ebb69170b2988)

Here's a GitHub resource one of my mentees was using (we are trying to get him a new job): [https://github.com/jobright-ai/2025-Data-Analysis-New-Grad](https://github.com/jobright-ai/2025-Data-Analysis-New-Grad)

You can also just straight up type in any company that you are interested in and see if they have graduate pipelines. Many are wrapping them up because it is summer. So apply as soon as possible!!!! Here is an example: [https://www.jpmorganchase.com/careers/explore-opportunities/students-and-graduates](https://www.jpmorganchase.com/careers/explore-opportunities/students-and-graduates)

As you are applying, continue to do things that will get you interview ready. Do projects, practice technical interviews, and read up on behavioral interview best practices. 

Finally, network. UCLA has a ginormous alumni network. Reach out to people via LinkedIn and elsewhere. Don't immediately ask them for jobs. Find a common interest to talk about and request an informational interview. Best of luck! | For a place to start getting a brief overview of everything I'd strongly suggest the various videos by [3 blue 1 brown](https://www.3blue1brown.com/).

Really great expirations of complexity topics, particularly calculus and statistics. | Honestly, you probably are job ready with what you just listed. You have the demonstrable mathematics skills from your degree, a published paper demonstrating your familiarity with Machine Learning, are continuing to learn machine learning, and have implemented models with programming languages.

Assuming that you are comfortable with Python, SQL, and other Data Science technology, your next step should be demonstrating on a resume your value to an organization. Get your resume ready. As you are applying, continue to build yourself experience through complex projects. Here is a website that I have been recommending recently:

[https://datatalks.club/blog/guide-to-free-online-courses-at-datatalks-club.html](https://datatalks.club/blog/guide-to-free-online-courses-at-datatalks-club.html) | [deleted] | I did an internship with a state DOT and did a lot of GIS work. I didn't do a lot of work that I would consider specifically data \*science\* as opposed to more data engineering and analytics, but it is still probably your best bet for breaking into the geospatial world (aside from maybe city govt) assuming you live in the US. | I am not that familiar with the job market in Syria. However, after some online research, it seems like the Data Science job market is quite small/niche in Syria. This is especially so for local companies. However, international companies that operate in Syria have more Data Science job opportunities. It might be a good idea to first get a job as a Web Developer or a Software Engineer and then pursue Data Science as a career. That way, you have financial security and will have more time to think about if Data Science is the best career for you. Also, being a Software Engineer first can make you a better candidate for a number of Data Science jobs.

So, yes. It is definitely feasible to study Data Science in your free time with the goal of eventually pursuing that career path. 

You mention research. For research Data Science roles (such as a Research Scientist, Applied Scientist, etc.) you will have to get a graduate degree eventually. But I definitely recommend getting a job as a Web Developer or a Software Engineer first before deciding if you need more school.

Also, your English is great!

Best of luck! | r/datascienceproject as well as a post in the Weekly Entering & Transitioning - Thread itself. | A few possibilities:

* Some companies have weird hiring practices.
* The hiring manager likes your background enough to not care if you 100% ace the technical interview (you still need to pass it though).
* Weird scheduling conflict caused by HR and the Hiring Team not communicating properly.
* Job scam.

I suggest reaching out to the recruiter or whoever your HR contact is to clarify why you are invited to the final round interview before the technical interview. Pay very close to their answer. | At my company, for internal candidates we schedule all rounds of interviews at once. | To be honest, a large amount of Data Science jobs are going to be about financial/commercial aspects (People Analytics/Data Science is the HR Optimization part). It is why these companies pay us so much: to make them more money. By that merit, it is certainly not a BS job. In several other ways, it has a lot of value in more ways then I can list.

There are Data Science jobs that are not concerned with the financial/commercial aspects as much. These are usually jobs in the Non-profit, Government, NGO, and Government Contracting spaces. One thing you can do is to try to volunteer in these areas to see if you like Data Science work. Here are some volunteer links:

* [https://www.statisticswithoutborders.org/](https://www.statisticswithoutborders.org/)
* [https://www.datakind.org/](https://www.datakind.org/) | I've only done the Andrew Ng's course and would highly recommend it.

Also worth mentioning that the book Introduction to Statistical Learning (in addition to some other supplemental sources) was how I moved from high-level understanding to firm grasp of machine learning concepts. | A lot of us write our own resumes. However, check out this service: [https://resumeraiders.com/](https://resumeraiders.com/) . I've heard that it is pretty reliable.

Before you spend money though, I recommend getting your resume reviewed here on Reddit (remove personal information).

r/resumes, r/Resume, and r/ResumeExperts are actually pretty good for Data Science and other technical resumes. You can also post your resume in the Weekly Entering & Transitioning thread and people will critique it. | Thank you so much for the kind words. I have been applying for 2 months and gotten like 2 interviews. The rest are just silence so I can't help but think that I am just not experienced enough and feel down. I have been tailoring my resume numerous times, learning new skills, and just thought that would ask for some advices here. I will try my best to push it through. Thanks again! | Hey! Your background in psychology and librarianship are pretty valuable too! I don’t think everyone in the Data Science field came from a math, stats, or CS background.

If it is something you have an interest in, then who’s to say you can’t do it? 

For project ideas, you could look into something relating to your background. Data is in everything. 

I recommend also having ChatGPT recommend you some beginner project ideas that could also be related to your degrees in psychology and librarianship.

Good luck! 🍀 Remember that you never walk alone. | I know you're in a bad spot mentally and there may not be much that anyone can say that will make that feel better. I was in a similar situation when I was looking for my first job outside of school. A lot of negative talk and self-doubt. 

I promise you that if you genuinely have a passion for the field that Data Science is worth pursuing. Your Master's degree was in Spatial Data Science. I would highly recommend that you tailor your resume for relevant GIS Data Science positions. These may have the title of GIS Data Analyst, GIS Data Scientist, or GIS Data Engineer.

As for moving, it is likely that you will have to move. GIS jobs tend to be concentrated in particular areas of every nation. Are you in the U.S.? Many GIS positions are concentrated by the East and West coasts. Here are some of the more popular places for these jobs:

* Washington, D.C.
* Denver, Colorado
* California (the whole state, but definitely more towards the south)
* St. Louis, Missouri 
* Boston, Massachusetts (and the Northeast in general)
* Austin, Texas 

You can also check if your local powerplant, energy company, or any engineering firms, etc. needs people to fill jobs. GIS work is **HUGE** in those types of organizations. Some nonprofits need Spatial Data Science professionals too.

Also, ask this same question in r/gis. Make sure to follow the rules for posting in that subreddit. It is going to be okay. | Ok this may sound silly, but would it be considered too late for me to start now? I have 1 year experience in front end development, and a part of me worries that I sort of set myself in a specific path and that it is too late to change it now.

Care to give your opinion on this? | Thank you! It sounds like they're considering me for two different positions (same type of role with two different teams in the same department) and they're determining which role will be the better fit. Seems like they both really like me, so now they're deliberating amongst themselves lol | Thanks for your honest and interesting reply. | Thank you for sharing these links! | That would be from this website right?: [https://www.statlearning.com/](https://www.statlearning.com/)

I will check it out, do you suggest I go through Andrew Ng's Specialization course first? I am currently watching the videos that are posted on YouTube, but I do plan on buying the course on Coursera to complete the rest of the Specialization that isn't posted on YouTube. | Thanks for sharing. I don't mind sharing my resume but even if I redact personal info, it'll still be found to some extent because my personal website is on my resume.) | Not a silly question at all! In general, work experience in one area of the Computer Science/Information Technology field can be valued in another area. Programming experience in particular is usually highly valued. Your programming experience from Web Development will be useful if you move over to Data Science (especially so if you are doing good Object Oriented Programming, Quality Assurance, and Testing practices). In fact, quite a number of teams would love someone that can build quick web interfaces for Data Science work demonstrations/internal tool use for the company. AI Engineering is another job category that loves people who have at least some Front-End Web Development experience.

Fun fact: many Data Science professionals had other jobs before they began working in the Data Science field. Overall, don't worry about making the switch to Data Science. Many people on this subreddit have made similar switches (like myself)! | Oh snap! Congratulations!!! That can be a good position to be in. Two teams equally recognize your potential to excel in the role. | Wow, great news! Congratulations and good luck! 🍀 | That's the book.

My suggestion would be to just pick one and finish it. Andrew Ng's courses don't have to be prioritized over the others. | I am genuinely grateful for your replies. I am hoping to migrate to Europe next year, so I think if started working hard early on, I may be able to do career switch as you say in the future.

And regarding the graduate degree point, I am not actually against the idea, but I think I'll have to work on fixing my weak points at math first.

Thank you for taking the time to help, you gave me a lot of hope.

 I wish you a fantastic week! | Yeah! Thanks! Fingers crossed! It'd be a real bummer if I don't get either somehow haha, we shall see. Wish me luck! | I'm glad to be of help. I wish you a fantastic week as well!",Data Science jobs. more Data Science job opportunities. Data Science. Data Science work. Spatial Data Science
1ll7or7,"When applying internally, do you reach out to the hiring manager?",the hiring manager. you,23,0.89,https://www.reddit.com/r/datascience/comments/1ll7or7/when_applying_internally_do_you_reach_out_to_the/,21,1750962424.0,"HR is the final say in hiring, but if it's internal, why not just introduce yourself in person? Unless your all remote, than just send a quick message about it.

Or casually ask for a call for help on a project/report and then pivot to asking about the role | Yes, but what you *don't* do is send a blind calendar invite for a meeting to do so.  A quick email asking about the position, and if they have some time to chat about it, is usually totally in-bounds.  That said, going against HR can be seen as a bad thing, is it a policy or just advice from this particular rep?  It's possible that they have seen people do the blind invite thing and just prefer to say it's a bad idea instead of dealing with the nuance. | Wtf. Why is this even a question? Yes. You immediately make yourself a known quantity. 

Send them your relevant education, certifications and job experience. 

So that means resume, LinkedIn links, etc. 

Also, if your company is anything like my company, then you should reach out to HR and make sure that the database they use internally (we use workday, for example) shows you've completed the necessary education. 

You immediately stand out because:

1. You don't need to onboard. 
2. This first informal meeting acts like an impromptu interview. 
3. You can leverage your internal network to bolster your brand. 

You need to take every advantage you can. 

And I say to do so because this was also literally my plan. It only didn't work out because we ran out of budget. Lol. When things pick back up again. I'll be the guy with a MS in Data Science with damn near a 4.0 that the hiring manager already knows. | Had I followed these straightjacket rules, I would not have progressed my career forward internally. But it's not what you do, it's how you do it. This the the equivalent of the ""hidden job market"" you read about, where jobs are not publicly advertised, where not even HR knows an opening is coming up. To wangle an introduction, I networked my way in, connecting with a friend or colleague or acquaintance to get an introduction, and never, never did the hard sell with a resume (first), but had my elevator pitch about my particular skills. It's not an interview, but you are planting seeds. 

Four times I sussed out upcoming, unpublished jobs that way. And the first time, which was a major promotion at a Fortune 500 firm, I found out later that HR counseled them against the hire as I was too ""green."" (The HR lead confessed this later to me after I made a splash, and we both laughed as I could see her POV.) The point is, as far as I am concerned, is that certainly follow conventional strategies if they work, but that ultimately, rules are made to be broken. | I would ask the manager and let them decide. Worst case scenario, they direct you to HR or the policy around internal positions | Yes I do | I do this for every single job I've applied to internally. 1 short paragraph who you are, attach resume, and leave an option to chat about the role/team a little more.

Most of the time in my experience, the managers don't respond to me haha. Just recently, however, I did have a manager tell me that she's not engaging in conversations with potential candidates for fairness. | In the large companies I've worked for I found that you can always ask for informational 1:1's to get to know people in other departments and figure out how you might work together on stuff. Asking about an open req is definitely ok and doing a 1:1 informational is okay. (It sounds like you're pretty familiar with the idea but for those other folks who aren't aware of what an informational interview is and how it differs from say a job interview, please do a google search before you ask for one!)

That being said, based on your post it sounds like HR is just making a recommendation rather than some kind of bizarre internal written policy that you need to strictly abide by. If you're a qualified candidate and you're interested in learning more about the team you are absolutely worth their time. Even if it doesn't lead to a job \*now\* you never know when another rec might open up and at least you become more aware of other data science teams within the company. | Similar topic - if it's an external position and you don't know the hiring manager don't send them a DM. They already have too much going on and it communicates a lack of business maturity | i am surprised that HR is recommending against this. 

to me, reaching out to the hiring manager to build a relationship is the baseline expectation. i think you should still do the meeting with the hiring manager ;) | I reached out to hiring manager first since job descriptions are very vague. Definitely set up a quick chat and have 1 or 2 questions ready. Asking what the daily tasks and responsibilities to help you decide if you even want to apply for the job, without getting to much into the weeds. | Dude fuck HR recommendations, theyre just trying to cover their ass for the lowest common denominator of possible situations in case some hardo complains and trys to cause a stink because they suck as a person. I always try to set up a coffee chat for any internal role im interested in.  Really doesnt have to be formal.

""Hey so and so, 

Im ""xyz123"" currently working in ""abc"" dept as a ""whatever"" and saw you had an open role for ""this/that"".  If the role is still actively looking and you have some availability this or next week, would love to grab some time from you to introduce myself and learn more about the role.  Thanks!""

And if they dont respond in a couple days either follow up or just send the calendar inv anyway. | I would follow whatever the policy is. Most large companies have policies for internal applicants. | HR is the final say on if someone will be hired as they are the PoC for org and budget but the final say on ""who"" will be hired will go to the hiring manager. 

OP should totally make contact with hiring manager. Also for the simply reason that you will work for this person and want to determine if thats what you want. | HR is the final say in hiring? What? HR just gives me resumes and opens the req, they may filter candidates out to me but it's not their call who I hire | Well, maybe I should've clarified in the body of the post more, but yes obviously I'm applying by sending my resume and other attached resources. The question is based on whether or not you reach out to that specific manager after applying. I always thought it was good to do until a specific HR rep advocated against it in a recent meeting. | Good point, thanks. | Oh, young one... | Your HR rep is either dumb or a control freak (or both). If you're an internal applicant absolutely reach out to the hiring manager when you apply. HR wants to pretend that they can maintain a level playing field between applicants, but that will never exist so you should build your advantages. | there's no rule that says you cant introduce yourself to anyone at a company. the HR recommendation is probably specifically advising against doing something like ""hey I'm ____ and I applied for that position you have open"". If you just introduce yourself but dont mention anything about the job, there's nothing wrong with that | Yes. Talk to them immediately and send them your credentials.

Don't JUST apply to the req, talk to the manager as well.

They can pull you and interview you straight from those pool of applicants.

Already being at the company is the equivalent of having the greatest universities on your resume.   
You can IMMEDIATELY go to the top of the pile over \*ANYONE\*.",hiring manager. | HR. HR. job experience. manager
1ll5dv2,I have two amazing job offers. I want to build my own company in the near future. At a loss.,two amazing job offers. my own company. the near future. a loss. I,23,0.64,https://www.reddit.com/r/datascience/comments/1ll5dv2/i_have_two_amazing_job_offers_i_want_to_build_my/,29,1750957148.0,"Take the big tech job first and gain experience in the real world, then go on to start your company at a later date. | Big tech job. Founding engineer is practically a scam, and you know you'll be leaving anyways. | Where do you have the biggest learning curve? Actually good mentors? | Can you expand on your total YoE, region you're in and what's your highest degree? Those all will play a factor into creating your own business if you eventually want to look for funding | Do you accept mentees? | Take the big tech job but setup periodic reminders to think about your goals to build a company, it's very easy to get comfortable with a great paycheck/benefits/etc. | How much experience do you have? It sounds like not much? 

If that's the case, I'd stick with big tech. Learning the ropes in a bigger company with more experienced people is likely the better move. Going in to a senior position in a start-up with little experience can be pretty ropey. My first thought is that any company getting in an inexperienced person as Founding ML Engineer probably doesn't have amazing odds of becoming some unicorn anytime soon. | Sounds like you do know | First of all congratulations.

""I would jump out after 2 years at the latest to build my own."" If you ever decide to get in with them let the founder know this first. I think that you would love to know the same when founding your company. | It depends on a lot of factors.

You will need some fund to survive while developing your company. Financialy big tech is more interesting.

On the other hand, working at startup will teach you a lot about entrepreneurship. Most importantly what NOT to do. This may save you months later when starting your own.

If you are absolutely sure about your goal and don’t have too much financial pressure then it may be better to go startup path. If cash is an issue then be careful not to put yourself in too risky situation. | Take the robotics startup you’ll learn a lot more there, stick around for at least 5 years before you quit to start your own company… I assume there’s a product you want to build so let it be a side project for the time being | Take the one will help you in your own business! It will be more useful for your long term game. And you are not betraying no one. Everyone learn in all jobs. | Don't join a startup if you are intending to leave, you'll kneecap them during their most important time period. Imagine you start your company in 2 years, hire someone, and you trust them to be a pillar of your future but their heart is elsewhere. Startups don't survive that sort of misstep. A lot of downsides for everyone if you join a startup and aren't all-in. | Take big tech job. What if you offer consulting position to the start up, no equity and just hourly rate? | Avoid start ups | Big tech. | The most important thing to inform your decision - no company out there gives a shit about you. They’re just looking to get the best return possible on the salary they pay you. As the past couple years have proven, sometimes you’ll get let go even if your performance was fine

Do what’s best for you. | This is possibly what I will do. Also, the big tech company is known around the world by basically everyone, so it would help me get funding and relocate in all likelihood. | This plus making a lot more money to save for later | Big Tech can be a double edged sword in terms of experience (I’ve worked at two of the FAANGs).

Plus: you observe systems and leadership at scale and you learn how to confidently make decisions when the stakes are very high. You also get the brand recognition.

Negative: you have layers of software and organizational abstraction separating you from the core tasks of running a business. 

If you want to start your own company, you should think about what incremental experiences would make you most successful.

If you are very confident in your ability to execute but you don’t have an impressive background, then big tech experience will give you the brand recognition that you need and give you a mental model for how to eventually scale your company.

If your biggest gap is experience executing, then bigtech might hurt b/c you will be operating in a context that looks nothing like what “builders” experience when they are creating new companies. | Best mentors in big tech for sure, learning curve is likely steeper in startup due to more responsibility. But I may have a lot of distractions in the startup that are not related to my core discipline, which is ML. | YoE is essentially 0.5 in DS, in SWE it is 2. I have an MS degree in ML. I am in the Nordics. | The cognitive dissonance is tough, man... | Thank you. Yes, you're right. But they would reasonably go with another founding engineer then. Which is why I have been gravitating toward the big tech role. | Yep, there's that, and there's also the advantage of building a network of other very talented people that could possibly be very helpful when you decide to branch off on your own. | If you don't already have a big tech company like that on your CV, it'll help you forever. Like an Ivy League in your background - not necessary, but certainly helpful. 

Unless your own company is something you've already started and have interest and the window will close in 6 months for some reason, this is an easy decision. 

Since you didn't say what your own company was, it sounds more like you want to start a company than that you have a burning desire to solve a problem in the world. Another reason to go with big tech and expand your network and gain experience - to learn a ton from the few successes and the many failures. | Your business model is likely more important than the tech if I'm being honest. Where would you have time to engage in conversations and learning that'll help you understand that better? Go there.

Also, big tech companies usually have a lot of competitive advantages as you can network and get mentored by anyone and change teams. And usually it has better flexibility. | Spotify? 😉 | Both seem great options where you will get a lot of experience. Having written that a startup has different challenges than a company who has already been established. In a startup you might need to have many other roles as well.",big tech companies. big tech experience. big tech. big tech job. Financialy big tech
1ll56bo,Gemini CLI: Google's free coding AI Agent,Gemini CLI. Googles free coding AI Agent. Google,12,0.84,https://www.reddit.com/r/datascience/comments/1ll56bo/gemini_cli_googles_free_coding_ai_agent/,0,1750956648.0,,
1lkjxmr,Steam Recommender using Vectors! (Student Project),Steam Recommender. Student Project. Vectors. (Student Project,101,0.99,https://www.reddit.com/gallery/1lkjxmr,32,1750891449.0,"An amazing application that utilizes end-to-end knowledge! Been working for the past year at a health company and this still impresses me. I’m amazed on how many data scientists are able to wield data from numbers into a tangible product! | Great work, and great job building a great interface that's also responsive to user selection! | As someone who is new to DS and plan to pursue it, what level of experience do you have in DS to create something like this?😅 | Cool tech capability, but navigating through Steam tags feels like an easier way to do this (or something practically identical).

It’s also not a guarantee that the tags will sufficiently describe “what it is you like about it.” Two games with identical tag sets may be of very different quality or fit to the same user.

Will this get you the grade? Sure. I mean, I assume you read the grading rubric and checked all the boxes.

But to make this more practical and observationally driven…

Track and compare positive review rates.

The users already quantify their sentiment with a thumbs up or thumbs down. Scrape their profiles and see what other games they’ve reviewed and how they reviewed it.

As you build this dataset, you will see common paths start to form. Measurements like “65% of players who reviewed X also reviewed Y favorably, which is the highest of any game among reviewers of X.”

This will build a mesh/web of game recommendations. It will inevitably push you towards popular games, though. If you want to identify more niche finds, then you can compare the positive review rate among players of game X vs. game Y’s complete sample. Symbolically that’s something like:

> %(positive review of Y | positive review of X AND reviewed both X and Y) - %(positive review of Y)

Which will tell you which games people who enjoyed X disproportionately favor, compared to anyone who reviewed Y at all.

If you reaaaally want to make it sexy, feed the review verbatims into a chatgpt API call to identify common themes in the reviews to back into “why do these specific people enjoy that game.

Again, this is good enough for the grade. No knocks on the effort whatsoever. But in a practical application sense? It’s an amateur execution of a feature that’s already baked into Steam.

Try the building the review mesh/web/archipelago or whatever. | Love this! As someone whose done a lot of research on steam tag recommendation systems, it's fun to see how others approach it.

Last year I did [a talk for the Roguelike Celebration event specific to steam tags and game similarity scores](https://youtu.be/IliQZm5Itng?t=997) that you may find of interest. | I like the idea. How do you make your recommendations? 
I have tested it with BG3 and clicked on things that would make Pathfinder etc a good recommendation, but it recommends some obscure indie games that sometimes have less than 20 reviews. Is that on purpose?  | I think I get the ETL page (I think I would do this with Spring in java or something like that), but how does the tag generation work?

What tools do you use or how do you code this?

edit: just read the readme on github, I never worked with vector dbs before, so it's a little bit hard to get the concept ""how"" they work, but I will read up | Cool idea but the algorithm was completely broken when I put in the isometric soulslike rpg 'No Rest For The Wicked' - it recommended Counter-Strike 😚 | Nice! How long did this take you to spin up? | That's really cool! I've also thought about different algorithms to sort my library as I've been frustrated with how bad Steam is at recommending me what to play.

If you use Steam Deck you could make it into Steam add-on: https://decky.xyz/ | Nice initiative, and cool design and interface. Very easy to use and intuitive.

The algorithm might need some tweaking though, I asked for recommendations given that I like Valheim and it suggested all Half Life games and CS:GO. | Amazing, I really love that I can find some lesser-known games. But it's really missing a filter by platform, so one can also find games playable on Mac or Linux | how did you make the GUI so nice? I see that you used htmx, did you have a template? | Thanks :) moving on to finding art style simularity. | Thank you :) | proffesor taught me how to use chroma db in my undergrad class this sem so I used that knowledge here 🙂‍↕️ | This is great advice, I will definetly will incoprorate this new approach of creating tags into my tag data base moving forward.  filtering out the insightful reviews for tag gen definetly felt limited to me and with this explanation I now see why. Thank you for checking out my project! | First i filter out all the insightful reviews of a stean game, then from there I connect it with a large map of key words to assign the game to. Then i also assign it a main genre, sub genre and sub sub genre, so in practice when you search up a game like rest for the wicked 
maybe that example would be 
Action -> puzzle -> soulslike 

i thdn use the vector from the tags you selected
then i walk up this genre tree doing vector comparisons from there to try and find a simular game

The results are mixed for sure, Im sure the reviews I extracted for that game werent very insightful.


Thanks for checking it out! | 
When creating tags for the 20k steam games I had to primarily rely on steam reviews 
so 

 I first inspected a batch of reviews to learn what patterns spam tends to follow from this I developed:

a sentiment anaylsis since positive reviews tended to be more insightful, 

then I checked for game play meachnic key word frequency and spam word frequency to filter

then I set up a basic regex to remove: non english (lile asci art) reviews and emojiis 

then finally I sorted the reviews by hours played and upvotes

then i assign in to a set of tag from a large data set of tags i created. | ahh yikes, I will try to fix that error
Thank you for pointing it out and trying out my app! | I had a similar result by putting in Valheim and no matter what tags I selected same results. | 1.5 weeks | I will check it out thank you for trying it out! | Thank you for trying it out!
I will look into that | will ad that to my todo list on github
Thanks for trying it! | made it from scratch with tailwind and htmx :) | So you’re new to Data Science? | Secure the grade first! | Good stuff mate | beyound using pandas to quickly do my data anaylst jobs in the past Im very new yes. If I knew about it before college I would have majored in it instead of cs. | thank you | Alright thanks for letting me know, I’ve about 2 months to prepare XD",game recommendations. game Y. Y | positive review. game X. games
1lkpnkk,Pre-Expedition Weather Conditions and Success Rates: Seasonal Pattern Analysis of Himalayan Expedition Data,Pre-Expedition Weather Conditions. Seasonal Pattern Analysis. Himalayan Expedition Data. Success Rates. Seasonal Pattern Analysis of Himalayan Expedition Data,8,1.0,https://www.reddit.com/r/datascience/comments/1lkpnkk/preexpedition_weather_conditions_and_success/,6,1750907822.0,"Curious if someone can explain the polarity of pressure related metrics between the two seasonal groups? Obviously its correlated w temperature. I'm guessing there's some ideal ""absolute"" temperature at which level the ice isn't melting and becoming slippery, but it's also not too cold. Then success tends towards this state? | Were you able to get weather/location data along the routes? Mountains make their own weather, and the weather can be vastly different depending on which side of the mountain you're on (i.e. north face vs south face) and at various elevations.

As far as the features go, a lot of them just confirm what I already know but then there's a few surprises. The wind slab formation risk factor is confusing to me. Wind slabs form from high winds and fresh snow, followed by consolidation over a period of time and then weakening. I don't know why a high risk would be associated with success. And then humidity std dev and variance I don't know how to interpret those - it means there's big swings in humidity over the past N days and I don't know why that would be a helpful thing in general unless it's related to new snow getting dumped over the route and solidifying nicely overnight.

Edit: For temps, it'd be more important to understand how long it was below freezing, in addition to the temperature reading itself | That's a good question and I don't know the answer, but the data suggests that it could actually be an function of temperature and humidity and not temperature alone. | my guess is that it has to do with crevasse formation and routefinding prior to expedition start. If high pressure in the summer means hot, clear skies then depending on the snowpack and the route it can lead to tough routefinding as you have to navigate around more crevasses and crevasse danger just gets worse in general. 

If high pressure in the winter means cold, clear, dry weather then it can create ideal climbing conditions because new/soft snow firms up nicely during the night so it can mean the difference between trying to make steps in waist-deep snow vs cramponing happily on firm, solid ground. | and then finally, my suggestion for improvement is to try to take this a step further and see if you can do some feature selection and feature engineering (with an emphasis on the data during the decision window) and fit a logistic regression model to see if you can get a success prediction model. The idea being that as a decision-maker who has to go make the go/no-go call prior to the summit push, I'd like to have an idea of the probability of success if we make the push under certain weather scenarios | That is a much more precise and insightful elaboration - makes sense to me in my ignorance of not being a mountain climber lol",new snow. certain weather scenarios. fresh snow. high pressure. pressure related metrics
1lkfg6w,How long/which things as a HM you would expect a candidate to speak for in Behavioral interviews?,Behavioral interviews. a candidate. a HM. you,8,0.83,https://www.reddit.com/r/datascience/comments/1lkfg6w/how_longwhich_things_as_a_hm_you_would_expect_a/,6,1750880618.0,"2-3 minutes is definitely not too short. If anything, that is too long. Really practice to get a STAR response to 45-60 seconds. It's definitely possible if you're well-focused.

As a hiring manager, the best interviews tend to get through my protocol (mostly behavioral questions) in far less time than I've allocated. That's honestly not a bad thing. They present themselves at very good at understanding the ""why"" I'm asking the question, not just the answer itself. Also, you make a very favorable impression on people if you can give the panel time back by finishing up the interview quickly. What matters in a job interview is less what you say and more how you say it. 

Furthermore, if they're really interested in you, then pithy responses will provide opportunities for follow-up questions and greater engagement from the panel. You can have great anecdotes, but people start to tune out if you're delivering a 3-5 minute monologue. The worst thing you can do is prevent the panel from asking follow-up questions because the interview seems to be going long. 

It's a delicate balance. You want to provide sufficient information, but you need to be really strategic with your air time. Don't explain everything, just the bare minimum necessary for outlining the challenge, the novelty of your solution, etc. The goal is to engage the interview panel, not just provide information. They'll actually forget most of what you say, but they'll remember how you said it and whether they're interested in getting to know you better. | Behavioral isn’t about work. It’s about culture fit. Pretend to be a normal person. | As a HM, 2-3 min STAR stories are great—concise, focused answers stand out. I’d want to hear clear impact, ownership, and how you handled challenges. For DS behavioral, tie your stories to business outcomes. Try prepare.sh for real behavioral questions—helped me a lot. Just fyi, I contribute there but was a regular user first and highly recommend it for actual interview prep and upskilling. | Thank you so much for the response! I always tend to complete in 2 minutes or so but then i used to felt they didnt get too much detail and dont want them to feel like i have not done the work and thats why i am being succinct. I also saw on a few post online and other subs that it should be 5 minutes, so had to clear things up and post here. Bcz i felt the same too when someone goes long you loose interest and forget things. | can you please elaborate with an example of how I can interpret the why of a question? | I would add outside of STAR stories, I need to see intellectual curiousity out of my candidates.",real behavioral questions. actual interview prep. STAR stories. great anecdotes. greater engagement
1ljsd1j,Graduating Soon — Any Tips for Landing an Entry-Level Data Science Job?,an Entry-Level Data Science Job. Graduating Soon — Any Tips,155,0.9,https://www.reddit.com/r/datascience/comments/1ljsd1j/graduating_soon_any_tips_for_landing_an/,83,1750813181.0,">completed 2–3 relevant tech internships

First and most effective strategy is to reach out/call back all your past internships and see if they're interested in hiring you back. | I haven’t seen your GitHub or resume, but anybody who mentions a titanic survival analysis gets immediately passed on.  

u/forbiscuit has the good advice here. | My tips will be make sure all the jobs you are applying to are on the company website not LinkedIn easy apply and also make sure you check your resume score using online resources like resumeworded. | I manage a data science org with about a dozen folks. My biggest piece of advice: you have to be really explicit on what your masters of data science actually taught you, preferably via demonstrated projects. I've seen garbage tier masters of data science programs from well known universities, and I've seen outstanding quality from land grant universities. There is substantially less variation amount masters of statistics candidates in my experience, and so unfortunately those tend to get weighted more heavily. Ultimately I'd rely more on experience, but education is very important if you don't have full time employment experience. 

For anyone lurking: I would strongly recommend a masters of statistics or a masters of computer science instead of a masters of data science. It is easier to build depth via formal education and build breath via job experience. | DS job market is rough right now. You should be open to non-DS roles that gets you into a large company that offers you mobility. 

I started my career in an inbound call center and did cold calling for a bit. Since I was in the front lines, once I pivoted into an analyst role I was light years better than my DS colleagues at storytelling. Got into FAANG in about 8 years of my career change | Personal Project
* hypothesis to model dev
* if you can, deploy the model into a UI
* write out everything
* be able to discuss failures / success
* post about it on LinkedIn | Honestly?  If you can't leverage your internship, get a data analyst job and move into data scientist position from it.


At my company at least, you are either a subject matter expert and moved up to a data scientist role, or you are already a skilled data scientist being brought in.  We do almost no hiring of data scientist without corporate experience.


Hell, I'm an experienced data scientist and I've been trying to change industries and am barely getting any traction because the market right now just sucks. | It's not easy, sadly, but don't let that discourage you! My advice: practice a little; do some Kaggle projects; make a little local LLM-chatbot. Throw them on GitHub! It tends to help a ton when you can show off concrete skills and products/use-cases. 

Other than that, keep hunting and don't let rejections get you down. Data science may be a tight market, but you'll find something eventually! Don't forget to look at local governments (municipalities and such). There's quite a bit of demand for advanced analytics/predictive modelling there, usually. | Not so much advice of how to land a job as such but rather encouragement to invest equal parts of time invested to landing a job as to starting something of your own. 

Sometimes the disappointment of rejection can be soul destroying and demotivating. If you see a gap in the market, spend time building on your idea. Not only will it help keep negativity at bay but you may find inspiration to transform your idea into a reality 

Best of luck | Start as a BI developer or data engineer and stay engaged with your peers to keep leveling up your skills, once the opportunity presents itself professionally, jump on it | Have 4+ years of experience, know every single technology they use like the back of your hand, get a PhD, know someone at the company, and maybe you can get a job for $95k/yr 👍 | Do you have a portfolio or product? | Embrace the idea of speaking about use cases. 

All of your projects should have a use case. | I think the adage “*it’s not what you know but who you know*” really applies here. Utilize your network. I saw someone else here suggest reaching out to the companies you interned for. I’d also look up some local coding meetup groups and make some connections there, I’ve seen these be really worthwhile | Interviewing is its own skill you’ll need to practice. I recommend 

1. Reading this https://a.co/d/ewMrso6
2. Doing mock interviews on Prepfully 

If you’re applying to some bigger companies you can actually find current DS working there to do mock interviews at prepfully, it’s what got me my current job. | Yes, fresh grads do land data science roles but the market’s more competitive now, so strategy matters. Focus on applying to roles you’re genuinely a fit for and tailor your resume with ATS keywords based on the job description. A few high-impact, real-world projects on GitHub matter more than coursework especially if they show clear business value. You can use datasets for your projects from platforms like Kaggle and StrataScratch. Also, start networking early with people a few years ahead of you, and brush up on SQL, pandas, and ML basics to prep for interviews using platforms like LeetCode and StrataScratch. If you don’t land a DS title right away, roles like data analyst or ML ops can be great entry points. | I’m here for the comments. I will also be graduating with MS in Data Science. | I am nearing the completion of my computer science undergraduate studies, I am considering applying to my university's data science master's program. Could you share your experiences transitioning from a computer science background? Were there any particular insights or pieces of knowledge that you found especially valuable before beginning the data science program? | I am somewhat new myself. However, what helped me open the doors was making something which solved an IRL problem. | Is msc data science after bsc in the same worth it? I've done bsc and when I checked the syllabus, a lot of it was same | I m doing a masters too,just got an internship in roche a swiss pharma company my mentor n manager told me for an extension  tht when I inquired for, yes extension is possible not guaranteed it depends on projects,budget n all.also keep apply other open roles in roche ,n having an experience with internship with us it's a good start n u know about the clinical trials data n work.and wht we do. so. just keep learning n u will be fine. | [removed] | Networking and creating data science content and posting online, to increase your visibility.  

Honestly any other idea is bullshit to me. There are a 1000 people crafting their resumes to exactly what ATS wants. | Just curious, what sort of stats courses did they have in your DS masters? | hey, hope u're doing well.
I'm interested in what u did as I'm pursuing the same thing, wanted to know where should I apply for internships in Dubai. | Tailor your resume with ATS keywords, showcase 3–5 real-world projects on GitHub, and apply smartly to roles you match 70%+. | I have 3 years experience as a data scientist and did a master's in statistics. I recently landed an entry level data scientist role. They concentrated more on the basics of ML during the interviews. I want to move to a better known company. Where do I start? Application wise and preparation wise | Go crush some Kaggle competitions | This and reach out to local jobs. Don’t think about remote for first role imo | Thanx that's a great idea!!! | This. Thats the main benefit of internships. | Add the Petals, Penguins, Diamonds, Boston Housing Market 😅 | Agree with you about titanic. All it tells me is you know how to copy code and that you're unoriginal. | It's not super interesting....have to work on it as well | Is resumeworded a recommended resource? | How come LinkedIn easy apply isn’t recommended? | I graduated with a computer science degree, specialising in big data. No internships and work experience as I was an international student and they don't allow internships during that period.

What would your advice be for me to go into data science? What do I need on my resume or is it just a pipedream

Would trying to get a data science internship work?
Should I become a data engineer first? | Yes. I’m soon to have an admittedly shitty DS masters and know my resume/projects will have to do the heavy lifting | not to be overly pedantic but it’s breadth, not breath | What were some of the better data science programs that you came across? | Thank you for the tip! | Agree. I'll also add that sometimes DS work or even DS jobs can be found with non-DS titles like business analyst or statistician. These might draw from a different pool of candidates and you may have a chance to stand out. | We have very similar paths. Started in the center and worked my way up. Being a former front line worker helped to learn the business. However I didn't go the DS route, currently leading a bot/automation team. How was the transfer to FAANG? I'm around my 4th year mark | Good idea. Did this personally work for you? | Thanks this helps a lot | Thank you, that makes total sense. | You forgot papers in applications, doing novel data science. Bonus points for NeurIPS papers. | I feel your frustration | No I don't. However, I am working on an interesting personal project. Do you think showcasing one end to end ML project is enough? | Thanks buddy for such detailed insight! I really appreciate your extensive feedback. | I will also be graduating (next summer) and these comments stress me the fuck out | Before beginning the data science program? Can you be more specific?

However, if you are pursuing DS you should know that only a few DS programs are well laid and planned to produce actual data scientists. Most of these so-called ds programs are just there to make money. But again, most companies won't even consider you for roles if you don't have a masters. 

Fun fact: according to LinkedIn, most data scientists hold graduate degrees, followed by phds and very few bachelors. | Get a few years of business and/or research experience or that master’s is useless. | Thank you, will definitely do! | That makes so much sense!! | When I say this, I am not exaggerating: NONE | Sorry not from Dubai. But what worked for me was before the internship application season, I began applying to as many companies as I could, and received 2-3 interviews. I was able to grab one since I demonstrated a mini proof of concept in the second round. | Did tailoring your resume with ats keywords personally work for you? I hear copious amounts of mixed opinion. | Would you be willing to list out the ml technical questions you were asked? | Do you have some success stories? | I'm something of a Palmer expert, myself | Yes, they show you how well worded is your resume. | Do you enjoy competing with literally thousands of people for one opening?

The level of effort is a barrier to entry and self-selects a smaller pool of candidates. | Yes, get a job as a data engineer or data analyst first, and find ways to build your stats knowledge on the job. It is a really tough market if you don't already have work experience. | There's likely hundreds of good ones and hundreds of bad ones, instead of rattling off what Ive seen from my limited sample, here are some things I look for if I want to know more about a candidate's degree (not something I'd do at the resume review stage but instead as prep for the first interview or as a differentiator after the first interview)

1. What part of the university is the degree from? Is it from the business college? Math department? General college of arts and sciences? The closer to Math or Comp Sci it is, the more rigorous it probably is. If it is offered by the business school, there's more business concepts and less technicals. That isn't necessarily a bad thing, but in my opinion it is a lot easier to learn business concepts on the job than it is learn statistics. 

2. What is the degree, really? Masters of Data Science, Masters of Applied Data Science, Masters of Analytics with a concentration in Data Science, Masters of Data, Masters of Applied Statistics with a specialization in Data Science, etc. That can make a huge difference. MS Stats with a specialization in DS is wildly different from an MS Analytics with a specialization in DS. 

3. What kind of program is it? Online programs can be top notch too these days, but typically only if they are synchronized with an in-person class in a semester (or my favorite, half semester) format. Go at your own pace degrees easily devolve into checking a box and not actual learning. 

4. What tools are taught? This isn't always obvious from a cursory glance like I do, but if you're evaluating programs I think it's important. SAS, SPSS, etc are junk in industry unless you want to work for the government or some other specialized field. R is fine, Python is preferred, a blend of both is even better. Forget learning Scala, Haskell, Julia, Go, etc from a class, do that on your own time if you're interested, those are hobby languages at this point anyway. Java and C++ are cool for comp sci but not actually used in the real world for DS. | The only reason I was able to get my current DS role with a MSc over the PhD candidates, was because of showcasing personal projects and dashboards on my GitHub. One example was I used Python to web scrap used car data, then built a predictive model with a front end dashboard with various stats and filtering mechanisms. Manager reminds me constantly how this made me stand out over all the more qualified applicants. I hope that helps! | Talking about personal work during interviews did help me. It’s also the advice I give my students. It’s the least you can do imo. | It would help for sure | Don't you have projects done during your MSc? | Recent grad... stressed | Wow thanks. The LinkedIn stat is surprising. Anyways this is helpful and I'll keep it in mind.. if you want to check out my University's DS program there u go: https://professionalprograms.umbc.edu/data-science/masters-of-professional-studies-data-science/ | They wanted to know my understanding of the basics of statistics. He asked how do you select features in the first step even before we begin feature engineering etc, asked some terminologies, confidence interval, t tests, z tests, chi square tests. Made me explain all those in detail. Asked about my experience, some technical questions, asked about bagging boosting, pca, the algebra behind pca, some sql questions, some pandas basics, some logical reasoning. In the last round they concentrated on stats more and told ""everyone can use .fit() and build a model but we check if people know the basics on which they are built.""

Know your metrics for model evaluation. For ex if you're solving some classification problem, know what is precision recall roc auc curve F1 score and other metrics. Similarly for regression or any other ml algo you learn. Model evaluation metrics are vvv imp. Solve case studies based on the company you're applying to. | Would it be advisable to apply for data science internships as well? | Aaah this is such an indispensable advice. Thank you. | Thank you! | Yes I do....for example, I worked with a humongous NYC taxi dataset using spark....performed data cleaning and used xgboost to make price predictions....created a website where user inputs features such as date and time and the xgboost uses these variables to make predictions of taxi demand....the output is then visualized over NYC as heatmap.

Do you think it's interesting enough to be a part of a portfolio? | Isn’t it frowned upon by most academic programs to share your work publicly? I have many projects I’ve done in school, but I haven’t used any in a portfolio because of this. | Thank you so much! This is an invaluable piece of information!! | Yeah I suppose. The bar wouldn't be too high for fresh graduates | For original homework projects that you did for a class, it is perfectly fine to share your work publicly. You are the owner of that work, not your school.

For any academic papers that you published that are behind a journal paywall, it is frowned upon to share said work from the papers. | Only if the data is protected or they own the project syllabus. You can share your work, just not anything with a copyright or patent | Why though? They don't have patent over your work.",data science programs. data science internships. land data science roles. data science. | DS job market
1ljg8dx,Why would anyone try to win Kaggle's challenges?,Kaggle. Kaggles challenges. anyone,359,0.94,https://www.reddit.com/r/datascience/comments/1ljg8dx/why_would_anyone_try_to_win_kaggles_challenges/,69,1750783666.0,"Because we all want to save people on the Titanic  | Some people do things just for experience, exposure, and just cause they are passionate. Some use it as a resume item (which is meh). Most competitors are academia students or chronic kagglers. People high up the leader boards probably either have cushy jobs already or able to use that to leverage contract gigs. Like you I probably won’t do Kaggle, having done it in my undergrad since it’s just not worthwhile at some point in your career. | Some companies like to hire people who do well at Kaggle, and they can pay very well, so it's one way to boost your resume. But in my limited sample size of 1, in a previous role I worked with a very talented staff level data scientist who was pretty up there on Kaggle leaderboards and while her work there was impressive, her day-to-day work was lacking and despite being at the company longer than a lot of us, didn't have the business and domain knowledge to push projects forward the rest of us were. Always got the feeling she thought the work we were doing wasn't important or interesting enough so didn't really try. | There are clubs at big schools with access to a lot of resources that work on these together. | Too busy with the Titanic and Netflix datasets | If I have no job and need to stay technically fit and want to improve my resume, I see very little downside to giving it a shot assuming I believe there is a chance I could actually win or produce decent results. | This is like asking why someone would compete in the Olympics or try to become a chess grand master.

  
Take a few minutes to browse through the list of Kaggle grandmasters. Those are all exceptional individuals. | I like making models. I mean, I assume I won't win, but I give it my best effort. Sometimes I try to win the playground ones for the swag. Some day I'll succeed | > Those are ground breaking problems which to me would probably require years of academic effort without any guarantee of success. And IF you win you get what, 50000$, not even a year salary in most positions, and you have to split it with your team?

You get $50,000 and have increased your job prospects massively. | Because it's fun, and you do it for fulfillment and to challenge yourself. It's the same reason people train to win their local 10k or half-marathon race even though the prize is often a $100 gift card. Or why someone would invests thousands of dollars and hours into golf. | I saw that one; it looks like most people are just going to fine-tune ChemBERT and the like. | I've seen three reasons for doing Kaggle:

1. It's geeking out, basically a hobby.
2. CV.  Most businesses don't care but you only need one that does.
3. Professional development.  Lots of people get into Kaggle to learn ML.

The last point is irrelevant for the winners - anyone scoring above the median is focusing on stuff that's not really relevant outside Kaggle. | Could get lucky too. Just guess and checking and maybe you’re dumb enough to try something novel not understanding the probability and bam you got it. | When they have nothing better to do and/or they hope it would open them a path to employment at those companies.

Most professionals who are already solving the same problems for the companies at 20x the reward will not waste their time even browsing kaggle. | 50k is like 25 times my monthly salary, not everyone lives in the US. I imagine someone in a poorer country would be way more than 2 years | I stopped looking at them when the news came out about a rash of cheating.  | Gotta kill the spare time somehow | For people without a lot of career experience it’s a way to show something quantifiable on their resume: “built a model for y competition which was in the top 10% of submissions”.

At least that’s how it sounds in their head, I got rejected from a job after acing the technical because a DS on the team noticed I had used Kaggle.

Now if you actually are in the top 3 that’s pretty impressive. | Yeah I've looked at it doesn't seem realistic alone but hmu I need stuff to add to my portfolio so I'm down to join a team | out of desperation, the need to impress (which usually ends at having your ideas stolen and yourself discarded), or because they have fun and fulfillment while doing it | I did a bunch of those. Didn’t win shit but learned and improved a lot. | ROI isn’t always financial. But for many Kaggle participants, it’s not just about the prize.

People join to learn, build a portfolio, collaborate with top talent, or even get noticed by recruiters. Some treat it like a sport, solving hard problems for the challenge and the leaderboard.

As for sharing notebooks/IP: in many comps, the rules require sharing for transparency or leaderboard eligibility. But most top competitors are there to build reputation, not just cash out. For them, Kaggle is more of a launchpad than a payday. | >500000$, not even a year salary in most positions

That seems like a...wild overestimate. | I think kaggle is addicting and often addicts do not have a chance of getting something in return! | Because you're trying to get noticed | Money. | hmm, intersting | Companies that host competition many times hire you full time depending on your potential and capabilities displayed in the competition 


Also I get your point and it’s valid , that’s why I can find only one reason as to why ? | IMO it's mostly an educational tool with a repository for pre-cleaned datasets, and also a signaling tool for people (especially non CS/DS majors) who make the effort to try these problems | Can you give brief information about the kaggle challenges ? | Maybe I can add a few cent why anyone tries to win Kaggle's challenges (since I have actually won a few).

Actually, for the first few years I did not try to win, but learn as much as possible from working on as many problems as possible. And having the kaggle leaderboard is a valuable feedback, how your skills are improving. 

Having started my data science and kaggle journey 7 years ago, I must also say that over that time my jobs and compensation were correlated with my success on kaggle. I was looking for jobs that have high synergy with kaggle, mainly because the work was related to building state of the art prototypes. Kaggling helps your career, a bit because you can use it as reference (but you need to have the right people on the hiring company which actually give a s\*\*t about kaggle results). Or if you do really well you might be approached by competition organizers. But the main reason is the drastically improvement in skills (at least if you work on real competitions and not Titanic or similar beginner courses). And its not only about coding and modelling, but most importantly validation and solid experimentation. Additionally working under time pressure and within teams. Those skills become apperant immediately in job interviews or in projects.  

I agree with OP that prize money is very negligible reason to enter. | That feel when your model saves some, but Jack still lets go 😔 | I kaggled at that joke | Turns out the real magic was when you merge Titanic with Wine. | Cuz we believe that the score will go up and up... | Holy shit I got this reference ! | I don't know man, I know someone who got hired by a top tech company's research department. They approached him after he won a Kaggle challenge | Someone who is really into solving puzzles for the sake of solving puzzles just needs to pretend whatever mundane business tasks they’re given are interesting.  | There was a University program I looked at that would consider Kaggle as part of their admissions process. | Every Kaggler I've worked with has been an insufferable jackwagon. | NVIDIA in particular is very into Kaggle experience for some of their ML teams. | Hey man I have to start somewhere | Yeah searching for a job was actually demoralizing and having a side goal with any stakes was helpful.


Also I love science and practicing data science w outcomes related to science is deffo more interesting to me than business consulting. | I’ve seen a few winners write ups on Kaggle that mention getting laid off or not having a role after graduation and having a few months of free time. Seems like a decent use of time in that case. | How do u even cheat | > I got rejected from a job after acing the technical because a DS on the team noticed I had used Kaggle


This doesn't make sense. How did you even determine that was the exact reason? | How is using kaggle a reason for rejection? | To be fair, Jack would have survived had Rose moved her ass over. | Not surprised. 

It's really, really hard to win a kaggle challenge. | It wasn’t kaggle but after I won a competition in my niche I was approached but a company that took me from $100k CAD to $250k CAD | I think OP was saying some people use just their contributions to the challenge as a resume item, which is meh. Winning a challenge will definitely be noteworthy. | That's motivating! | Something about data mining the solutions from Kaggle. It's been a few years so I don't remember exactly but they cought at least one team cheating to win money.  | The interviews were for a role on a different team in the same company. I had a friend who already worked on the team who told me about it later. | I assume it might be because Kaggle winners usually post their solutions on the competition forum, and they assumed he got the ideas he used in his technical from past competition winners. Something like that. | Don't you start mansplaining what she should have done. 

Her shipwreck debris, her choice.

She did not give affirmative consent!

/s (just in case it's needed) | Who cares if it made no sense? It moved the ending of the movie along! Stop thinking and consume, normie!

/s | mmm | 

Man i won a Nvidia-llamaindex dev contest and they didn't even post about it on linkedin.


Then they sent me a w9 for the rtx 4080 I won, even though it was worth half that since they had just released the 50 series.


Fuck those guys. And their software was literally garbage code  | Would you be willing to elaborate on why it caused you to be rejected? | Gud1 | mmm. Pie. | I think I remember this contest. It was last year in late 2024, right? Didn't get the time to participate but it's cool finding someone who actually won | post about it yourself. | I got told second hand so I might have some of the details a little off. What I heard was that the hiring manager (HM) had liked one of my projects but wanted to get a second opinion from someone with a more technical background. So the HM consulted with a Data Scientist on an adjacent team who as far as I know never looked at the project, as soon as he heard that it was on Kaggle he dismissed it and said that Kaggle is just some academic playground with cleaned datasets that demonstrate no actual competence. | That's correct. 


Man the other winners had the most garbage, regurgitated projects too.


Employee retention, THREE auto story writing apps, web research app.... like all of these are your basic undergrad clone a repo from github and put it in your portfolio type projects | I did. It got 'hundreds of views'. An old boss who's somewhat a mentor messaged me. That was about it.


But let's be real. People dont care about real AI use cases, and CERTAINLY not education. They're just riding some nvidia hype wave to make a buck or whatever  | Ah. Thanks. I've only just started picking up machine learning and have been using it to learn so I appreciate hearing about how it's viewed in the professional world.",Kaggle winners. Kaggle leaderboards. Kaggle experience. Kaggle. many Kaggle participants
1ljiuzx,A Breakdown of RAG vs CAG,CAG. RAG. A Breakdown,42,0.92,https://www.reddit.com/r/datascience/comments/1ljiuzx/a_breakdown_of_rag_vs_cag/,5,1750789557.0,"Thank you for the dynamic explanation! I particularly like the hybrid approach's visuals. Like many Data Science shops nowadays, my own organization has its RAG use cases. I'm going to recommend my team your resources and video if the Hybrid approach seems viable for upcoming projects. | I have not worked with LLMs, but I am curious.  
Based on how I undersyand what you present here, i get that CAG would be interesting in smaller, but perhaps highly specialized solutions.  

Is that correct? | Really interesting! 

I have a question, from the article it says: ""Instead of retrieving document chunks and injecting them as plain text at inference time, CAG works by first feeding the documents through the model ahead of time. The key difference? It doesn’t store the raw documents, it stores the model’s internal understanding of them."".

 So you mean do a one-time step of passing your documents through an LLM for it to return a string about them (maybe a summary, important points, whatever makes sense I guess), then in your actual application you cache this string in your regular LLM calls? Am I understanding correctly? 👀 | Cool! I'm glad to hear it might be useful! Let me know if you have any questions! | I think, as a general rule of thumb, yes!",document chunks. inference time. many Data Science shops. CAG. time
1ljhav8,Has anyone prepared for Doordash DS interview? Looking for tips and resources,Doordash DS interview. Doordash. resources. tips. anyone,37,0.9,https://www.reddit.com/r/datascience/comments/1ljhav8/has_anyone_prepared_for_doordash_ds_interview/,14,1750786074.0,"A/B testing, aka statistical testing should be relatively straightforward on the technical side. Typically, they are two proportion z-tests. Online it’s clicks/impressions, but it can take any form depending on your response. 

Crushing the A/B testing part of an interview is mostly in knowing the business aspects. Is your response non-gameable? Does the response measure the intended result? Is it at the appropriate part of the marketing funnel? Have you randomized your test groups? Are the findings relevant to the group of customers you want to learn about? Is your test sufficiently powered?

If you want to properly prepare for the A/B testing component, then you need to train your brain to think like a product manager. Otherwise you run a silly test that accomplishes nothing and wastes resources. | I went through the full loop. I didn't get it and they were pretty limited with feedback. 

Fwiw, My advice is to really study their business model on all sides. | [Trustworthy Online Controlled Experiments](https://experimentguide.com/)

Doordash is an interesting company from an experimentation standpoint - they're a 3-sided marketplace which has some tricky gotchas. I'd recommend taking a look at their [tech blog](https://careersatdoordash.com/blog/balancing-network-effects-learning-effects-and-power-in-experiments/), they have a couple posts on experimentation in this sort of environment. | Get really really good at the postgresql questions and all the other ab testing / stats stuff people are saying. | Very product heavy, technical stuff is easy, as others have said, think about the product nuances and how it impacts the DS and experimentation workflow | Just curious, how is your prior experience and how were you able to land the interview? Been applying to DoorDash but I don’t have product/tech related DS experience | I recently appeared for one. Wish someone advised me then, but fully concentrate on product sense part. Treat it as a product management interview. Be clear in what metrics you want to use, articulating pitfalls, why the metrics, guardrails etc. The Designing of the Experiment part is simple and they don’t even expect you to calculate anything. But the getting the part where you decide on what to experiment for is way more important. There are a few set of case questions they cycle through so there isn’t even a great deal of variety. | For A/B testing specifically, you'll want to nail the fundamentals: understanding statistical significance, power analysis, sample size calculations, and how to interpret results when there are confounding factors. The tricky part isn't just knowing the theory but being able to apply it to real DoorDash scenarios like testing delivery time estimates, driver incentives, or restaurant ranking algorithms. Focus on understanding when A/B tests might not be appropriate, how to handle network effects in a marketplace, and what metrics you'd track beyond just conversion rates.

The product case portion will likely throw you scenarios about optimizing driver efficiency, reducing customer churn, or improving restaurant partner satisfaction. They want to see how you think through trade-offs between different stakeholders in their three-sided marketplace. Practice walking through your thought process out loud, because they care more about your reasoning than getting the ""right"" answer. You'll need to demonstrate how you'd measure success, identify potential pitfalls, and think about both short-term and long-term impacts of your recommendations.

I'm actually part of the team behind [interviews.chat](http://interviews.chat), which helps candidates navigate exactly these kinds of complex product and technical questions during data science interviews. | Do they only allow postgres syntax or it can be mysql too? | I don’t have product experience either. Just dashboarding and most recently working with regression models. Something to consider, I applied more than 6 months ago and they kept my profile and reached out now. | Hey! I DM’d you, hoping for a quick chat. Please let me know if you’d rather reply here. :) | They let you do whatever you want. Even in R | Gotcha, how many years of experience do you have? | 5",product sense part. product experience. complex product. part. technical questions
1ljp64t,How much time do you spend designing your ML/DS problems before starting?,ML. your ML/DS problems. you,16,0.9,https://www.reddit.com/r/datascience/comments/1ljp64t/how_much_time_do_you_spend_designing_your_mlds/,20,1750804481.0,"Writing up a design document or RFC and getting feedback is definitely best practice. Make it clear what you are addressing and what you are not addressing (eg, is this supposed to be a production ready model? If so, are all the features available at inference time? If not what's the plan, is that a separate PR etc)

If you're a junior person on a team with senior people this is crucial. You'll get valuable feedback from them and also avoid the painful situation of asking for code review with some kind of fundamental conceptual error in it. | I jump in immediately then fail spectacularly then go back to planning. | I like to jump in and make a quick MVP then show it to the stakeholders and ask for feedback. Then I start going in and adding stuff, refactoring code to make it production ready, adding features, etc. 

For all the bullshit with agile and scrum this is the one part that’s really good about it. You don’t want to spend 2 weeks planning and 5 weeks making a very fancy production ready product then show it to the users and they say, “this is not what we were looking for” | This is like, most of what I do. When the plan is detailed and sound, the coding is usually quick. | 1 sprint | Someone mentioned a design document and I think that’s a great idea. I’ve found I like designing something quick and dirty, like on streamlit for example, just to express my idea and get the concept across, then once it’s iterated on and adjusted I can spend more time building out an official, production grade tool | If I plan before trying I typically miss 80% of the thing. I play around, try some things, google other things, read a bit, and at some point it's time to do the actual design. But yeah I need a stage where I write things down and think them through.  | Different ways world for different people. I tend to like making a fairly rough plan and figure stuff out as I build, test, and iterate on a POC. I tend to find that getting detailed feedback on ideas isn't massively productive if others don't know as much about the model or problem as I do. So it's a rough plan, build test and figure stuff out, POC good enough to test and then document.

Works for me, so I keep doing it. | I saw you are a staff level IC from your previous comments. When you are making new design docs are there people above you reviewing your work as well? | Thank you this is very helpful | Pretty new to this, but can you elaborate more on cases where features won’t be available at inference time? Aren’t the features supposed to be built during the inference pipeline? A genuine question | Maybe not ""above"" me but I always try to get feedback, yes. | Sure. Let's say I want to train a classifier to predict ad clicks. I collect a bunch of historic data and I train my model. Suppose one of the most important features in my model is ""number of web pages the user visited in the last hour."" 

But suppose that the database that the trained model will have access to in production is only refreshed every three hours. In that case the feature I mentioned would not be available at inference time without rearchitecting the database, so including it as a feature in my model would be at best a proof of concept, but it would mean that my model is not production ready. | Thanks for the explanation. But doesn’t that limit you to not use this feature when training the model? | To clarify, it would mean that I shouldn't use it during training assuming that I want to do real time prediction. It would be fine to use it during training if I wanted to use the model to do daily batch predictions. Whether and how I use a feature during training will depend on how I plan to use the trained model. | No, I think you're confusing training and inference. The feature exists in my historical data and is available during training, but not at inference. | Yeah that’s exactly what I meant 😊 So basically if you’re using a model for batch predictions, then you also have a different model for when that particular feature isn’t available to you during prediction? Isn’t that more overhead? If I misunderstood then please correct me. Thanks for the replies I appreciate it | I'm sorry but I might've lost the thread of what you're asking. Details about what data will be available and when in the production environment do not place any kind of theoretical or a priori constraints on model training. Sometimes it makes sense to simply try to find the best possible model of Y, given all available data, and then to separately sort out how to make a production-ready version of that model, depending on production constraints. One reason for doing this, in practice, is that you might find that certain features currently unavailable at inference time improve model quality so much that it is worth persuading the organization to MAKE those features available at inference (if our ability to predict ad clicks goes up X amount when I include very recent data, it might be worth spending the money/time to set up data streaming with Kafka or something; this sort of question comes up all the time).

And yes, it may make sense to have two separate models--one for real-time inference and one for batch inference. It just depends on the context. For example, if the batch model tends to be better because it can take into account more features, you may want to initially score an event with the real-time model, and then later in the day do batch inference and then update the score in some way. This might not make sense in the context of predicting ad clicks, but it may very well make sense in other contexts like certain kinds of fraud prediction. | That makes much more sense. I guess I lost you before but this is great. Thank you much appreciated | You are welcome!",model training. inference time. model quality. real time prediction. certain features
1ljhuda,How to tell the difference between whether managers are embracing reality of AI or buying into hype?,reality. AI. managers. hype. the difference,28,0.87,https://www.reddit.com/r/datascience/comments/1ljhuda/how_to_tell_the_difference_between_whether/,22,1750787278.0,"Drop the technical stuff because AI will soon be doing all of it is awful, awful advice, and I'm very sure it comes from people with little technical expertise and/or little knowledge of current AI capabilities. | So, the further away you are from doing something, the easier it becomes to underestimate how easy it is to do, and how easy it is to replace the person doing it.

I think that's largely why leadership (not management, actual executives) are so bought into the AI hype - because from 10,000 ft up, everyone looks like an ant. Your average CEO of a Fortune 100 company hasn't touched a piece of code in like 20 years. To them, everyone is replaceable. And when you tell them that AI can automate all the technical work, they are extremely likely to believe it because as far as they're concerned - how hard can that be? It's just code!

Management is different - and from what I see, most managers aren't really buying into it but are being forced to anyway - by executives. 

My golden rule as it relates to technology is that there are 3 groups of people whose opinions I never believe:

1. Executives

2. The people selling me the technology

3. The people who own the infrastructure on which the technology runs

Yes, your CEO thinks AI will render devs obsolete in 5 years. So does Sam Altman. So does Jensen Huang and Satya Nadella. So does the CEO of Accenture, Deloitte, and every other consulting company. I don't give a shit what they have to say - because their personal beliefs are going to take a back-seat to what is good for their companies - which is to get as many people spending as much money as possible on as much AI as possible.

You want an honest answer? 

Go ask the people who are having to make AI work inside actual companies and who are expected to *greatly* reduce the effort required to deliver projects and save the company a bunch of time and money. Ask them how they feel about AI (hint: not good). | Usually, if someone can just provide one single concrete example of a place where the a I would be good, then it could be good, but it's weird, because the people that want to implement these extremely expensive, a I projects I can't even provide a single example of what it would do, and then you should run | You're absolutely right to question the ""AI will take all the technical work"" narrative — it's more hype than reality, especially today.

While some low-complexity tasks are getting automated, much of data science and engineering still requires *judgment*, *context*, and *iteration*. Even the best AI tools (like [kivo.dev](https://kivo.dev) — which helps streamline analysis and reporting) still rely on smart humans to guide them and validate outputs. Prompting alone won’t replace debugging pipelines, understanding stakeholders, or making decisions on trade-offs.

It sounds like you’re being pushed into a role that strips away what energizes you. Long-term, burnout and skill erosion aren’t worth short-term appeasement. Aim for a role where you *guide* AI, not surrender your technical edge to it. The real value is in the hybrid: someone who understands both the problem and the tooling — and can translate between humans and machines. That's where the future (and the leverage) really lies. | Even if there's more low-code/no-code solutions, being able to figure out what those solutions are doing under the hood (there has to be code somewhere) and whether or not it makes sense and produces the desired results for a given use case is valuable. I'd run from any organization that disagrees. | The distinction between technical and non-technical does not make sense. I don't know what your role is exactly, but in data science if you just have ideas with no technical ability, your ideas are not as valueable. And, at the same time, if you're only technical with no foresight or creativity, your value will remain super low, too. | Are there any MVPs with potential to achieve any of the supposed goals? Is it just your role that they seem to want to relegate to ""non-technical""? Are you scrambling to keep up with actual work or trying to keep up with the constantly changing directions, or both? | I'm sorry you're in this situation. Those people have no business managing anyone. | I think the novelty and innovation comes from humans to solve problems, even the technical ones. From my experience the AI is missing some novelty and obviously struggles to solve custom problems. ""Simple problems, simple solutions"" | My small experience and the words of one of the main guys at Posit, and Yann me Cunn, all indicate AI can help you code better. And that's about all we should be doing with it in our field at the moment. Still, some people are super keen to use hallucinating AI to make tables and charts.

A lot of people are experiencing difficulty with ai hype right now. Glad I am not alone in a way, but feel sorry for you! | I find it helpful to remind myself that people in Silicon Valley with a lot of money have effectively been lobotomized, both morally and intellectually, and should be viewed as something like scientologists. In my experience the level of AI bullshit one experiences is to some degree a matter of how much the owners of your organization (not the managers, the OWNERS) are either a part of this cult or desperately want to be. 

On the other hand, I've also found it helpful to embrace it to a limited degree. These things are genuinely interesting, and there often are really compelling business applications, though they're often not what the managers imagine. Good data scientists and ML engineers can try to shape how these things are used and do something worthwhile, trying to harness the enthusiasm of the executives. Data scientists who just constantly crab about it are probably gonna get excommunicated as heretics lol. And to be fair if your stance is that there's really no better approach than one off regression models for every business problem then it probably is time for a wake-up call. 

Good luck out there. | As a technical person, you have an incredible advantage against 99% of the people confidently expressing opinions about AI:

You can actually apply AI to your use cases, and judge for yourself whether you're being sold a bridge.

I'm not in data engineering, I'm more like a dev/SRE. But I promise, the higher up on the skillchain you land, the less commonly you see people using AI in their jobs, because people past a certain threshold who are used to solving complex, enterprise-level problems, find AI to hinder more than help in many cases. | I think we're not jumping into AI now, but the idea seems to be that my job will really be just doing a lot of requirements gathering and 'translating' and those will go to purely technical teams or eventually AI. In theory it my make sense, but in practice, I feel like some aspects of my job are where having both subject matter and technical expertise will make a difference so that you don't have to keep going back and forth to somebody and figure things out on your own. I was hired to do data science/analytics engineering and this seems like they're turning me into a product manager. I'm confused honestly lol. | They’re also constantly moving the goalposts. They say that AI can get all the work done but then it can actually get it 90% of the way there and it’s the 90% that’s all boilerplate. Try to deliver something to Satya and tell him yeah there’s the finished product but actually it’s 90% complete and the remaining 10% is the hard part that AI can’t do but it’s definitely finished. See how he reacts. And yet he’s pushing this hype to external companies with other tech executives that the technology is there already to completely replace people. If the fact that it’s not there is pointed out then they move the goalposts and say yeah but it’s coming next year or the next few years. Whatever is needed to keep the hype train going. Nobody is paid for 10% garbage.  | Yes, the reason AI is now so hyped is because it's finally an product that the second and third groups can package up and sell to the first group. But there is no actual evidence that what they are selling will deliver the results they claim yet.

AI was just as fun and cool when it was AlphaStar and AlphaGo spanking humans at complex games, the only difference is that now it's a product and AI companies might turn a profit as a result. | I only heard one believable example. It was from someone saying he worked for Google. He was saying that it did a lot of the work but that it was only possible because of the highly structured processes, tools and codebase already in place. He explained it as basically a non AI-based library of code snippets that were suggested to the user by an AI. It sounded like a useful way to use AI, but also impossible for most companies. | I feel the same way. I am a data engineer by title, that’s still the crazy part. It feels like my role is turning into something very different than what i was hired for | it's not just my role but it seems that's the direction they want to take my entire team in - basically, the idea seems to be we gather and develop the solutions flesh them out in a way they can go to another group or AI if feasible. 

It's both - there's so much lack of clarity in the work I am doing. I'm not being trained, explained, it's like I jumped into something and feel like I'm trying to find my way without a map but just clues along my journey lol. | Is the company relatively large in terms of market cap/# of employees? If so, just smile, nod and go with the flow to make it seem like you're on board with whatever hair-brained ideas they're touting.

Were you ""voluntold""? | Yeah, I am doing that for now and see where this goes. This isn't going to happen immediately but this seems to be the goal for my company. 

Not sure what voluntold means lol | Voluntold -- a portmanteau of volunteer and told, meaning that someone was told to participate in something without necessarily wanting to in the first place. | Kinda I guess-because my job description and what they’re discussing seems to be very different. It’s like my data science role is turning into project management.",AI companies. AI. hallucinating AI. current AI capabilities. actual companies
1ljs8wq,Masters in DS/CS/ML/AI inquiry,Masters. DS/CS/ML/AI inquiry. CS/ML/AI,6,0.71,https://www.reddit.com/r/datascience/comments/1ljs8wq/masters_in_dscsmlai_inquiry/,8,1750812844.0,"I genuinely believe the degree just helps you tick off a box on a recruiter’s check list. Most roles in ML/AI will have a Master’s degree in the JD. 

In terms of learning, if you’re learning style suites a focused classroom setting yeah, it will help to go to grad school but in terms of the actual content itself it depends on the program you go to but I am willing to generalize and say that you can learn this stuff on your own. 

The absolute best way to learn is to do and that happens only on the job. So if you’ve already got one (in DS) I’d say spend some time there before grad school. | The masters program can help you go deeper into specific topic(s) that interest you, enabling you to write a  publishable thesis on the topic(s). Eg., if you like optimization, you can just take all of your classes on optimization to get significant depth  (like linear programming, convex optimization, reinforcement learning etc). This will make you stand-out from the crowd when recruiting for ML roles | I know someone who did a MS in Data Science (or Data Analytics, don’t remember) while working full time, after getting a BS in CompSci that they probably also worked through in some capacity. They now work in a media-related role.

I did a MS in CompSci with a ML concentration in the hope that this would help me land data science or ML internships and later on jobs. Data scientist/analyst job offer has not materialized just yet, but my current stint on the job search has been a little more fruitful thus far. Guess having software-related experience really does make a marginal difference with initial callback rates? | look at Intro to stat learning that is pretty informative | Agreed. So much good content online. Even going through Elements of Statistical Learning or other books is great | The program I was accepted into has options to go deeper in GNN, Bayesian, causal inferencing, image classification but overall it’s a program to give the student a wider breadth of knowledge versus much depth in one area. I have 6 years working in DS or as an MLE but I still feel my skills could be improved on by having a better grasp of theory. Given this info is it worth pursuing? | I think you should enroll. Learning theory is a good reason. Also, it helps to check the box because most ML jobs require at least a masters degree. | Can you mention the program here. I’m sure there are people who would want to enroll",most ML jobs. ML roles. Learning theory. ML internships. ML
1lirxxw,"Does anybody remember the old Python logo?  Honestly, I've only been using Python since 2018, so I didn't recall that this ever existed.",Python. the old Python logo. 2018. I. anybody,195,0.96,https://i.redd.it/v3elvap9oq8f1.png,16,1750711566.0,"This is what it looked like when I started, was way nicer. Still gives me warm feelings to see that snake. The icon for .pyc files was the same snake but brown. | Meanwhile the logo for [PuTTY](https://en.m.wikipedia.org/wiki/PuTTY) hasn’t changed in almost 30 years. 🥲 | And that logo you see is for Windows. Mac was being extra nerdy and used the[ '16-tons' Monty Python prop](https://montypython.fandom.com/wiki/16-ton_weight) as their logo: [https://commons.wikimedia.org/wiki/Category:Python\_16-ton\_weight\_icons](https://commons.wikimedia.org/wiki/Category:Python_16-ton_weight_icons) | Somebody should update [https://logos.fandom.com/wiki/Python\_(programming\_language)](https://logos.fandom.com/wiki/Python_(programming_language)) ? | [https://www.python.org/psf/trademarks-faq/](https://www.python.org/psf/trademarks-faq/)

  
Around 2005, Python wished to move from a ""cute"" animal icon to something balancing formality and playfulness. The current logo works better as an icon than this old imag | I just realized that new logo is 2 snakes... | yes | Bring us back to the days of whimsical logos | Really? I actually really like the new logo! | That's so cool! | Me 25 years ago: playing MUDs through telnet using PuTTY

Me now: SSHing into AWS instance to install updates using PuTTY

Sad face. I need to play MUDs again. | I guess don't fix what's not broken? | That's amazing, I didn't know that either.  I love it 🤣 | Thanks for the source info! | I do too but I understand their feeling of nostalgia.",new logo. whimsical logos. Monty Python. warm feelings. AWS instance
1libni7,Which workflow to avoid using notebooks?,notebooks. Which,90,0.92,https://www.reddit.com/r/datascience/comments/1libni7/which_workflow_to_avoid_using_notebooks/,56,1750668943.0,"I don't, I use a notebook and would recommend discussing this one with your manager. They have this reputation for not being tools serious software engineers use but I think that is blindly following generic engineers without thinking about the DS role.

Notebooks are great for EDA, for explaining complex solutions, and for quickly iterating ideas based on data. So often weeks of DS work becomes just 50 lines of python in a repo but those 50 lines need justification, validation and explaining to new DSs.

So with that in mind, I'd say the time it takes for a DS to package their prototype after completing a notebook is worth it for all the time saved during development and for the ease of explaining the solution to other DSs. | I personally like using Spyder or other similar studio IDEs. You can create code chunks with #%% and run individual sections in your .py file. When you're ready to turn your code into a function or module or whatever you just need to delete the chunk code, tab over, and write your def my_fun(): at the top. It functions very similarly to a notebook but within a .py file. My coding journey was Matlab -> R studio -> Python, so this is a very natural feeling dev environment for me. | what is the end product? 

I agree it makes sense to not use notebooks if the end product is a production system of say, a chat bot

but notebooks are just a tool and like any other tool they have their place and time. for EDA they are a very good tool. for productionalized workflows they are not. | We switched to this, which removes some of the downsides of Notebooks:
https://marimo.io/blog/python-not-json


It plays well with git, but takes some getting used to when you come from Jupyter. | 
Categorically banning notebooks is, in my opinion, not a good idea. You won’t become better software developers just by moving messy code from notebook cells into Python/R files. The correct approach would be to teach you software practices that promote sustainable code – even within notebooks. But alright, that wasn't the question, so please forgive me for the little rant.

In general, I would advise designing manageable modules that encapsulate parts of your data processing logic. I typically organize a (Python) project so that within my project root, there is a Python module in the stricter sense, which I add to the `PYTHONPATH` environment variable to support local imports from this package. Within the package, there are usually subpackages for individual elements such as data acquisition, transformation, visualization, a module for my models, and one for utility functions. I use these modules outside the package in main scripts, which are located in a ""main"" folder within my project directory. These are individual scripts that contain reproducible parts of my analysis. Generally, there are several of them, but it could also be a larger monolith, depending on the project. What's important, besides organizing your code, is organizing your data and fragments. If the data is small enough to be stored on disk, I place it in a new ""data"" folder, usually found at the project root level. Within this data folder, there can naturally be further structures that are made known to my Python modules. But here's a tip on the side: work with relative paths, avoid absolute paths in your scripts, and combine them with a library that considers the platform's peculiarities. In Python, this would be mainly `pathlib` or `os`. The same goes for fragments you generate and reference. In general, it’s important to strictly organize your outputs, use meaningful names, and add metadata. Whether it's advisable to cache certain steps of your process depends on the project. I often use a simpler decorator in Python like `from_cache(""my_data.json"")` to indicate that the data should be read from the disk, if available.

Ideally, your scripts are configurable via command-line arguments. For ""default configurations,"" I usually have a bash script that calls my Python script with pre-filled arguments. You can achieve other configurability through environment variables/.env files, which you can conveniently manage in Python, e.g., using the `dotenv` package. This also enables a pretty interesting form of ""parameterized function definitions"" without having to pass arguments to the function – but one should use this carefully. Generally, the principle is: explicit is better than implicit. This applies to naming, interfaces, modules, and everything else. | Purely exploratory work should be in notebooks, period.

That being said, I do a lot that goes beyond exploratory work, going to prod with APIs etc, some data ingestion logic and so on. There I basically write all my code in .py files and if I want to do exploratory work on top of that I import the code in a notebook and run it.

Basically, the standard I’ve set is that if you’re making an API all the code should be decoupled from the web stuff, it should be a standalone package. If you have that in place you can run it in notebooks. This matters because it makes all of our data products accessible to non technical analysts as well that know a little Python. | Notebooks are pretty much the ideal workflow for EDA, especially as they can then also serve as documentation. For EDA you really need your early hypotheses, investigations, experiments, findings, commentary, and outputs to all exist together in the same location. Notebooks are a good way to do this if you follow best practices for reproducibility and then they can serve as a starting point for developing actual pipelines. Alternatives would be Quarto or maybe Marimo for generating reports with embedded code and content, preferably in an interactive way, not just raw .py files. Just doing your EDA in ordinary code with charts and tables saved to the project folder is a completely different workflow for EDA than either the reporting aspect of notebooks or the interactive aspect of notebooks.

The problem has always been trying to beat notebooks into being the same thing as production systems, which they're not, they're notebooks.

As a suggestion, use your notebooks to do your EDA, then refactor them to just run code you pull in from a separate module rather than containing any meaningful logic themselves, then just lift the simpler code that calls your module out of the notebook and into a .py file as the starting point of your actual product. | The “take more time to rewrite the code” is dumb take from your manager. All this will do is slow down anyone with a workflow like yours. Notebooks are an excellent tool for EDA. The overall time to finish the code will take longer, not shorter, by removing an essential tool from your workflow. | Notebooks were not always a thing, especially in academic research before data science was a thing. You can do it by well structured code repo, reproducible pipelines, and/or good git branching strategy. E.g. run main.py to generate EDA outputs | Check out marimo | Check at Marimo, it’s similar workflow to notebooks but is all done using .py. It re-executes everything each time which is great for keeping execution order bugs out but is a downside if any of your cells are long running. It’s a nice bridge between the two though | I believe that it depends on the use case. If you often use pandas and/or draw a diagram, notebook shoud be a best chose. However, if you are a web programmer, notebook is not suitable for you. | Sounds its a bad coding practice issue not a notebooks issue. As others have noted notebooks are incredibly useful tools for many reasons but DO lend themselves to having a lot of junk/undocumented code because they’re a working tool. When you’re ‘done’ with a notebook it should be fully runnable, documented, etc. They serve a distinct purpose from .py files and banning notebooks won’t fix the issue your teams having. Possibly worth bringing up this point 

- DS PM @ msft | \> because it favor bad code practice and take more time to rewrite the code.

Got reminded of this [video](https://youtu.be/9Q6sLbz37gk?si=3m3MPPC1OZXKbpL7) from Jeremey Howard & his [tweet](https://x.com/jeremyphoward/status/1873860513920364660) from a while back.

\> because it favor bad code practice and take more time to rewrite the code.  
Would like to know the kind of ""bad coding practices"" being encouraged.

  
I see folks in the comments section recommending marimo which fixes a lot of the issues rooted with traditional notebooks; it everything updates automatically when you change something (inherently solving the reproducibility issues). + it saves as regular .py files so no more weird git diffs.

Also recommends good practices: [best-practices: marimo](https://docs.marimo.io/guides/reusing_functions/?h=practices#best-practices)

*Disclaimer: I'm from the marimo team* | I use Spyder and run it line by line, looking at the outputs in the variable explorer or plots window. Then you can usually take that script and deploy it after you comment out the intermediate plots you did while doing EDA | This is like a sports team banning practice because the manager thinks it encourages bad habits during a game… | I still start quick EDA in a notebook, but the moment the idea looks usable I freeze it into a plain Python script, add a `main()` and push it into Git. Each step—load, clean, train, eval—gets its own function and a tiny unit-test in pytest. A Makefile or simple [`tasks.py`](http://tasks.py) then chains the steps so the whole pipeline runs with one command. Plots go to `/reports` as PNGs, metrics to a single CSV, and a FastAPI stub reads that CSV when it’s time to demo. The code stays modular, diffs are readable, and I never have to scroll through a 2 000-line notebook again. | I’m going to give my two cents here, as an engineer who uses both Notebooks and “standard” software engineering architecture — use both.

Keeping all of the code in your notebook is likely going to cause you to either copy-paste a lot of code, or bloat your notebook with a bunch of cells long-term that just do something like print a view of a df because you needed to look at it for five seconds.

Keep your notebooks transactional, and leave all of the “real code” in files you can import or make libraries that can be shared and collaborated on.

Just my method, ymmv. | Jupyter is great for fast iteration and thinking out loud, so going “notebook-free” can feel like losing a limb.

One approach that worked for me: treat notebooks as disposable prototypes, but design your workflow around scripts and modular code from day one. So:

\- Do initial EDA in a .py file with # %% cells (VS Code or Datalayer handles this nicely, gives you notebook-like execution with real script structure).

\- Use src/ or lib/ folders for reusable logic and utility functions early on - even if they're rough.

\- Keep visualizations and quick checks in dedicated EDA scripts, then promote good bits into testable modules.

This way, you're still exploring freely but in a format that's easy to productionize later. Also makes it easier to bring in AI code assistants and version control tools without dealing with .ipynb merge hell.

If your manager’s concern is code quality and maintainability, this middle ground keeps the team happy and productive.

P.S Have some github links around Jupyter (MCP and AI Agents) use cases. Would love to share if you're interested | I don’t agree with your manager. If you’re using notebooks only for prototypes/non-production work, then you’re doing it right. While I agree that “notebooks should not be used in production”, I believe that this notion has been over-used by people who have no clue about data science workflows.

After prototyping, you can convert (or rewrite) your code into production-level scripts and deploy them. Data science is not software engineering - it involves a lot of experiments/trial&error before deployment. | Tell your manager yo try the other way around, and use a tool like nbdev to make notebooks your production code. | I use dvc. | You can always import local py modules into a notebook. So you may do your workup using jupyter cells. Factor it into a utility module(s) with methods or classes as needed, then import and call the module from your main nb. | Just write it in a python file and use the interactive sessions most IDEs provide. No need for any notebook at all :) | Quarto is a great replacement for notebooks. It's a markdown file with Python code cells in it and you can easily render to many output document formats. | Learn to use the Python debugger. Your manager is correct, take off the crutch now it will make you way better | I get the notebook habit—super flexible for EDA. But switching away can actually streamline things long-term. Tools like [kivo.dev](https://kivo.dev) make this transition easier by letting you upload raw data (CSV, Excel, even PDFs) and generate visualizations and insights using natural language. It’s kind of like having notebooks, dashboards, and reporting in one place—without touching code. Might be worth a try if you're looking to balance flexibility with better structure. | Agree 100%. The manager would have to pry my notebook workflow from my cold, dead hands. | Modularize as you go imo. Make and import your custom python functions, use notebook magic hot reloads, orchestrate the funcs in the notebooks to mock deployment and make that later transition seamless while simultaneously getting out of the way of the developer (no crazy fuckin notebooks with thousands of lines and no markdown lol).

I pretty much refuse to adopt our notebooks until they've been fully modularized, documented, and orchestrated this way by the data scientists who wrote it originally or another familiar one. You could potentially include some tiny little bit of data, zip this all into one folder and share around a rather self-contained example that you're talking about. I also enforce at least .env for API variables and what not.

But this way they're welcome to store their notebooks with the outputs cleared in the project for Version Control, we find clearing the cell outputs helps a lot to prevent merge conflicts in these crazy f****** notebooks. I know there's other ways to version them but this has been working for us. Moreover, we can store them in the project where we then orchestrate the underlying functions in the exact same execution chains we find in the notebook, and for added benefit, everything's contained in one git repo

ETA: related to another comment chain im on, there is an added benefit to checking in notebooks that orchestrate the funcs locally, and that is it provides a local env running the exact same funcs being run in prod orchestration layer, so it serves as a code testing suite that you can inject, its like ruby byebug on steroids, and can help rule out code issues in favor of environment issues pretty quick, where you can inject print statements and rerun cells to determine like, oh an upstream data dependency failed that no one caught, easy patch, push deploy | This, there is a place for not using notebooks but blanket rules are dumb. 

Once OP is fairly sure his EDA works he should turn it into functions and more deployable code and put it into a library in a separate file that you can highlight its use visually in a notebook. | I'd recommend using [marimo](https://github.com/marimo-team/marimo) as well since it favors good coding practices. | Thanks! Ok, that’s kind of similar to what I do in notebooks except it is a huge main.py file.

How do you store charts and document the whole process like « I trained the model like this, the result is like this and now I can deploy the model »? | I am seconding this recommendation. For workflows that are heavy on charts and descriptions I much prefer notebooks, but when working on actual business logic and pipelines, I like to use Spyder, which also allowd you to run not only individual sections, but also lines and even highlighted text, so if i only need to reexecute a single statement, it is trivial to do so. Of course this is for on premise development, unfortunately for most cloud based tools, notebooks are the only real option. | Commenting because this thread is really useful :) | End product could be sometimes reporting or a prediction rest api. 

I get it that notebooks are not good for production but my question is how to get to the end result without using notebooks as intermediate steps. | Thanks for the kind words. We have affordances for long running cells (I have worked a lot with expensive notebooks and it’s important to our team that marimo is well-suited to them).

https://docs.marimo.io/guides/expensive_notebooks/

(I am the original developer of marimo.) | Beside the execution order and git, how do marimo  improve my data science workflow? 

Tbh I don’t get execution order issue that often. I did develop some compulsive rerun habits 😅. | They're not a crutch, they are a useful tool for DS work.

DSs iterate code more based on data than their debugger so being able to inspect it as you work is vital. They also need to produce plots to work and often need to write up notes about why their solution works for other DSs. All that comes neatly together in a notebook.

Then you package your solution in code. | I think this ignores that the majority of DS notebook code doesn't make it into production and doesn't need to.

Training and testing a classifier, along with the EDA before you start is lots of notebook work. There's functions to make plots and there's lots of analysis of the data.

When it comes to productionising your classifier, 50ish lines implementing a class with functions to train, save and load that classifier and predict on an input is all that leaves the notebook


Totally agree on clearing before committing though. I demand DSs make that part of pre-commit. | This is kinda the way but I have thresholds, e.g. if I use a notebook maybe once or twice a year, I will probably won't bother.

Also, ReviewNB FTW for diffs. | In Spyder there's a separate window for plots, though honestly I tend to just regenerate those types of things. I would provide #documentation thought-out, and just leave myself a note like 

#grid search found xyz  optimal hyper parameters. With these hyper parameters accuracy was xx% with 0.xx AUC. Run eval_my_model(model.pkl, test_set) to generate evaluation report

I have a function like the one above that generates AUC, a ROC curve, and other metrics in an Excel doc with openpyxl because my client has always done model performance reports in Excel so it was just easier. It's under an hour of work to make one yourself especially if you use the robots to help. I tend to functionalize as much as I can and save everything in a module so I can just from my_functions import * then type stuff in my command line or save one code chunk to run one off functions | VSCode has the same thing. It's called interactive window and it comes with the official python extension. You also use ""# %%"" to designate a ""cell"". A Jupyter-style kernel opens to the side and runs your chosen cell of code. it's like having a notebook that's already in .py form. | Yeah I've discovered that too. Just switched roles to a form using AWS which is great but man Sagemaker notebooks leave me missing Spyder | Isnt it more efficient for a team to alter their notebook utilization practices to avoid major refactorization than to entirely remove a tool that is part of people productivity? Sounds like improper use of notebooks rather than notebooks being a bad tool. I think even ChapGPT/Claude can just tell you what alternatives to use but will not help with the bad practices.

Shouldnt people have their notebooks be on the side for testing and have templates for modules ready after testing in notebooks? That should keep people using notebooks, which they are comfortable with, and encourage practice with writing code that can be easily ported over to a module/package (SWE style of coding).

Notebooks don't prevent you from using OOP within the notebook if your tool of choice is python or similar, its just the user not practicing that way of coding. I always feel like notebooks are essential for datascience since the main product are visualization and analysis of data. Then just adding SWE tips for refactoring is just a good tool set to learn and practice along the way while coding in your notebook.

Removing notebooks will slow everyone down while they play catch-up with SWE practices, and also make their lives painful. Might as well just get everyone on Claude Code at that point. | Scroll through the docs homepage to see: very interactive dataframes, AI/LLM assistant that has access to your data, run your notebooks as scripts, share as data apps, scatterplots that can send data back to Python on interaction, built-in (opt-in) package management, built-in SQL ... the list goes on

[https://docs.marimo.io/](https://docs.marimo.io/) | You summarized it perfectly. It is not about writing code. Code is just a mean. | You can plot in the debugger. I write up solutions on a pdf, please don’t save plots to git | Ya im not really talking about that part i am discussing the pipelines that need to be deployed which many DS orchestrate in notebooks.

Yeah, EDA and random ad hoc stuff whatever, i have hundreds of ad hoc notebooks i dont do this for.

I dont expect that from DS. But, ""here's my Model, deploy it"" is a hard fucking NO if they didn't modularize, and if im writing THOSE notebooks im modularizing early and often, with an eye to the final deploy state | Thanks a lot for the detailed answer. | You can plot during a debugging session btw. Notebooks are a crutch. It’s fine if you don’t believe me, a demo notebook isn’t the same thing as working in a notebook. Please don’t save plots to git | Right but what you're suggesting are two less convenient solutions for something notebooks offer nicely. Markdown, plots and code all together to help document your work.

Notebook clearing should be part of every pre-commit so that's trivially fixed.

So what are the benefits to dropping notebooks to do your EDA and experiments directly in code? | OP is talking about experiments and EDA. I'm supporting them in that those things belong in notebooks.

I'm a huge believer that notebooks have value to that point. If your DSs won't package their models for production, that's a problem. | Bored in an airport, what are you gonna do. | Linearity and predictability/reproducibility of your current state at any point you enter debug mode. Also I find all the nice ide functionality often doesn't translate into notebooks | Yep | Non-Linearity is a feature not a bug. Being able to iterate over a section of my notebook is a huge benefit for which I'm willing to pay the tiny price of restarting my notebook and running it end to end before I commit to make sure it works linearly.

The IDE stuff isn't a drawback. If you like notebooks in your workflow, you'd pick an IDE that supports them. I use VSCode and there's zero issue. 

Telling me you think notebooks are bad because your IDE doesn't support them is like telling me python sucks because your Java IDE can't run it.",DS notebook code. notebook cells. Notebooks. notebook. notebooks
1lhuk01,I have run DS interviews and wow!,DS interviews. I,784,0.97,https://www.reddit.com/r/datascience/comments/1lhuk01/i_have_run_ds_interviews_and_wow/,273,1750616001.0,"I simply wish you were my interviewer when I applied for tech jobs, instead of getting leetcode questiona | Because in parallel there will be most other people complaining that the candidates only know these weird mathy concepts and don't do enough coding

That's what their degrees will have focused on: coding in the latest and greatest frameworks | The recruiter is non technical and doesn't know how to sort the wheat from the chaff.

I agree that data science, or at least the avg person calling themselves a data scientist, is being actively diluted. A lot of factors there, but I think the thesis still holds.

Of the 5 bullet points you covered, I'd say that all of them are fair questions (open ended, start a dialogue) and things I would expect someone actually qualified for the role to know. I'm curious about 3, when I was in grad school OHE was the standard for categorical variables where the categories didn't have an implicit hierarchy. | I concur with your experience. I've experienced the same as an interviewer and being a DS for a little over a decade. When I interviewed for DS, it was still catching on and was expected to know and execute on many different things. And boy were there plenty of articles and news stories about how DS was the ""sexiest"" job and how it's going to change everything. My interviews not only consisted of ML and stats, but also algorithms & data structures, and ETL (data engineering principles).

Over the years, the role got more definitions and other specialized roles arose (Product DS, Product DE, MLE, Full Stack DS, Analytics Engineers, etc). The industry will give many fancy names and titles. I would also check your own expectations and biases: what does the company need from the person who is being hired as a DS vs what is your personal opinion on what you think the DS should know? I've also witnessed interviews being harder than they need to be for the actual job requirements.

I also want to mention that interviews are about [signaling](https://en.wikipedia.org/wiki/Signalling_theory), you might hire someone who can answer questions promptly and signal effectively, but they could turn out to be terrible. In the current iteration of our world and technical industry jobs, a person of average intelligence can hack the interview process fairly easily. If they can survive the actual job or not is a different question, but my point is we give way too much importance to interviews. Not trying to diminish your experience with a bad candidate, but wanted to provide some broader perspective! | So many folks have switched from SWE to data science and not many of them could even explain/define a regression model, t-test, or even, dare I say it, a weighted average.

None of this surprises me. | This is very funny to read, as I've been preaching this for like 5 years now on LinkedIn, 50,000+ people have read my book ([Ace the Data Science Interview](https://www.acethedatascienceinterview.com/crash-course)) but STILL in 2025 the average Data Scientist interviewee is legit SURPRISED that an interviewer would care about ML basics or data munging.

I get multiple DMs per day with folks asking for GenAI updates to the book, or they're skeptical of my advice that you don't need to know Deep Learning or next-gen GenAI techniques to ace the average DS interview in 2025 (unless specifically interviewing at OpenAI/Anthropic/Meta or a GenAI focused innovation team). Glad to hear that I'm not going crazy and OP you've seen what I'm seeing too! | Student here, and this is super helpful , thank you! 4 and 5 are making very hopeful about my interviewing prospects lol. How do you get into an interview without knowing what cv is? | Your expectations are not certainly unrealistic. The questions you asked constitute the very fundamentals of machine learning and evaluation. If the candidates can't even answer that, I don't know what to say | Data science is hard. Nowaday we try to banalize this profile and lot of school and bootcamp pretend to train data scientists in masse.

A lot of training are superficial. School don’t have enough time to train student on all the matters and tbh, most professors are academics, not data scientists themselves.

Last but not least, data science is mostly an empirical domain. Most of the things we do in practice don’t have absolute theorical foundations, we do it because it works. | > Also, only a single candidate could explain why it is problematic to make the imputation before splitting the data.

Just to make sure, the point is that this implicitly pollutes the training set with knowledge of the test set, right? If you impute using an average, for example, and the test set was used in that average calculation. | This sounds about right to me. Sadly, you will get thousands of applicants and a non-technical recruiter will send them through | Your questions gave me hope for following interviews. | This is just a general question but does a data scientist have to be particularly proficient in ML? I’m from a PhD background and I did cover some ML stuff but I mostly did more interpretable regression models and such, would this be an issue for wanting to get into DS? | On the point of the title being diluted. Are these people actual Data Scientists? As in, do they have actual professional experience building ML models? I'd be surprised if experienced DSs would be getting interviewed by a recent graduate. I don't think you're going to get good people being attracted to that.

People apply to roles they're woefully unsuited for. This isn't limited to DS. | Because DS is insanely wide. Imagine doing a SWE interview and asking about JavaScript, C++, Python, React, and Java. No one is going to know all that. Update your JD to be more specific.

Edit: Job titles are nebulous. Just put what you want in the JD. | This is so distressing to me. I’ve been out of full-time work for over a year now, and it’s so sad to hear that this is my competition. I have a PhD (in psych/neuro…but still) and decades of experience with fmri analysis, experimentation, etc, and work experience at an Ivy. I know data, but I can’t even get interviews. 

I’m generally very risk-averse but I took a chance at a career shift into data science because I thought it would play out better than the academic job market… boy has it been a humbling experience. | Maybe it’s just me, but if this is for a junior position, I think this is all relatively fine and normal? It takes time and experience to have the mastery over these concepts necessary to speak about them confidently. I would bet more than one or two of your candidates have encountered these things before, but not enough to have the full understanding necessary to ace an interview. | DS roles rarely if ever require ML these days. It’s typically just AB testing, metrics design, business/product strategy based on numbers. It’s handy to be able to do a regression, sure, but building a quality ML pipeline with well balanced tradeoffs, not so much. Any ML has gone to the MLE camp. | I know all the stuff you mentioned and still can't even land an internship, lol. | Not to increase your sense of imposter syndrome but the worst interviewers I have had (7 years DS/MLE) were relatively junior engineers who seemed to feel much like you do, but after asking the most specific, based-on-the-last-battle-they-fought questions and seeming to expect very specific answers based on the same SO thread they read, rather than general competency and thoughtfulness.
It takes a lot of practice to ask questions in a way that is general enough to prompt even well-practiced interviewees to tap into their knowledge base.  I obviously don't know if you are falling into this trap or not but I would not expect anyone to do a good job at posing interview questions the first time.
But also, anyone who is still evaluating DS candidates with take-home assignments in 2025 will be getting a lot of AI generated replies with many candidates unable to explain them well, so that's a thing, too. | This is pretty common in my experience. There are a lot of genuinely unqualified applicants out there. Most candidates, especially for entry level roles, seem to only have a surface level understanding. I get the feeling most of the unqualified candidates get their practical knowledge or skill set from following tutorials rather than personal experimentation and understanding. | If this is the first round of interviews after the recruiter screen, this does not surprise me at all. I commonly see around 15% pass rate in the first round. The median candidate is well below the bar despite having a seemingly reasonable resume. | I had the exact same experience when interviewing earlier this year. After asking the candidate why they used R squared to evaluate the model, they said it was “the one they always used”. 

Couldn’t really explain what R2 was just that higher number = good. When I asked about any other metrics they could’ve used for the task, they looked at me like I had 5 heads. | I'm not a pure data scientist. I develop algorithms for medical monitoring devices. My work covers a lot of areas, so I interview people applying for systems engineering, hardware, software, and data science. I've seen a significant drop-off on the quality of candidates in the past few years. My company has had to allow more exceptions to RTO, offer bigger referral bonuses, do more relocation, increase signing bonuses, etc. in order to get even decent candidates for pretty much all technical roles. | As someone learning DS. Thank you for this perspective.
Do you have more examples questions for interviews?

Trying to learn to know what I don't know and figure out how to bridge those gaps. | Were these people with degrees or just some online courses?  | All of this stuff listed can be learned with a basic intro to statistics textbook and applied ml textbook. | One thing people haven't called out or asked about: what specifically are you recruiting for? I know DS that are incredibly accomplished in Econometrics or Statistics that have and likely will never build an ML model. I could easily stump them with basic gotcha questions, but their domain knowledge in their realm is incredible and the questions you asked wouldn't be fitting. | I don't think these are unrealistic expectations even if it was for a junior role. I've graduated last year from a relevant program and I feel like I could answer most of these questions if not all. I think screening may be the issue here. 

I for one don't understand for how long can someone work in the industry without eventually having to grasp these. | This is so comforting to read.  
Not for the industry as a whole, but as a newly graduated engineer, who uses the ""data science toolbox"" as an actual tool to solve problems.  
This means i am likely to be sure to have a job for a very long time.  

On a slightly more serious note, I have been told by older colleagues, that they prefer to hire domain experts with datascience as part of their education instead of people educated as data scientist. Maybe it is just in my sector, but the experience has been, that those educated as datascientists specifically lack the skill to critically apply the tools and quickly understand the area to which they apply the tool.  
I should say I am in a smaller country, the DS education is relatively new as a stat a alone education here. | And these candidates get the interviews while people who don’t straight out lie on their resume get no interviews. | I also hire DS and it comes down to what and how they learned in school. I don't try to find candidates ready to go...just ones I can teach quickly. Overall it is much better/faster for me. | I would guess that the recruiter messed up. I'm not a senior level employee, some would even call me not even entry level since I don't have 2 years of professional data experience, but I'm baffled at how those types of candidates made it to talk to someone in an interview. | All of these definitely are fundamentals to build on, so not unrealistic to expect them at all. | Damn this just boosted my ego. Thank you. | Can you explain what the perfect answer would have been for you? | I was in a MLE interview panel and the candidate couldn't tell a loss function for classification. He forgot the term gradient descent and couldn't even explain how it worked. Somehow made it to the final round. | I don’t understand how folks without basic understanding of ML concepts get interviews whereas I get rejected from every single company to apply to ffs | I am an experienced data scientist with 15 + years of experience, still cannot answer some of these questions without some google/AI search. Very likely will fail your interview questions lol. | That's interesting, did the candidates have masters and PhDs? or were they Bachelor degrees? Also, do they CVs say that they know 20 different tools while they do not know anything?

Do they have github projects that are empty or filled with just a couple of jupyter notebooks? Do their projects have 5 commits? | It's funny. I'm working as a data scientist (with a PhD) but I also don't know these concepts. I'm new to the field and my company hired me more for my skills and knowledge in other areas. 

As a newcomer to this title, I think the field has shifted a lot. | Hey, it's me, butterfly boy.What are the pros and cons of imputing data before splitting it? | What do you mean of label or one hot Encoding? what is of label? What are the potential drawbacks. It's me butterfly boy by the way | What do I do if my supervisor could not answer a single one of those questions? | I know all of these. Just need an interview! haha | 2 is an extremely low bar. Maybe add that to the recruiting screen | That sounds harrowing. I've done some DS hiring, not a whole lot, but successfully hired a team that I work with daily as their lead and manager. I gave a simple, partially open-ended project with a set of clearly stated requirements, specified model, analysis, metrics. Goal was 4 hours of effort over a week, and then a 15 minute presentation to me and a couple non-tech people. Very basic ML problem, with the goal of seeing their code and seeing how they storytell.

In retrospect, I think I was very lucky to have landed the people I did, and that my app/interview approach had a lot of possible ways to backfire. I think I was also lucky because the people who got to the stage of submitting the project happened to come from somewhat more ""traditional"" DS backgrounds, with exposure to the classic suite of ML approaches, and science or engineering undergrads and experience. 

It's rough out there. There's everything from highly educated people who can't do anything to DS proletariats who will end-to-end something production worthy in a week. | Ok so like you can test these things, you can also just test general problem solving IMO. Most ML stuff people don’t actually use in day to day DS work IMO. Only happens when you’re training models, and that can be very uh infrequent even in advanced environments because of the ease of modern ML technologies and the lack of need for sophistication in most business cases of the day. When I was hiring for DS I heavily recommended testing for basic Python and SQL proficiency as a filter(you won’t believe how many people this filters out) , then diving into a business case and discussing various solutions and tradeoffs, without a clear ML solution(maybe as one of the options). | Ok so like you can test these things, you can also just test general problem solving IMO. Most ML stuff people don’t actually use in day to day DS work IMO. Only happens when you’re training models, and that can be very uh infrequent even in advanced environments because of the ease of modern ML technologies and the lack of need for sophistication in most business cases of the day. When I was hiring for DS I heavily recommended testing for basic Python and SQL proficiency as a filter(you won’t believe how many people this filters out) , then diving into a business case and discussing various solutions and tradeoffs, without a clear ML solution(maybe as one of the options). | Sounds like you caught a group of candidates with very poor basic data science background/training | It’s very common. Many scientists, engineers, and mathematicians decide at the last minute before their job search to rebrand themselves as data scientists. They know almost nothing about statistics or software.  | When I was hired as an semi-entry level ds analyst, my manager was telling me that many of the people he interviewed couldn't properly explain what a p-value was!

I've also ran an entry-level data science analyst job since then, and many of the resumes (~70%) HR forwarded me were not relevant to what I was looking for. Also, unfortunately, doing a DS tutorial analysis on titanic or imdb data wasn't enough to compete with the final candidate. | The hiring bar for a matured data scientist is higher these days; knowing stats and some level of coding is the bare minimum; not only you need to know coding, people want them to build pipeline for production too…no more jupyter notebooks | One potential issue I see is following examples from a prethoughtout book, where each concept either works or doesn't work in that scenario. No real experimentation outside of academic study leads people in the learning process to not fully understand the drawbacks of their approaches, they sort of develop a one size fits all approach to a problem. | Some of what you mentioned are important to know, mostly the issues with data involved. Others on the other hand, are more trivia-like and can be looked up at any given time. You may have to wait a very long time if you're trying to find a perfect candidate. And when found, you may not be able to afford them. So mind that tradeoff. | The DS role is way too broad. I did DS for years without doing ML (mostly focused on analytics and experimentation). It is very easy to find experienced DS who dont know anything about an area. It is very hard for HR to DS screenings for this reason. | Thanks for the feedback. I’m not a DS, but definitely have seen former Data Analyst acquire the DS title without the rigor required. Pros and cons to that.  Now some folks can flash the DS title without the experience & earn better pay. Con, your interview experience, lack of consistency in the field. 

In my experience, DS tend to have PhDs. Folks with Master’s often worked up to that and were ML Engineers in their journey to. 

I feel that will shift considerably with AI though. | I teach at a US university’s master’s in data science program.   I would assert that about 2/3 of the graduates are underqualified.  

Reasons:  The masters program is now generally 1 year long.  Far too short for any kind of in-depth knowledge.  iMO there are many concepts that build on one another and you can’t teach them simultaneously and expect results.  Furthermore, we don’t push hard on in depth understanding of algorithms (maybe linear regression).  If you don’t understand the algos you don’t really know what various models do and how to identify / correct problems.  

A lot of these students usually get one or two passes on working with a relatively clean data set and toy-box problem.   Most can instantiate models but have very limited understanding as to what they are doing. | In my experience, many people switch from different domains, just just few have the actual math background you need to understand those things | How did the JD look?
From my hiring experience most candidates we got in the last year had more of a... let's call it business analytics/intelligence background and quite a lot of Computer Vision people. Almost no ""classic ML"" people.

It doesn't surprise me a lot, honestly. I learnt most of this stuff over a decade ago and probably only worked on ""from scratch"" ML models a handful of times. Instead I found myself working on practically the same type of data and problem for a decade with data prep being mostly standardized over the years and rarely touched again. Sure, we wrote a lot of tools for data cleaning/improving the quality of the data but the encoding rarely changed. Rather the complex encoding procedures in my field died after the first few years when deep learning just stomped all the HMMs and random forests and so on we briefly had. Not soon later we've been searching for people who know about GANs and Normalizing flow models and diffusion and so on. At that point we probably mostly got ""classic ML"" people ;).
Didn't last super long though. After training thousands of neural nets over 2-3 years I suddenly haven't trained a single one in 2 years anymore.
Large models, tons of data, multitask foundation models became my bread and butter and when we hire for that, we find there's almost no one who knows about contrastive learning and CLIP, about LMMs etc. 

Simply because so many people are doing very different things that are called ""data science"" and those things are changing all the time.
12 years ago I did plots in MATLAB and cobbled together perl scripts calling C Hidden Markov model toolkit libraries, 7 years ago I implemented LSTMs in C++ for stupidly simple neural networks, 5 years ago I've worked on adversarially trained normalizing flow/diffusion models in CUDA ;), 2 years ago I've been prompting LLMs, at the moment I mostly work on retrieval/search to get the right data to the agents.
Things... change a lot ;) | Pro tip: use a platform like testdome to weed out the unqualified candidates. A simple and very easy standardized test will do that for you, without taking much of your time. | I went into the job maket ~3years ago. Back then I would have been interested to be a pure data scientist. Today I am doing much more data engineering. I mostly just use apis today and don't do the acutally training and stuff. I talk alot with pure data scientists and the direction more and more turns towards: ""Fuck our own trainings. <place model here e.g. Claude/Gemini/whatever> does the job better without any train etc."" (internal heart bleed, but there is still lots of good stuff going on in my company)

Anyway here is what I would have known from back then:

1. I wasn't familliar with the term ""imputing data""(english isn't my native language), but I was familliar with generating data in a stratefied way. Could have talked about pros and cons. When you understand the cons, you can also say why imputing before splitting is problematic. Very nice question to see if a student has understood the subject.
2. During university I had a project to predict stocks using twitter data. Needless to say that (some) stock markets have an inherent bias towards going up. Had to balance out the classes --> I didn't turn into a millionair =( Damn class imbalance.
3. It is a classic that most students only learn about one-hot enconding. Especially when they come directly from doing courses. 
4. crazy that people don't know about that
5. Love that question. It so so open, that you can talk about almost anything forever.

All in all reasonable questions. You could have answered almost all of them after reading books/working through a frew online courses. 

Was the position for a junior position? You can expect some juniors to struggle with those questions. I wouldn't hire those candidates for a senior position. | Welp. Just graduated with a master's and I'd be able to explain all of that because it's covered in depth (with courses teaching the same concept again) and the what and why. I'd love to interview with you but I'm just looking for more data engineering roles. But sadly I wouldn't be considered by your HR because I need sponsorship ༎ຶ⁠‿⁠༎ຶ | Reading this pisses me off because I know exactly each point you mentioned but I still failed to pass the CV screening (or ats screening) from incompetent HR | What level were you hiring for? | Great post! Good to know about ts | What is the level of candidates you interviewed? | This has been true for years, like >10 years. | Yeah, I’ve interviewed hundreds of candidates for data science positions and this is pretty typical. Most people are being trained in the techniques, but less of the science which in my mind is pretty problematic. Even though much of the job is executing code or writing reports or munging, especially as auto ML and AI take more and more of the workflow for a data scientist, being able to hypothesize and address problems in the data to solve for specific statistics and model needs is going to be the most important skill set. I think a lot of programs are assuming that people can learn this on the job, But at least in health sciences it is absolutely a requirement for your first job. | I just did my master's program and graduated in December... The amount of working adults with full grown related careers in my program that didn't know 1) how to run a regression, 2) how to use Google scholar or do any reputable research, 3) asked me ""can we really make assumptions based off demographics"" and 4) (after I left the group to do the project on my own) put on their presentation that they couldn't come to a conclusion about the coefficients due to ""the nuanced interplay of the variables.""

I've struggled to find work in this field since I graduated undergrad in 2010. My work history is in coaching (for 19 years) and sales. I'm a wife to a disabled Navy veteran with two kids and I can't get a single job in this field no matter the pay or level, but these people are full blown analysts in full blown careers. I'm so jaded and so deflated over this whole process. 

Sorry about the rant, the complaint just seemed so close to home. | I'm looking for a job at the moment in the UK and knew all the answers to the questions you posted but still struggling to get hired.
I've 5 years experience - if anyone knows of any opportunities, I'd be very keen to hear of them! | I noticed that a lot of people on here blame people coming from SWE move to Data Sciences. It goes both ways. Even the Great Andrej Karpathy (no one could argue that he is one of the best Data Scientists out there) is having trouble understanding web development \[Adrej Karpathy tweet\] (https://www.reddit.com/r/programming/comments/1jmr2eh/andrej\_karpathy\_on\_the\_state\_of\_web\_development/. ). I think it is like anything in life, if you work at it then you are good. But just because you are good at thing X doesn't mean it will transition to thing Y. You still need to work on the new thing. I am someone who is transitioning to DSE from SWE. I guess this is one of the reasons why it is hard to get interviews in DS lately. Also, I kinda surprise that there are that many incapable candidates out there? I assume this job market favors the employers and there should be a sea of talents out there. | > I am not entirely sure what went wrong. My guesses are that either the recruiter that sent candidates my way did a poor job with the screening. Perhaps my expectations are just too unrealistic,

From my personal experience as someone currently job searching, I could answer all five of those questions without too much difficulty. In fact those are the types of questions I would personally like answering over usual ones. Yet, for whatever reason I also find myself much more likely to progress in the hiring process when my first interview is with someone on a technical team rather than a recruiter / HR. I don't know the combination of it being the types of (larger / likely to have more applicant) orgs which heavily rely on recruiters and HR and me personally being unconvincing to non-technical interviewers. But from the job searcher perspective, I've definitely had interviews where it was clear the people doing different rounds of interviews had very different ideas what they wanted in a candidate. | While me not getting any interviews... | I appreciate your sharing your thoughts. My perspective is from working as a data analyst and data scientist for more than a decade, with a master's degree in a quantitative field before data science was a buzzword much less a field of study or degree program.

Did the position call for ML Ops and ML training as a primary function? Did you ask about other technical capabilities.

My thoughts are:
- that cross-validation should be something a candidate can speak to, but it is mostly automated now so it is done without thinking. If you use sklearn you might explicitly call a cross-validation function or method but a number of platforms and libraries do this in an automated fashion.
- handling missing values is a spot on question, and I wonder if you encountered different answers from those with a DE background as opposed to a DS background
- 90% of my work is SQL, so when we interview for positions on my team we quiz on SQL hard..YMMV. | Feeling a lot better about my program. 

The introductory survey course covered most of these concepts, even if not in great detail.  | My go-to opening is ""What is your favourite average? What are the benefits and limitations of it?"". You would be amazed how many people applying for DS roles don't know mean, median, and mode.

If they don't understand this, then it's clear that anything they say about class imbalances, experimental design, distribution assumptions, monitoring/drift, etc. is just memorised from multiple choice questions, not a concept that they actually understand. | This is because everyone became a ChatGPT copy paster, knowledge doesn’t stick if answers are being served on a silver platter | Imputing before splitting results in leakage of information to the train set.

One Hot encoding results in excessive collinearity of features (dummy variables trap) if you have linearly dependent columns in your array...its just adding to the redundancy, rather than sizing down... here dwpending upon the rank of you one hot encoding variable you can introduce n-1 columns. Otherwise it can make the matrix non invertible.(not desired for linear models)

Label encoding brings in artifical ordinal relationships into categorical variables which are not the target variables for a dataswt qith high cardinality. So for eg if you have a feature column covering the aspect of color...RGB (any one of these) then it implicitly puts in red as 0 green as 1 and blue as 2

So red<green<blue.

However its not a red flag if we are doing it for target variables for a classification problem.and can be done safely. | On one hand this makes me happy because I get more confident I could land a DS job interview after having done some online courses on edx, on the other hand this makes me terrified because I wouldn't want big decisions being taken based on critical data handled by someone at my skill level, and this indicates that might happen sooner or later. | I have all this skills and I still didn't have any interview or any reply for my applying on data science rolea . Could you please tell me from where did you test your canditadet please what is their nationality . | Thus, you see why folks like myself and other senior+ DS are not hurting for employment. The industry is saturated, yes, but with 90% of incompetent...""analyst"". These are all basic questions/concepts that I'd expect my interns to know by the end of their summer, and my Jr DS to come in knowing. | If they know the math.

They'll easily pick up the coding portion,  (usually)

At my quant shop I worked at ..we hired to math degree folks. They looked at python docs and reviewed the code ase for a couple weeks and they became super coders. | Germany. I've been interviewing with employers since 2024. No one needs my fundamental knowledge and intuition. They're only interested in the set of tools I'll be working with and how many years I've been working with them, to be easily integrated with the team. Theory has separated from practice with fast business effects. Theory is now only relevant in research positions (where you need to have PhD mostly or currently working on thesis). | I don't disagree with the sentiment at all, don't get me wrong, but coming from a smaller state university that only just started machine learning classes I feel that I may have a unique perspective. 

Machine Learning and AI are still incredibly new in the public eye (even if they're really old concepts only being now popularized). Because of it not being deemed ""important"" previously, a smaller state university would push funding towards, say, economics, nursing, or even just engineering or IT. The degree in DS that I have required a single AI class and a single ML class. I know enough to answer these questions I believe, but with only two classes on ML/AI I'm not going to necessarily say or understand ""imputing"" over just ""generating"". (The one-hot and label-encoding question is still surprising to not know their pros/cons.) I had projects in these courses as well to test my knowledge but even with that work there's only so much you'll learn in a single course.

I think it's a little astonishing that new degree holders in DS don't know any of what you asked, but as others here mentioned they may have just been SWEs switching fields. DS just isn't a field that is kind to beginners because of all the sub-field-specific lingo and little tools necessary for specific tasks. For example, if I was asked every Excel function I know (which was listed as an interview question on a position I ultimately ignored), I would be able to list like 20... does that mean I don't know any others? Of course not. I just don't need to use it until it comes across my desk, so of course I'm not going to mention it next to more obvious ones. | 1) People  are LYING about their skills, 2) PEOPLE are LYING about their skills, and 3) PEOPLE ARE LYING ABOUT THEIR SKILLS. | I wish I would have those questions asked to me, I applied all of those concepts in my Master’s degree in the first semester. | Oh my god? I've been working my a*s off and none of the interviews asked stuff like this. It's either leetcode or just a ""What do you see yourself doing in the future"" followed by rejection no matter how well I perform. What company are you working for? Honestly I'd apply and give it a go | I’m a data engineer looking into getting a solid foundation in data science. Do you recommend any online course worth taking to learn in details, data preparation techniques, modeling, model training..etc Thank you! | Not saying that any of the questions you presented weren't fair game, they all sound reasonable. But maybe do you think since you came up with the interview, you're a little closer to the problem and have thought through the considerations a lot more than candidates who are seeing it fresh. That if they can at least present the trade-offs for the solution they present that they have some intuition of the model building process? | This is really surprising, I come from a stats background so these are the types of questions I’d expects stats ppl to be very comfortable answering. I’ve been asked all these questions in several interviews! | Just use catboost lol | That just means you guys aren't paying enough. The good candidates skip the job posting  | The OP and comments point to a mismatch between HR screening and the actual work of data analysis/data science. HR seems to be screening to superficial qualifications - specific degrees or certifications, experience in corporate, etc. 

I have an eclectic background - PhD in social sciences, data analyst in university settings but in busy operational offices, and leading analytical teams. I know all the stats and data cleaning issues the OP writes about, because I have qualitative analysis training. When you come out of a data bootcamp or know nothing more than which python library to use, and have never spent time cleaning data and doing good EDA, you will never understand that these are the essentials to any good data science. 

It's a bit of a hot take, but considering that ML and even AI are essentially gussied up versions of different types of regression, it seems to me that good HR policy would be to build diverse teams - suer, have the ML/AI math genius guru. But complement the team with people who know stats, or are specialists in cleaning and EDA, and who have degrees that aren't in CS and can add social domain knowledge. Also, set expectations with hires that it won't be all running ML models, but will include grunt data work so you know the data and implications for imputations, etc. 

Until HR screeners can see through this bubble and hiring managers insist on diverse interview pools, you'll get these frustrations repeated time and time again. | I've seen this exact issue in past orgs—the gap between academic ML skills and practical product analytics.

In my experience, the strongest DS candidates aren't the ones who know every imputation technique, but those who can turn business questions into analytical approaches. We only started hiring better once we added product case studies to the interview, alongside technical questions.

While building hunch.dev, we’ve noticed many DS folks tend to avoid product-related questions. Meanwhile, product teams are the ones asking natural language questions like “Why did this metric drop?” and generating the analysis themselves—without deep ML knowledge. It doesn’t replace strong DS fundamentals, but it helps bridge the gap and lets DS focus on the more technical work.

For interviews, it might be worth adding a business context exercise to see how candidates apply their skills to real product problems. | For someone who's done b.sc in statistics and wants to get into finance, what would be your advice? | I've started to see something similar in our company but for a pretty specific reason... we're a small start up and have ties to a university so a lot of our initial hires are interns from the university's computer science department. The department curriculum used to be way too rigorous, but now they've swung too far the other way and don't actually teach valuable skills for the real world. | Not knowing what class imbalance is and applying for a DS/ML position sounds insane to me. | Unfortunately this is true of people with multiple years of experience as well. I suggest ""Applied Machine Learning for Data Science Practitioners (Wiley)"" https://a.co/d/0lH5dWM. Focus on learning the why instead of rote learning answers for interviews. | Thank you for your insight. As someone who is trying to get into ML what are the topics or concepts I should know. Besides the ones you have here? | We are doomed. | This sounds worse than leetcode | I answer all of questions similar to these pretty well and comfortably and still get rejected. | You lost me at impute. | break a leg! | [removed] | O look 
K | OP(I'm new at this) but all yall suck.... the most likely answer is that you sucked at realistically determining candidates experience | I am a European interviewing in the US. I have a feeling that leetcode is less common here than in the US but I might be completely wrong. However, as someone who would probably suck at leetcode myself it seems to me as an extremely lazy and unrelated way of recruiting… | I think the theoretical stuff OP is talking about is pretty basic in terms of DS though. Like even if your experience isn’t as mathy, you should absolutely know stuff like the order of operations when splitting the data. | >coding in the latest and greatest frameworks

You mean `import` / `library()` ?

Is that really ""coding in"" a framework, one must ask? | It's really not asking too much to know these concepts and be a decent coder imho


These are the very basics of ml, without these your models will do more harm than good | I wouldn’t call these “mathy concepts”. If someone doesn’t know how to differentiate a graph neural network then ok, that’s not super necessary. But they should know how to deal with missing values. | I am a hiring manager and not a data scientist. I am more interested in how problems are approached and solved and the methodical rigor behind them, but I'm not digging into the code that they are going to build just to understand the framework. | We have seen the other people complain about simple coding questions too? | For question 3, I completely agree. When asking the candidates about potential drawbacks for OHE I explicitly hinted that my question was related to dimensionality of the data as one of the categorical variables had quite high cardinality. | Oh interesting, I’m a DS in big tech and have been interviewing 4-5 people a week. I’m going to be completely honest with you, I could not answer those questions haha

I guess for us, DS is closer to product analytics. All our first round interviews are product cases. For technical questions I feel like you can just google those? What I’ve found is that so many DS interviewing with masters or PhDs flounder hard on the product case. The more technical DS roles at our company tend to be labeled as ML engineers. | It's the standard but not always possible because how how it impacts dimensionality and the compute cost to try and predict over it. Often you'll need to think about recategorizing. You wouldn't simply OHE customer location for a multinational company's customer base, for example.  | In the real world, jobs dont reward technical correctness (for lack of a better phrase) enough, so long as you made a beneficial recommendation, non technical stakeholders wont care whether you used a t test or some other test appropriately

There's also a large focus on tech stacks. I know smart and self sufficient data scientists that are good at self learning but somehow still forget fundamentals of class imbalance, standardization vs normalization, etc.

Good interview processes should screen it out but I find all that pretty rare | This is really well stated and I'm putting my take behind yours because of the overlapping content. Here's my take:

1. Companies had a major role in this. Some companies were so keen to have 'data scientist' on their team, they just hired one -- even if that meant Excel and SQL were all that was needed. Others needed actual data scientists to solve hard problems. Some used the term as a form of title inflation. This is one that most closely fits your hypothesis.

But there' also:

2. The job has changed wildly over the last 10 years. That ranges from natural language processing going from NLTK or maybe SpaCy to LLMs, from having to potentially do all the data engineering to having that as a separate role, etc.

3. Eager people taking advantage of whatever is possible to gain entry to the field. I can't tell you how many times I've seen someone poorly state their goal of being a data scientist and immediately ask for help. Even on this forum. Now imagine them with 6 months' effort applying for jobs that they've run through ChatGPT. Oh, wait, you might not have to imagine that.

4. Shit job requirements in posting. For the life of me, I don't understand why companies can't just put down what they \*actually\* need as a minimum instead of the perfect candidate.

`A good match for this position will be very familiar to fluent with the entire ML modelspace. Or interview process will cover the supervised and unsupervised model groups with particular attention to {regression model tuning, or whatever}.`

`There will be two simple take home tasks provided to assess your coding style. After which we'll discuss your code along with model selection, evaluation, and tuning processes uses.`

`Additionally, a successful candidate will be aware of and able to state their stong and weak areas in ML modeling.`

5. Domain expertise as an additional filter.

6. Stovepiping. If I work in, say, the housing industry and most of my work focuses on regression models, over time, I'm not going to be the best candidate for vision tasks using vision models unless I have a lot of side projects. | My wife consults on this stuff. Interviews as they are currently structured are mostly worthless. But companies don't want to change their hiring practices to methodologies that are actually useful.  | Very well said, couldn’t agree more | > you might hire someone who can answer questions promptly and signal effectively, but they could turn out to be terrible

because an interview is a game, or performance art. Some argued it's not even art | I'm in a respected MS program for data science. The fact that there are a non-zero number of people who can't calculate their projected final grade based off the weighted averages and substituting different values for the final is nuts to me. | I'm not even sure about that, because if you ask these same ""alleged SWEs who are in DS"" to code up solutions to some basic Data Structures + Algo questions in Python... they'll struggle at that too. Not weird Linked List or balancing tree questions... just things to do with iteration, lists, and dicts.

I just think there are too many folks from a wide variety of backgrounds who are missing both the stats + CS skills. | Hah I just mentioned your website in another comment. Love data lemur! 

Any chance you run sales on lifetime? | Looks like an interesting book! Do you have any book recommendations for DS basics, less on the interview aspect. | I’m glad you find it useful!
I am asking myself the same… As some of the other replies mention, the recruiter is non-technical and probably has no clue what to look for in the initial screening. | I agree. I just graduated a retraining program on data science and engineering a few months ago and I had no problem answering these questions. Honestly this is basic decision making in the process... | I don't entirely disagree, but some things like ""know what cross validation is"" and ""data leakage is bad"" are elemental. Not knowing the latter, especially, is to be unemployable if you are going to be asked to build models. | Exactly right! | bingo! data leakage. Some may already argue best practice is to immediately split, and lock the test set in different folders after pd.read\_csv | Honestly AI should replace the first round. It should a be a phone call and the AI should just ask you about concepts on the spot. Its better than recruiters being like do you have pandas experience? | I mean, my questions might to a lot of people on this sub be very basic and thus not what you want to aim for. However, if you could confidently answer those my questions, you would have been a top candidate! | Completely depends on the role/company. Some roles will be primarily ML, some will barely touch it, and roles will be all over that spectrum. Even within a large company it may depend on the team.

That being said, these are pretty basic questions and I would expect most strong DS candidates to be able to come up with at least reasonable answers. | Similarly, what types of degrees is OP seeing? I don’t think these are unrealistic questions for a 2-hour interview. | The best candidates were definitely the ones with a relevant university degree. A masters in DS, stats etc.
The less impressive ones were people who had done bootcamps, or pivoted their career and moved in a more and more data-related direction. Usually sitting in some sort of analytics position.
However, I was also disappointed by a few candidates with promising degrees. | Not all data scientists are building ML models!! In fact, the majority are not because most companies do not need it. Unless you’re the type to characterize basic statistical modeling as ML, but I digress. 

That’s the challenge here: we all have different definitions of what a data scientist is, and work can vary greatly from one company to another… | Do you have any examples of what could be more appropriate questions for a DS Jr role? Tbh, I consider OPs questions general knowledge for a DS. | You think those questions are too broad? Ha no those are basics for any data scientist. In general I agree that interviewers seem to expect anything under the umbrella of DS is valid but these questions are very fair and I would expect anyone interviewing for a DS job to know the answers to them. | But they didn't ask questions about Python, SQL, Julia, and Matlab. They asked something that transcends a specific language or framework – something central to Data.

How do you deal with missing data?

How do you deal with too much data (volume, or dimensionality)? 

It would be like asking a SWE about caching or data locality – something at the core of computers. | This was not a junior position, no. I understand that the topics may seem quite basic to most of you but given my own limited experience in the field I decided to focus on something where I would feel more confident. | Is this really true or is it a doomer statement? | Yeah . Why are interviewers testing for these concepts when the average role for the title rarely uses these. It just seems like OPs workplace is behind in current terminology for titles . This isnt 2015 anymore | This is exactly my impression. This was the first time it really became clear to me that doing a 2-year master’s is actually worth the time. | Please get me a referral haha😭😭😭 | If you shoot me a message I can give you a few more of my points of focus. However, as stated I am only going by intuition and maybe you won’t meet similar questions. However I do think it is important to really understand these fundamentals. | A mix but those with degrees were miles ahead! | The job post quite clearly emphasizes ML and predictive modeling as responsibilities. However if they sat with extremely valuable knowledge that did not fit my questions I really would have hoped they mentioned it either during my interview or at some other point. As for the ‘gotcha questions’ I really don’t hope I come across as having made such questions! I always phrased my questions very openly “Can you talk a bit about X?”, “Are you familiar with Y?”

Edit: But I completely agree with your point! | We might just be from the exact same small country ;)
However, as stated in another reply - the candidates have been US-based. | Hi, by any chance, are you looking for one? | ooof not knowing Gradient Descent roughhhh | Well I’m curious what the salary range is for the job OP is trying to fill. That might explain some things | I would guess it is related to data maturity of the company. We are so left behind and for that reason we have no recruiter with any knowledge of tech. Perhaps you would hate to work for a company like ours lol! | I have an honest question, could you please tell me how it looks a normal day in the job for you? I'm asking because I only have 6 years of experience in data science but Op's questions sounds like general knowledge for me. I wouldn't expect detailed answers, but at least a general idea. I suspect the kind of work I do could be completely different than yours. | > Do they have github projects that are empty or filled with just a couple of jupyter notebooks? Do their projects have 5 commits?

OP mentions the recruiter is non-technical so they're likely not even checking Githubs. From my experience most people don't bother looking, including hiring managers. | Google leakage, as this applies to more model build decisions than just imputation, including making training and test sets and validation sets if you do that too. 

The TL;DR is that it allows information in the test set into your training data and creates a biased perception of model performance, usually in a way that looks good in development but doesn't replicate in production. | Labeling means applying some sort of order to the categories, so you can turn the categorical variable into a discrete variable. Risks are that the order needs to make a lot of sense, and that is often difficult/not possible. Benefits are reducing the dimensionality of the fitting problem | I have the same question. OP please clarify. 

Also would decision tree be a valid alternative here? | Thanks for the input! Are there any of my questions you wouldn’t expect/prioritize even a high level answer to? | Medians and modes aren’t averages. When I hear average, I think of arithmetic, geometric, and harmonic means. Try asking “What’s your favourite measure of central tendency?“ instead. Guarantee you’ll get better answers. | There's an argument to be made over whether or not leetcode measures something related to job preparedness.  

In contrast, all of these questions are directly related to how prepared you are to start making real models | lol what

Reverse this graph from scratch as if no libraries exist whilst the interviewer does something else for 45 mins vs. Discuss data decisions along with a potential colleague that you’d potentially make in a project. | Interviewers may be lazy here in the US, or have more of a tendency to latch onto cookie cutter formats just because it's common practice. There are much better ways to test coding knowledge while also testing data scientist knowledge. IMO there's a baseline level of leetcode knowledge that is useful, but spending any more than 1 or 2 questions on it, let alone more than 1 round, is a definite waste of time

Anecdotally Google's technical screen had me code up an ML algorithm from scratch (one that I had direct experience with so it wasn't random). Another tech start up gave me a tangentially related leetcode medium type question that I couldnt solve. Later on the only difference from me knowing how to solve it was simply studying for it (fundamentally, a DFS or BFS question involving stacks or queues), yet still accomplished nothing in demonstrating my DS knowledge | I’ve interviewed experienced candidates with great resumes (PhD + YOE) for principal level positions and they’re unable to answer rudimentary questions.


One dude couldn’t fathom a guess on the difference between a left join and an outer join. I know we’re not a good fit after that haha. | I commented it below, but you can build any model now in 15 lines of code. It's not some big differentiating factor when you're importing the same library as everyone else. | One example would be using an ETL library like pandas/polars/dplyr, which still requires significant coding ability to get the best use out of them.

There is no professional merit in reimplementing ETL libraries unless you have a very specific need to do so, as your homebrew implementation is guaranteed to be worse than a battle-tested framework. | Ah so it was more we were two ships passing in the night instead of being completely off course lol.

A problem I have w a lot of programs is they teach you how to do X, but not why you did X and therefore when you should use Y instead. 

My program had a ton of math because of this and I used to joke that there were only two kinds of people: those who had the decency to have their crying breakdowns about math in the comfort of their own home, and those who didn't. I was the latter. | Huh... When I read the original post ""surely has talking about something more significant that the cardinality increase"".

I'm not genius and I constantly feel people can see the imposter syndrome on me, but I am a little sad to see that current candidates are not familiar with this one. | I don't understand your argument then... If you do not have function that makes a reasonable representation how can you encode it differently? Counting usually makes no sense (well, it could but usually not), ordinal is ordinal, what else? Clearly you should know what each method means, but there are no many alternatives sometimes (I can come up with 10 ideas to do it, but it is not necessarily smart). | it's  not only dimensionality but also memory, and cost, if you do feature engineering in cloud to inflate number of rows in tables | Hell, I'll take an interview.

Depending on which company you're at, I've heard ds is more product analytics. One of the problems w the industry right now is that ds (as well as DA, DE, MLE, BI) varies so much by company that we don't have a clear structure/division between the roles and so most people end up knowing and doing some of most of them. | Do you mind sharing a few standard questions you'd ask so O can see how such a role would differ? | And you just highlighted the main problem with big tech. A bunch of piss poor ""DS"" who can't even answer basic, fundamental questions that ever jr. Should know, but then wonder why you guys are constantly being laid off. | A great example of the importance of domain knowledge. I'd try to recategorize it by state/region or think about if a value like that is even relevant to the problem (feature engineering). | DS/ML Interviews should cover the very basic, fundamental of ml, a bit product sense case, data quality engineering. On top of that, the mindset of curiosity. | A simple formula in Excel as a good enough approximation?    

Careful buddy, you’re in the DS subreddit and that’s Heresy!! | Just in my experience, which is small and just a sample, it's usually the folks who make the transition who don't have the math or stats basics down. Even further, they struggle with SQL as well (especially joins and when to aggregate and join different datasets at different levels of granularity)

To be fair data science is so broad, it's hard to be proficient at everything, but I need a certain skill set when I'm interviewing and it's disappointing when it misses the mark but the background in CS is there. | Appreciate the love for the site. unfortunately we don't do any sales or discounts or anything (it's literally not even built into our backend/payments stack) | I like the book ""Data Science for Business"". I also like ""R for Data Science"" **IF** you are familiar with R because you worked in econ/bio/public health before (otherwise chose Python). | Is this for an entry level role? I wouldn't be surprised if the recruiter is passing them along if their resume has some buzzwords and a MSDS/CS. | Totally agree, unfortunately I have seen many school and bootcamp ignore that while spending a lot of time in algorithms. | Thanks. You still hiring? 😂 jk | There are reports of companies struggling to detect whether a candidate is using AI. I have a feeling an AI Interviewer would be even worse at this. | You've been down-voted into oblivion, but honestly some live coding screen + AI behavioral interview + random question about their resume could filter out enough folks better than a tech recruiter. I've seen some VERY tech recruiters... and that the bar is low enough for AI to fill in the gaps. | This also makes me feel better. My problem right now is getting an interview in the first place, but these questions are very basic, which bodes well for when I do finally land an interview! | If I have a strong answer and academic qualifications could it make up for it? Like I’ve dealt with some of these issues like imputing data and could come up with some responses I think | Sadly I am one of those people who pivoted careers and would probably stumble over my words if I was interviewed by you. I took an analyst job after I got my “masters” degree in data science and unfortunately landed in a role that doesn’t use much if any of my data science skills. It’s been two years since I finished school so I’m rusty even though I try very hard to shoehorn data science work into my analyst job. However I will say, I found this post to be super useful! 

I’m applying for a junior data scientist position on another team within my company and this tells me what types of questions I may get grilled on. So thank you! I am not super confident I’ll get this job— at this point I’m actually pretty happy as an analyst but I want a greater challenge than what I do now, so I’m hoping I can get this opportunity. Anyway, thanks again! I hope those of us imposters out there can meet the bar someday haha | I think your line of questioning seems really reasonable to figure out if someone has a good grasp of the basics.

I think what you're seeing is a combination of the massive hype around ML that still shows no signs of slowing down and the lack of quality standard education naturally pipelining into DS/ML roles.

It means there's a lot of people at the bottom end who want in and, at best, only have parts of the set of skills that will make them a good ML-focused DS.

I've interviewed more experienced people, and I usually end up fairly disappointed in the grasp of what I would call the basics from candidates.

I feel like DS candidates with a really solid and broad grasp on the skills to be good at ML are actually quite rare. | Pretty sure I didn't say they are. Calm down. | Depends on the job. My juniors do a ton of DE. | These are basic for your area of expertise. Other people have other areas. That’s why I’m saying be more specific. | You have to ask basic stuff. Ask me about the topics of my thesis and I am an expert, but if you go advanced with class imbalances or convex optimization and I might be... Let's just say that we all have gaps in our knowledge. | A lot of companies are using “Data Scientist” for experimentation/causal inference/analytics roles and “Machine Learning Engineer” for ML roles. At least that’s been the case at my last 2 companies. | It's super field and company specific. You can't make that kind of generality about a whole field, but it may be called things other than data science depending on the company | Sorry for the bad news but it’s been true in my experience (~10yrs of DS). I majored in ML thinking I’d get to use it. The most I use it is the occasional regression every 4 months or so. 

If you are attracted to the ‘sexy’ ML work, and that’s really what you want to do, I recommend looking into the field of ML Engineering. It will likely be more fulfilling for you. 

It if you like strategy, dictating the flow of resources, working with people (I do) then DS seems to be the place. | As someone who got a lot of flack for starting a second masters this gives me hope I made the right decision | That's what I've found too. I haven't done a lot of hiring and I've never hired for an entry level position. When I do the people with formal educations are more well rounded and have a good grasp of concepts.  | I am only pointing this out because it was a learning curve for me as well. I didn't see the job posting, but at my company the postings can be quite broad. Lots of people might consider basic forms of regression used in Econometrics ""predictive modeling"" even if it isn't realllllly what you meant.

I have seen similar trends when interviewing candidates, but what is most troubling is when candidates claimed to have done these things in their current jobs. | It actually seems like it 😄
Glad you at least found some well suited candidates from the sound of it. | No, just hirer one 6 weeks ago | Haha hopefully you find the right hire soon! | That's a mistake, it takes 3 minutes to go through those repositories to find out a candidate is not good. | This was basically what I was looking to hear when asking the question | Also called ordinal encoding or integer encoding.

yes and no. Ordinal encoding maps all the categories to discrete values, so all the information is still contained in one variable, but now it's numerical.  
  
The way trees split on variables is < or > a certain value. you can imagine that this shows completely  different results on this labeled version of the variable, vs a OHE, which leads to many binary variables, which each require a separate split. | Yea, no worries, and in my personal opinion:

  
1) Yes this is an important one, anyone who doesn't see a problem with doing -anything- with full data without splitting definitely better have a good reason for this, or else they're not the best choice.

2) Yea, also important, considering it's exactly the minority class in many cases that's most suited for ML automation.

3) This one I think is more trivia-ish. There have been so many ways to encode variables and I guess if one hasn't had exposure to them in the wild it's very easy to gloss over the pros and cons of each. For example for label encoding the obvious answer is that it imposes a total order and a numerical relationship on the categories, which makes it semantically wrong in many cases and for linear models this effect is definitely quantifiable. But what about neural nets? The non-linearities will mess up this kind of linear relationship anyway so I'm not so sure what actually happens.

4) Depending on the size of the dataset, cross-validation may not even be feasible, in which case it's not useful to know. I think cross validation is one of those ways to create more data from limited amounts of data. It's good for hyper-parameter tuning I guess? But hyper-parameter tuning has rarely been the make-or-break piece in my experience.

5) This is another one that I personally think is a bit more trivia-ish just because even more than ways of encoding data, this has had so many results in the years since DS became a hot field. In my case, I learned all the basic ones (like via derivation from first principles) in school. But ever since I started working, anything I needed, if they were common enough then I could find them in some ML framework, or if they weren't, then I could just read the paper or something.

Having said all that, I obviously don't know the context and requirements of the role you're hiring for and even more than that, I don't know what the candidate pool was like in terms of their actual experience. | Medians and modes are averages. They aren't means.


If someone wants to pull out geometric or harmonic means, they are welcome to do so. Nothing in my question prevents that response. | I mean for a job like this, it's pretty obvious leetcode doesn't work. I can build an ML model in 15 lines of code using open source packages that have been optimized by way better programmers than me. What else is there to test on besides ""what is the model actually doing, how do you prep the data, how do you tweak the model?""

Slight exaggeration for emphasis but I think my overall point stands. | Op is a new grad w no work experience | A left join is equivalent to a left outer join.  You can have a left, right, or full outer join.  Did you clarify what you wanted in the interview, or did you maybe get outer join confused with full outer join?

EDIT: \u\rebeleleven blocked me for asking this question... | Sort of related, I'm the dean of the comp science division at my college and interviewed a PhD in comp sci and they couldn't explain what a pointer was...basically tried to say it was a python variable alias or something.  | Zero chance a PHD didn't know a freshman level concept??? 😭😭 | I agree, and that's why there's no excuse not to have a good grasp of the ""other stuff"" -- data leakage, cross validation, bootstrapping, regularization, feature engineering, diagnostics, etc. 

The curriculum should be freed up to address these topics, and that it _has not_ is support for my hypothesis that DS programs are poop from a butt. | At one point I considered trying to ""rewrite"" ML algorithms in python to create my own package, but I realized I wasn't going to get much out of it and it would be significantly worse than open source stuff. I already knew the math behind the models so it would have mostly been me building a bunch of for loops since I don't know much about code optimization.

TLDR: interesting academic exercise for the right person, but not valuable. | I meant in the context of the ML topics discussed by OP, def not those other frameworks! 

I fully appreciate that you are probably not employable if you _don't_ know your way around a few modeling libraries. My comment was to highlight that this _cannot_ be all that you know. | And then the final layer is being able to do all of it in the context of your domain!  | E.g. binary encoding also has its drawback, with this direction it is a good question.

Most importantly, it all depends on the downstream task (e.g., what model? Maybe another task like IR?). | I think what op is saying it's that candidates knew OHE but not why it was the right solution. 

Just because the candidate was right doesn't mean they might apply the technique when it might be wrong. | Yeah pretty much haha 

Although I find at most big tech companies, DS is more like product analytics because the org's primary function is to drive business impact. I have seen some DS lean more product heavy, others lean more technical and work on light modeling with MLE and infra tools for the rest of the analytics org. Really depends on the teams needs, and this should all be considered during the team matching process. | The product case is typically structured to mimic problems we encounter at work. Like xyz metric is down 15% WoW, what do you do now. What recommendation would you make to PM to solve this issue, how would you set up an experiment, which type of test is the right one, how do you prioritize solutions, what kind of analyses would you do to find the right solution, etc. 

I find that most candidates who just graduated with masters or PhDs fail immediately because they don’t bother trying to understand the question and make a bunch of assumptions. They also tend not to tie back to business impact and struggle with 80/20 everything (I.e. spending too much time on niche solutions), and also lack any good structure to solving a problem. From my perspective, for most analytics roles the technical stuff can be ChatGPT’d to get 80% there. The real challenge is understanding what the business needs, what your stakeholders need, and prioritizing projects with the highest impact. I feel like 80% of problems I come across can be solved with a simple linear regression. I’m also biased because I only studied economics and didn’t get a masters but my parents ask me about it every week haha | Haha sure, sometimes I wonder why I get paid so much. But I’m also generating the company millions every year so it checks out.

These things can all be googled or ChatGPT’d in 10 seconds. It’s really not that valuable in the context of big tech, esp when there are team dedicated to building really strong infra tools that deal with the nitty gritty details. | Why use excel when you can make it a 6 month long project? | My MS program has no SQL, and every fucking job posting I see asks for SQL. 

Just been using data lemur for now.  | Thanks for the reply! And I actually appreciate no sales policy cause then I don't have to time when I buy. Thanks | The job posting mentioned having relevant work experience so I have assumed someone with a few years of full time experience working as a DS… | The feeling I have towards most bootcamps and DS-labeled degree programs is ""contempt"". I would much rather hire someone with a quantitative social science, stats, cs, etc degree than one of these DS degrees. | Could it? Sure. You're probably not the best candidate for more ML focused roles, so your hit rate  will be lower. But I don't think there's much advantage to a candidate selecting themselves out of roles unless you're overwhelmed with interviews. What qualifies someone to be a data scientist is getting an offer to be a data scientist. | You absolutely said “actual data scientists” have experiencing “building ML models”. | Sounds like they are more data engineering then. No surprises tbh. In the last 2 years I have train like 10-15 for my team or others teams, and sometimes there are significant overlap of roles and titles. Once I met someone who call herself data scientist, but she have zero experience in any field, barely used excel. Crazy times! | No, these are basics for any data scientist role. | 3 mins per candidate is still high. Jobs get 100s of applicants | I am butterfly boy | 99% of the time when the word average is used, it’s in the sense of a sample average, which is an arithmetic mean.

Just ask candidates directly about the pros and cons of using mean, median, and mode. | 🤡


This is an embarrassing comment. | They may understand the CONCEPT, but not the TERMINOLOGY.


I do joins all the time with what I am doing, but because the language that I am using doesn't explicitly use Left/Right or inner/outer joins, etc. I don't have the association of the terminology to the action in my brain anymore (filled with to many other things/lack of use)


Yet I know how to join multiple different keys in different fashions based off of the business users language.


It is more important to get the understanding from the business and execute their needs (assuming you are business facing) than it is to articulate to the analytics person this is a outer join vs left vs inner vs right, etc.


In an interview I am looking for the person to ask questions if they don't understand, articulate how they approach problems they have  never seen before, and look for technical understanding in SOME format; often I will just ask for an example or a 'theoretical' explanation of the most difficult problem they have solved.


It is FAR easier to teach terminology OR a coding language than it is to support learning how to problem solve. | Sir, this is a Wendy's, all your poop better come from a butt.

I think most of them are. If your program doesn't make you cry over math, you're getting ripped off. | It definitely depends on what classes you take. If you take all of the business classes at Georgia tech’s analytics program, I don’t want you as a data scientist on my team. If you take deep learning, reinforcement learning, Bayesian inference, computational data analysis (machine learning 1), and deterministic optimization, I want you on my team. Hard classes that will give you a breadth of applied problem solving. | You should know _what_ a likelihood function is even if you aren't implementing your own optimizers and whatnot.

I would never pretend that the package ecosystems in our favorite languages are of no value -- quite the opposite! -- but it's not a substitute for knowing some fundamentals. | The OG Andrew Ng Machine Learning MOOC had students implement a MLP from scratch (including activation functions, backprop, loss function, regularization) in Matlab or Octave. The implementation was of course extremely inefficient and you were having your hand held all the way through the process but the process was still unbelievably instructive and I'm not sure I've felt as satisfied with a piece of code as my hand-implemented MLP learning and doing well on the toy classification tasks you then apply it to. It's well worth doing to get a deeper understanding of how the math gets put into practice and to deepen your respect for the developers who are writing the low level code in the frameworks we take for granted. | Also that would have made it highly sub optimal compared to the current libraries. Mind you most of those libraries have been touched by people who optimize code and people who optimize algorithms. Don't write your own libraries if you aren't a numerical analysis/optimization/algorithms PhD and it already exists in optimal form. | Very fair point. I know people who are interested in the problem as a technical challenge and forget the point is to solve a business problem. I've looked like a genius by saying ""do we really need a complicated solution that takes 6 months for this when I can have something done by friday?"" | Makes sense, thanks. | Mentioning the matching process makes it a pretty short list for where you work lol.

I'm not personally willing to go through 7 rounds to then be put in a pool of candidates to maybe get a callback later, but clearly enough people don't agree with me. | Thank you for the detailed response! Very helpful! | Exactly, the most difficult one is how to define the problem | Hey man, no complaints here. I rejected my big tech offers to work in big Pharma for more fulfilling work. Still an incredibly high TC, but not completely on par with big tech, which is fine, I live in Chicago so the COL isn't terrible. Either way, I'm fortunate to be generating the company revenue like you instead of being viewed as a pure cost center like many others. | If you don’t know SQL you can’t be a good data scientist.  Full stop.  

Because you can’t answer even the most trivial questions about the data.   


Good news, SQL is straightforward and easy to learn. | If it makes you feel better, there aren't really any programs that have SQL, in my experience.

SQL is something that is almost always learned out of school.

I'm sure there are courses available on it, and I'm sure that some programs touch on it somewhat. But that's just my two cents, you are not alone :) | Interesting. I have noticed over the past decade it seems that DS as a whole has been trending more towards product analytics, though there are still plenty of DS who work with/in ML. This has led to a rising number of posts on here about people wanting to work in ML instead of analytics. I wouldn't be surprised if the ones applying to your role are the former hoping to use your role to break into ML due to the similar job title.

Here's an example of such a thread from earlier this week.

https://reddit.com/r/datascience/comments/1leh4wm/my_data_science_dream_is_slowly_dying/ | I guess the issue is a few year ago data science was the sexiest job of 21th century lol. 😂 

More seriously there are still a shortage of real data science skills. Only a few school manage to train good data scientist.

I would argue that naturally the kind profile we often expect from « great » data scientist is naturally quite rare:
- good enough as programming
- understand stats and ml
- good as story telling.

These kind of psycho-cognitive profile are quite rare in the general population.. | No, I didn't. You've stitched together quotes from two different sentences. Stop being disingenuous. The role OP is talking about is clearly an ML-focused DS role. So I asked if they had DS experience and then clarified further to mention ML specifically *because* not all Data Scientists build ML models. But this role is looking for that. Don't be so sensitive. | I have coworkers who have a data scientist title and could not answer these questions. Companies use data scientist titles for all kinds of jobs. | Yeah, even if its only like 20 people who make it past the HR filter that's still an hour of time the HM needs to spend combing through repos. And it's probably going to take longer than three minutes per candidate if you really want to dig into their code.

I do a lot of code reviews and I'm spending a lot more than three minutes just reading through the PRs. | I'm aware of the discrepancy. That's why it's such a useful question. If someone needs that much hand holding for such a simple question, then they aren't going to be able to perform the role from either technical or behavioural perspectives.


There are many questions that they could ask me for clarification that are positive indicators for technical knowledge:
1. Confirming if I mean ""mean, median, mode"" or if it includes geometric or harmonic
2. Asking if we're discussing purely mathematical or if computation power (data size and batch v streaming) are higher priorities
3. Asking if there is a particular implementation that I have in mind (SPC favours robust statistics) | I agree with this in theory. However: 


1. I’m not looking to teach a principal DS SQL syntax lol 
2. If a senior candidate does not know SQL and has not taken the tiny amount of time needed to learn the terminology, then I know enough about the candidate.


I do generally avoid senior applicants who have (somehow) never worked with databases. Individuals completely locked into tools seem to be use to well organized data or expect data to be handed to them. Not going to be a good fit. This is obviously not the case for less experienced hires. | I think we already spoke in this thread, but I agree (and am very glad that this seems to be the general consensus) | Thinking about it and I vaguely remember one class having a python assignment that sounds the same. Very hand holdy but at then end you ""built"" the ML function.

I got the same thing out of it as you: wow this works, but it's crazy inefficient vs import sklearn. I think you've convinced me to change my mind, after someone solves ML models through calculus to derive the solution formula and then applies it to a small dataset by hand on paper, they should try to implement the logic in code. | 7 rounds??? Dam that's ass cheeks. Most tech companies I've interviewed at were 2 rounds, 1 first round, and then a final round loop that usually happens over a day or two. And match process is usually pretty smooth. From my experience, HM is usually in final round, but sometimes there are other teams that might want to jump on your profile so you speak with other HM/and director+ to get an idea of what the work is like. And then you choose. But every place is different! | Students don't really know any better and misunderstand that there is almost nobody on the planet who knows less about the job market than a university professor or academic counselor (the latter, especially. They are less than useless).

I am firmly of the belief that ""data scientist"" is not entry level. Junior DS is also not likely entry level, unless a candidate has  graduate experience + internship/work experience. Universities crafting scammy programs (esp graduate programs with ""Data Science"" in the name) is not good for students, employers, or anyone other than the Universities themselves. | Well if you’re hiring that’s me.  I’m a principal software engineer.  I Know SQL internals. I have a recent masters degree in economics. I can discuss everything from systems architecture to design patterns, tdd, devops, to stochastic gradient descent and covariance matrixes.

In other words I know my econometrics/ stats as well as the software engineering side of data science.  I can build an api and get your streamlit app set up on EC2 lol. | I can't tell if you're dense, or if English just isn't your first language. If the latter, no worries.

But you said:

>Are these people actual Data Scientists? As in, do they have actual professional experience building ML models?

This absolutely, 100%, implies that you believe an ""actual"" data scientist should have work experience building ML models, due to the adverbial expression ""As in"". | You are hiring a guy who will get 100K - 150K, who will be around for maybe 3 years. I can easily see the low quality of a developer by looking at his code for 3 minutes. Let's say that it takes me a day to go through 100 candidates. How much is a day of work? 400 dollars? That would save you, what? 100 K dollars in a bad hire?

  
What about the lousy  candidates? I spend 3 minutes removing the ones who made a pretty CV with ChatGPT but know nothing. I save the interviewer one hour. How is this not a good deal for the company? | Fair enough | If I was applying to a PRINCIPLE role where I am primarily going to function in SQL, then I would definitely brush up on the terminology. You didn't point out Principal in your original post.


I am pointing out a few terms shouldn't be the disqualifier, it should be their inability to problem solve or point out a good solution in their own words.


I generally work on near top 50 enterprise businesses. Data is always a nightmare, and the tool set that I leverage is quite specific. One of my first tasks is setting up checks and validations on data as well as putting together a method to articulate corrections to the data both back to the source team and have resolved for my downstream modeling- forecast, plan, and scenario capturing of business adjustments/input (in addition to my formulaic driven results)


SQL is a great language, but I haven't touched it in almost a decade. | This is what I've heard for Google and meta, though it's not clear if they still do it. I'm not interested in the high pressure environment so I didn't dig further. | In my country DS is always master degree. And yet I would say a big chunk of students are not good enough. | Nope. This is just obviously something you're super sensitive about. You're taking this out of the context of very clearly being an ML DS role. | > How much is a day of work? 400 dollars? That would save you, what? 100 K dollars in a bad hire?

If we were talking about small companies or start ups I can see your point. But I don't think most hiring managers care about saving their company money assuming they work for a decently sized one. Hiring managers tend to have a lot of other things going on where it doesn't make sense for them to spend hours looking through repos either. | > I’ve interviewed **experienced candidates** with great resumes (PhD + YOE) for **principal level** positions…

🧐


But again, I generally agree with you. It’s only for the more senior roles that if a JD says you gotta know SQL/Python and you cannot answer basic questions about it… it ain’t gonna work out well. We do have a smaller, focused team. The time needed for someone to pickup fundamental technologies is just generally not worth it compared to other candidates. | Not sure about Google, but several friends at Meta. Two rounds for analytics. | I would never pretend I understood the environment outside the US! If it came off that way, I apologize. | Lmao. It’s okay to be wrong sometimes! What you said is what you said. | This is what happens when you are day 6 of 3 hours of sleep. Yay kids!",DS candidates. good data scientist. interview questions. more data engineering roles. more data
1li6e4v,Would you do this job if you were rich enough to retire?,this job. you,88,0.87,https://www.reddit.com/r/datascience/comments/1li6e4v/would_you_do_this_job_if_you_were_rich_enough_to/,88,1750649076.0,"No | Fuck no. There are harder ways to earn a living, but so much corporate bullshit 

I have to walk this tight rope between making models that never get used because my director is an idiot who offers to have us build things with no strategic thought, or having to fight with stakeholders that my retention model does not also cure cancer. I'm burnt out | I love my work but no. I don’t like working in general you know? Just my character type is really chill. I like my job but don’t require this much effort to feel fulfilled. I require money, travel, love, friends, food | I like what I do.

But no. Absolutely not. | I would work for a nonprofit with a reduced salary if I was rich enough to retire . | No. 

I'll do it for fun at home. | Absolutely not no. | No. I would probably become a researcher | Definitely not lol | God no | Hell no. After fifteen years done enough to not have any other mountains to climb. Barely able to maintain interest as it is, partly because of I’ve been there and done that, partly because the interesting bits have become scarcer, and have been replaced with stuffing about with API calls or similar.  | if i were rich enough to retire, there are about 15 other things that immediately come to mind that i would do before ""making more money for The Man (TM)"" | No, while solving challenging problem via data is fun and all, but corporate leeches sucked all the meaning out of everything, I do rather not. | Yes I would, absolutely. But not for the people I am doing it for currently. | Definitely not, I'd use the time to be with those I love. | I enjoy the work and would continue on a part time basis with people whom I enjoy working with and a product I can stand behind. | yes, but for a charity. | It depends on the domain, but for me, yes. I'll happily be doing this for the rest of my life | I don’t think I’d do any job if I were rich enough to retire. | Yes. I would be bored otherwise | I would actually. 

I like the process of data -> processing -> insights. I was doing it for a lot less money earlier, so if I don’t need money then why not? | I'd take on interesting charity or personal projects, but that's it. | I might pick up teaching a class a term (DS lecturer) regardless of if I needed the money, but I'd take a year or two off before I even thought about it. | lol absolutely not | Hon, I wouldn’t do any job if I were rich enough to retire | There’s a reason I did a sprint for c-suite as soon as I landed my first data science job | By rich enough to retire does that include having the money to support my kids and grandkids with college and whatnot? | I have my own data analytics business, and I love what I am doing; no amount of money would change that. If I had enough money, I would pick more interesting projects, and those with real societal impact.  | I’m on my way to FIRE, so I guess that’s my answer. Planning on doing some part time consulting, maybe get a chill remote job. | I would leverage the skills to do algo trading. | Yes. | Not as a job, no. But in my free time I might spend a lot of time on personal data/modelling projects and AI tooling, since it can be enjoyable in itself. | Depends on the job, the domain, and the flexibility. 

If I can do meaningful work in research or for NGOs and I have a reasonable amount of time to myself, sure.

If it's like my last job where I'm on call 24/7 to do sports analytics I don't care about, absolutely not. | I probably would keep doing my current job. Though maybe I'd do a PhD first.  | Hell yeah, I love this job. Even the difficult stakeholders, I love helping them as long as they are well-meaning.

The only thing that would change is I’d freely tell the few real assholes I do encounter to shove it if I could retire and maintain my lifestyle for the rest of my life. | I would use the skillset in some other passion area. | I would do it for startups, secure more equity, and sell. Retirement doesn’t create a legacy. | I enjoy the job but probably not enough for a 9-5 all year long. I would work/volunteer with non-profits (on a contract/project basis) and/or teach or tutor or mentor or run local events or something like that until I got bored. | love this field and the work is fun and interesting. still no. i’d be traveling and golfing everyday if i was rich, not working | Yes X10 because I would have a team also doing it with me and I’d be willing to pay my tech resources with my own money to turn ideas into reality. I have this conversation all the time, my husband is a creative type (writing/animation) and he’d also work if wealthy. We even know what buildings we’d buy for expansion (we are by a university so office space for intern/entry level is worthwhile; plus I believe in the value of hybrid work/occasional in person). 

If you’re feeling like you wouldn’t “do this work” I encourage you to look for directions to dig deeper towards your passion so there is a thing you’d actually be excited about doing. If that takes you out of data science entirely then so be it. | Heck no!!!!!!!! I wouldn't work any job if I had that kind of money. 

But I would volunteer once a month to keep my brain fresh as I age. | If I had enough money to retire, I'll still do this, but I'll pick and choose what I want to work on. | No, who tf would do any job if they were rich enough to retire.... | Sigh… I’m in school for my MSDS now and this is discouraging. Although I feel that this question and all of these “nos” are probably true for many jobs. | Nope.

Would I be doing some sort of modeling/statistics/data/programming work? Yup. But not as much, and not for a company that isn't mine. | No. I would spend more time with my kids. Do something for a non-profit part-time. Spend more time outside like hiking and kayaking. | Nope. But I might like to do something like volunteer data analysis work for academic research. | I wouldn’t do any job if I could do no job. | I’d be bored if I retired.  

I enjoy looking at data and analyzing it. 

Hell, I’d do this job for only $50/hr most of the time even though I was paid $100/hr.

If you’re really that bored (or that wealthy), then try it with a dildo in your ass for half the day. | Yup. It never hurts to keep building and the job is pretty not terrible. At least IME. | Hmm I work as a researcher so some overlap. But holy shit am i glad I dont just analyze and print data non stop. Its a great life, even if very underpaid | Part time, yeah probably. Definitely not full time | Would I keep working on data science projects? ABSOLUTELY.

Would I keep working for my current employer? Absolutely not.

I'm in this field because I love what I do.  I work for the company I work at because they pay the bills.  My dream is to do data science work from my balcony in a tropical resort. There's so many interesting problems out there that I'd love to explore. | I'm curious. I'm a management consultant with background in Finance and Econ, and looking to transition to DS through a Masters.   
  
What is the part that you like the most about your day-to-day? Is it:

\- Building and designing the models?

\- Researching or developing new techniques?

\- Going through the data and gaining insights?

\- Anything else? | Depends. Most probably. 

Outside of work I do three or four large projects each year. 2 medical imaging. 1 personal whatever and 1 predictive betting one that funds the year.  No cash etc just donated time , skill and compute. 

I love that stuff would continue doing it paid or not. 

I regards to work probably not. The hurry up and wait kills me. The high effort shit data low value stuff sucks. 

So if I became rich I'd probably open my shop. | No, why would anyone? If you make to make money, it’s good. But if I didnt have to work, way more interesting ways to engage my curiosity  | Currently I am working for the pursuit of knowledge. I have had jobs in IT for the past 6 years and learned way more in that experience than I would have from the internet or textbooks. I push myself to tack on interesting challenges within my day-to-day tasks to keep things interesting and my brain sharp. (This is after learning about the fundamentals of engines/ electrical/ PLCs) 

So, yes I would retire immediately and invest my time/ money into a 12 acre lot in a location near the things I enjoy. On the land I would build/ contract out a custom home and barn for farming (cows, chickens, horses). Then, with my spare money/ time use it for home projects with IT expertise (building a 2 tier network across the property for internet and cameras, self-hosting as much as I can to get away from as many subscription services as possible, also to keep as much as my internet traffic and server traffic hidden as possible. Finally, tinker with creating neat PC designs with small scale raspberry Pis and large scale with a data center).

In short, my projects, constant pursuit of knowledge, and living next to things I enjoy doing would be fulfilling enough. | The work itself is fun, as soon as other people get involved it becomes all about making money. Even in healthcare. No. I would retire and paint my neglected warhammer miniatures | If I was rich enough to retire I’d still do Kaggle and write medium articles for shits and giggles. | I recently started working in this industry (within the last year, and was extremely fortunate to get a job right off the bat). I used to tell my wife I'd be happy being a stay at home dad if she found a job that covered us both financially. But after working in this field I've fallen in love with it! I just had a conversation with her about this again the other day and told her I'd no longer be content not having a career because I actually enjoy what I do now for the first time ever! | Maybe some fun personal projects or free work for a nonprofit if I get bored. Hell no if it has anything to do with a corporate env tho. | Hell noooo | 💯 | Pretty much the same sentiment as everyone else here.  I enjoy the job enough to stick with it, but I'd be out of here in heartbeat if I were that rich. | Yep. I genuinely love what I do, but putting up with corporate bullshit/nonsense if I don't have to? No thank you. | This! | Does anyone have a guide on how to deal with this… | This. Yes I might so this. No not for someone else. | Lol. Not something you can just decide one day | What domain(s) would be a yes and which would be a no? | Same. I’d swap over and try to do fun sports analytics for local kids teams or something. | I’m guessing it means rich enough for you, whatever that means to you | Lol it doesn't work that way. Not everyone wants to do any work at all. And not everyone can get any job. We work because we have to pay rent and buy things like food.. and diapers.
I want to spend more time with my kids, take them more on trips, museums, camping. That is what I am excited about. So what does it mean - look in either directions? There is no such job direction ""take my kids to Algonquin Park"".
Also for passion - well I would really want to be a neuropsychiatrist. But obviously that's not going to happen. | Well this is just the human condition. It's always been like that. All of my ancestors were peasants, until my grandparents. They worked basically 24 / 7. So relatively my generation is doing better. But yea, most humans work most of their lives. Not because they are passionate about it, but because they have to eat and live somewhere. | That’s about it. The creative insights when dats or business is ambiguous and feel like you are solving a puzzle or obtaining an optimal solution to a complex problem. If your model goes to production, there is also satisfaction knowing something you built is engineered well enough to be reliability running on a regular cycle and providing value. I enjoy those aspects of the role. Now I am in leadership and lead a team of 5 DS so my enjoyable parts of the job is growing other people’s career and see them have the same fun I had. | no - but i'd start on the path. get involved at a university, enroll in a program. network with professors,  decide a topic, publish, etc. there's opportunity everywhere if you know where to look | …it does though. 

I’m successful in my field because I’m a data domain expert. I’m a data domain expert because I give many shits about what I do, so many shits that if I had dollars to give instead of merely shits I’d invest that too. 

If I had followed money and job security instead of passion I’d likely not have as much earning potential or job security as I do now because I likely wouldn’t care enough to have acquired the expertise I have. This is some kind of mediocrity trap, and I agree if I were stuck in a mediocrity trap I wouldn’t stay there if I had the money to leave. 

I think the linear visual representation of Maslow’s Hierarchy of Needs has confused people. Like most things in life it’s more of a cycle: meet some of your basic needs, then work towards self-actualization and really get in touch with what you enjoy doing. Let that kind of work become a need—repeat the cycle with a new job description, focus area, or new role entirely. 

You love neuro-psych, intentionally steer your career towards working with neuro-psych apps and devices. Become an expert in this area. Let it be your baby and it you won’t want to abandon it for all the money in the world.

As for *actual* babies, mine are fine and have been to the best national parks on my side of the border. My middle schooler is going on her first overnight canoeing trip this summer, stoked I live a life where that’s possible for her. | I came from a PhD and researching was really fulfilling. There is definitely BS politics in academia too but as a researcher you can pursue many original ideas within certain boundaries. It is more fulfilling than industry if you have the right mind for it | I mean it's just not how life works. Toronto's unemployment rate is currently around 10%. I have a job that I have, whatever I was able to get. And I've applied a lot to healthcare and related jobs, but was never able to get one. And that's just life. I can't just steer my career wherever I want because it's not even possible to get interviews. And I don't really want to argue about - but yes you can, because it's just absolutely not true. It might be true for some very talented people, but my skills and abilities are below average. And Toronto is also extremely competitive.
So it is just what it is. Not everyone is talented and can steer their career to where they want. Maybe you personally are, but by definition of course most people are average and a lot are below average in terms of skills and abilities. | If anyone could steer their career to wherever they want, then there would be no janitors, no fast food workers, no cleaners, no garbage collectors, etc. Most people work because they have to and they don't really have an option of doing what they want to do. | It's too bad industry pays double or more! | I’ve taken 2 huge (10% - 20%) pay cuts in my life. I’m still waiting for the second one to pay off, but the first one got me in the door to healthcare where I doubled my salary in 5 years. 

If I did anything unusual it was that. I do obviously have some talents but they mainly derive for how passionate I am in my field. If you really want to do neuro-psych stay on top of the open source tech and data, maintain a git of projects you’ve done, and put articles on SubStack/Medium/LinkedIn about all the exciting directions and research in this field.

‘Work is just work’ is not just a self-defeating philosophy: as a society we suffer when people are so far separated from their passions. It’s a GDP made up entirely of mediocrity—excellence doesn’t come from just showing up for a paycheck. | Lol that assumes you can commute to work, work, take care of the kids as a single mom, AND do projects to put on git and put articles. I mean some people can and they get ahead. Personally I can't. I put the kids to bed, and I am exhausted, I go to sleep right away. I also don't even really have any project or article ideas. So I'm not even sure what your point is. Sitting at the computer is not even my passion, so why bother with this?
My initial point was that most people cannot follow their passion. By neuropsychiatry I meant being the person who would prescribe psych meds and talk to patients, not make apps. | Ma’am, this is a data science sub. 

If you’re not into the devices or the data apps I’m pretty sure you’re in the wrong sub… | Yea It's not a data science lovers sub :) I am in it because of work. Liking it is not a requirement of being in this subreddit. And as you can see from the comments in this post, a lot of people don't like their jobs. And that's just life, which was my initial point.
But yea, I don't like being in front of the computer too much. | Yeah, I stand by my claim that you’d be more successful in life steering towards things you want to do. Go become a PA so you can work for a neurologist and help people with direct patient care, for example. | You are really missing my point. The OP asked what would people do if they had enough money. And a lot of people would not work. You keep assuming that everyone has some passion that can be made into a career. Not everyone does.
If I had enough money, I would not become a physician assistant. And especially I would not do this given that I don't have money.
I don't want to take another huge loan. I don't want to study. I don't want to be a physician assistant.
I work because I have to.
But if I had all the money I need, I would just go every day with my kids to parks, read books with them, go to museums, make cookies, go camping.",many jobs. data science work. more money. data science projects. job security
1lgvh62,ML case study rounds,ML case study. ML,52,0.95,https://www.reddit.com/r/datascience/comments/1lgvh62/ml_case_study_rounds/,16,1750509150.0,"Author of [Ace the Data Science Interview](https://www.acethedatascienceinterview.com/crash-course) here – it depends (helpful answer, I know lol). 

Depends on the company and role – if it's more of an ML Engineering job, then the ML case study round is more similar to a System Design Interview, for which books like Chip Huyens book on ML Systems + Alex Xu on ML System Design Interviews is helpful.

But, if this is more of a data role or high-level role (like TPM, Solutions Engineer) – it can look similar to the Product/Case study rounds that some Product Data Scientists & PMs face. Things like metric definition, A/B testing, thinking about approaches + their drawbacks. For that, I think my book's Chapter 10 on ""Product Sense"" and Chapter 11 ""Case Studies"" will be very helpful. | Case studies focus more on problem framing, data considerations, and business impact rather than infrastructure and scalability. The interviewer wants to see how you'd approach a problem like ""How would you build a recommendation system for our e-commerce platform?"" or ""Design a fraud detection system"" from scratch, including defining success metrics, identifying data sources, choosing appropriate models, and thinking through potential pitfalls.

The best way to prepare is to practice with actual case studies from companies like Uber, Netflix, or Amazon that are publicly available online, and work through them end-to-end out loud. Focus on structuring your approach: clarify the business problem first, then discuss data requirements, feature engineering considerations, model selection rationale, evaluation metrics, and potential challenges like bias or concept drift. Most candidates stumble because they jump straight into model details without understanding the business context or considering practical constraints like data availability and latency requirements.

I'm on the team that built [interview copilot AI](http://interviews.chat), and we've seen how these open-ended case study questions can really throw people off during interviews - having a tool to help you think through the structure and anticipate follow-up questions can make a huge difference in staying organized under pressure. | Prepare by understanding the business and problems that the company has. This might involve doing some research into the different operating segments, understanding what that translates to in terms of tasks. That way when you talk with the actual business people you will not be hearing it all for the first time! | Something to keep in mind:

Unless the outcome of the project changes the way someone at your business makes a real decision that affects revenue, money spent, or efficiency, then you ignore it. | Have you checked out Chip Huyen's book, ""Designing Machine Learning Systems""? Hands down on of the best resources for what you are looking for.

[https://www.amazon.com/Designing-Machine-Learning-Systems-Production-Ready/dp/1098107969](https://www.amazon.com/Designing-Machine-Learning-Systems-Production-Ready/dp/1098107969)

Are you interviewing for a Machine Learning Engineer role? If yes, then you definitely need to know the principles in this book. Huyen also has a new book on AI Engineering, also a good one. I'm currently working through that one. | Your request is too vague but I would say try to understand which kind of model/application the team is building and brainstorm with chatgpt about potential challenges.

It depends a lot of domain, scale etc | The ML case study round is basically a time-boxed version of real project kickoff: show you can frame the problem, pick a metric, sketch an MVP pipeline and explain trade-offs. I prep by practising on public Kaggle datasets but with a strict three-hour timer. Start with the business goal (“reduce churn 5 %”) then outline data sources, baseline model, validation plan and risk list. Interviewers don’t expect code; they want to see you think in milestones and can defend why AUROC beats accuracy or why SHAP is overkill for week one. If you can narrate that structure out loud, you’re 80 % ready. | Yeah, the ML case study round is its own beast. It’s not quite system design, though there’s some overlap. Usually, they give you a real-world-ish problem like “design a model to detect fraudulent transactions” and want you to walk through how you'd handle it end to end from understanding the data, picking the right approach, evaluation strategy, and deployment considerations.

It’s less about perfect answers and more about showing how you think. Can you ask the right questions, handle ambiguity, balance trade-offs, and explain your reasoning clearly?

What helped me the most was practicing out loud with mock prompts. I used Sensei Copilot AI to simulate that kind of thinking it helped me structure my thoughts and avoid rambling. You can also check out case studies on MadeWithML and apply the same framework to different problems.

Try focusing on your process more than the model. Think data first, problem framing, evaluation metrics, and real-world constraints. That’s what they’re really testing. | What kinds of roles/companies ask this type of question in an interview and similarly what roles would this skillset be most beneficial? I feel like this is my main skillset so would want to target these | ML case study rounds are different from pure ML system design. They're more about how you approach real-world problems end-to-end: framing the problem, data assumptions, feature engineering, model choice, evaluation and trade-offs.

To prep:   
Check out Made With ML and MLOps Zoomcamp (great for end-to-end thinking)  
Practice mock case studies from DataTalksClub, Turing or InterviewQuery  
Try framing past Kaggle problems like case studies: how would you solve it in production?

Also, search for “ML case study interview prep” on GitHub. The key is to talk through your decisions clearly, not just code. | btw u/alpha_centauri9889 when you said ""case study round"" I assumed you are talking about an interview for a company. It might help clarifying this in your question so that you get better responses. | Thanks. Does the book help during interview? | It is treated as a guide for those who seek industry ML roles. That said, I would not treat that as a cheat sheet. You are going to need significant amount of time to study and prepare. | Ok, so will that be enough or some other resources are also required? I have been working as a DS with more focus on analytics and looking for transitioning to MLE roles. | It depends on the specific role you are interviewing for. Like others have pointed out, practicing using real world scenarios is a definite requirement in addition to some source material that can help build intuition about frameworks. 

I'm sure a Gemini/Claude/ChatGPT deep research would get you some example questions and other resources.",case studies. | Case studies. actual case studies. mock case studies. Case Studies
1lhn2sb,I talked to a DS professional who told me Gen AI is going to take up the DE job,Gen AI. a DS professional. the DE job. I. me,0,0.28,/r/dataengineering/comments/1lhn1x9/i_talked_to_someone_telling_gen_ai_is_going_to/,12,1750596474.0,"Could an LLM do 95% of DE work?

Yes

Expect a lot of downtime, mistakes, vulnerabilities, missing records | Everyone wants to think it'll be <job other than mine>. No one really knows and is just saying shit.

If it gets to the point where any of these roles are eliminated or see a significant reduction then most white collar jobs as a whole are fucked anyways. | I don't agree with that take. In the data engineering work I've done, the majority of the time and complexity comes from converting random stakeholder slack messages into consistent KPIs and then getting them to confirm what they actually want. | I have never seen good EDA performed by an LLM.  
Google’s Gemini BigQuery Insights is probably state of the art and it’s meh to lame. | Today AI taking the junior jobs, while senior people are still necessary.
 
But in 5-10 years who will be the senior if no junior get a job today? | That don't make no fuken sense. If that were the case then best practices instruction manuals would have replaced IT 30 years ago. DE is a high sensitivity to error position that enforces rules in a dynamic environment, and turnover for companies is faster than ever. Gen AI is anything but high sensitivity. In fact, I, as a DS person, have been practically shoved into Data Engineering and Business Administration as a career in the current context. | LLM is a great tool for boosting productivity, but if you let it do the project end-to-end without human in the loop, you’ll end up with spending more time putting out fires it creates. | u/GoingOffRoading Absolutely, LLMs can already handle a significant chunk of data entry tasks, but human oversight is still crucial for accuracy and error-free results. | I mean, GAI could definitely take over much of the tactical/technical DE work, like it will probably do with PDS and other fields as well. There wasn’t GAI 30 years ago | This is what I’ve found. If you’re already good at DS, you become really great at DS. But if you’re not so good… well you’re still bad but faster at bad. | It's a lot more than human oversight. 

LLMs can't reason, are not intelligent, and even with the code base loaded as context, get it wrong A LOT.

Like DEEPLY unoptimized queries kind of stuff, or just fake queries all together. | I agree, hence my mention of business administration. It all comes down to executive functioning, and with tools taking away a few of the difficulties, business sense starts mattering. You could be the best data person in the world but be told to deep dive $50k in spending... like who the fuck. I'm not interested in anything under 4m usd if it takes longer than a week.

A majority of the problems in DE are caused by decisions made outside of tech. And the best value a DE can bring is actually outside of tech.

However, I absolutely code better than any model in sql.. the time it takes to get ai to do it is not worth the effort of just hiring better IT or doing the DBA yourself. And the actual volume of text to get ai to understand without document based generation is way harder than just writing sql.",DE work. good EDA. more time. DE. business sense
1lgt6nn,Feature Interaction Constraints in GBMs,Feature Interaction Constraints. GBMs,17,0.92,https://www.reddit.com/r/datascience/comments/1lgt6nn/feature_interaction_constraints_in_gbms/,7,1750500777.0,"I use interaction constraints mostly in financial time-series, where leaking the target is way too easy. With LightGBM I group features by look-back window: all lag-1 indicators in one set, lag-5 in another, macro factors separate. Constraining the model stops it from creating crazy cross-terms between tomorrow’s volatility proxy and yesterday’s close, which would never be available in live trading. In practice AUC drops a hair, but out-of-sample PnL is less jittery and the tree visualisations finally make sense. | The last bullet highlights early use cases of this in industry and I believe the motivation to add it

> More control to the user on what the model can fit. For example, the user may want to exclude some interactions even if they perform well *due to regulatory constraints* | Haven't experimented yet, but I think this might be useful to prevent interactions among OHE versions of the same feature - thanks for sharing.

In a call prediction scenario where I'm feeding in a discretized version of #number_of_calls_last_30d, I would think #number_of_calls_last_30d_1_to_2 and #number_of_calls_last_30d_3_to_4 is noise? | I have not used this feature in GBM but I suppose it works similarly to how you would construct feature interactions for linear models. Sometimes you might want to prevent the model from learning ""oddly specific"" rules. Like if you want to learn seasonal patterns and you have year, month, day of month features, you might want to prevent them appearing all together so that the model can never remember the exact value for a particular day as a shortcut. | Forgive my ignorance but why wouldn't those features be available in live trading, and why would you need to separate lag-1 and lag-5 indicators?

If the training data is appropriately constructed (i.e. for each row your features are only features that you'd have at prediction time) then why would this be necessary? | In theory every lag 1 and lag 5 value is available in real time; the catch is when the tree starts mixing them with **other** features that update on a slower clock (macro, sentiment, etc.).  
If the model builds a split like “lag-1 price > 0 **and** lag-5 macro < 0.3,” you’ll hit a moment where the price is fresh but the macro series hasn’t published yet, so the test you trained on can’t run live.  
Keeping lag-1 features in one group and lag-5 (or macro) features in another just blocks the tree from creating those cross-lag, cross-feed combos. If all your inputs really update together, you can skip the constraint; in mixed-frequency finance data it saves headaches with leakage.",feature interactions. other** features. features. interaction constraints. linear models
1lg5mrg,"Ridiculous offer, how to proceed?",Ridiculous offer,269,0.93,https://www.reddit.com/r/datascience/comments/1lg5mrg/ridiculous_offer_how_to_proceed/,119,1750430314.0,"Lame. They think you're desperate, but it's not like you have a lot of leverage. I would reject. | When you get a bullshit offer, it’s a sign of things to come. 

Anecdote: I had a large insurance company reach out to me about a position via LinkedIn. You’ve heard of them. Red logo. Advertise during NFL games. They said it’d be about a 30k raise and a title above mine. Sweet. I’m in. 

We get all the way through the process, including a virtual on-site, and I receive an offer. They offered me a title below my current and less money than I currently make. 

I hard rejected on the spot. Told them i would not counter as they’re offering less than my current employer is offering and we discussed something very different. Made it clear I would not have attended the interview for this offer. They wanted to set up a call with their head of analytics. I said no, that they’ve received enough of my time. 

They came back with the original offer we discussed. I still said no. 

If they try to fuck you before you join, then they’ll fuck you without thought once you lack a competing offer. Red flag. Avoid. | If they wanted you to go away, they wouldn't even make an offer.

Without knowing more, they're lowballing you because the market is crap and you have no proven experience. You were never qualified for the senior position so that shouldn't really be a factor in your mind. You said yourself that you've struggled to get a job. You now have a job offer and don't know how long or if you'll get another.

Take the job, get experience on your resume, hop to a different role/company.

Also depending on what they have you doing, 70k is a fair starting salary for analysts. Most people aren't getting crazy faang bay area numbers. | In the future I would not apply to two positions that vary only in experience level. If you are senior, apply only for the senior role. If they think you're only suitable for the other position then they can have that conversation with you. | I've been in this situation before and it's not fun.  I know next to nothing about what one does in med tech, so keep that in mind when you read my post.

Everyone keeps saying to reject, and while I largely agree, are you in a position to do so? Are you currently employed? Even at 70k, is this offer about the same or more that what you currently make? 

Going off your post, seems like you are new to DS field so while the salary is low and sucks, it could be a way to get formal DS experience in a market that's hard to land jobs.  Depending on the circumstances you could accept this and immediately start looking for another role.

After considering the two questions above, I would say push back on their offer and state your reasons including what you were told about splitting the difference. They're happy enough with you to make an offer so use that to your advantage as best as you can. If they don't budge, tell them to pound sand and reject the offer. | Don't accept low-ball offers. You should really counter them hard. | You have no experience and no job. Take the offer. | Reject. Honestly, move on. They're gonna pull that shit the entire time you're there. You don't want to have to fight for full compensation every time they pay you. | Once they have you at low pay, they'll never pay you fairly.

I once interviewed and discussed my minimum salary requirements up front. I really needed the job so i gave them my true absolute minimum number, which was about 25% under market rate. They gave me an offer at $2k less than what i told them was my bare minimum. I pushed back with the number we had discussed up front, and they withdrew the offer immediately.

I wrote to the head of the group with whom i had interviewed, explained that my offer had been revoked over $2k and reminded them of my previously disclosed bare minimum. They made some calls and the offer was restored at my asking price, but that was only the beginning.

I continued to get shafted every time annual raises came around. Didn't even keep pace with inflation. I was continuously overworked and increasingly underpaid.

Only you can decide what you should do, but be aware of what you're telling the employer if you accept the lowball. | The difficulty with accepting a low ball offer is that all subsequent jobs you apply to will anchor their offers to that low ball comp no matter what your true business value is. It is an unfortunate dynamic in compensation. This is why I had to do several ship jumps early in my career. The unfortunate part was one of those companies along those jumps, to this day, had a superior work culture and people there were relentlessly driven to find business solutions and it was a culture of helping each other out, so long as you were not a lazy bum. | This might be the recruiter trying to get a bonus. I worked somewhere that had a policy that if they expected to pay $100k for an engineer, but the recruiter could get me to only take $80k? They'd get a one-time bonus of 25% the amount saved ($5k, in the example).   
  
I argued with the recruiter, who basically threatened to tell them I wasn't interested if I didn't accept. I wound up taking a lower offer, and when I grumbled about it to my boss months later, he realized what had happened (he was genuinely unaware of what they were doing, but did know about the policy), and found out that recruiter had been threatening a LOT of people with the same tactic, and some had walked. They got canned, the policy got revised, but didn't go away. Afaik, they STILL have this policy. 

I would reply to HR, and cc the hiring manager, and say ""I was under the impression I was being brought on at $X/year. You're now offering me $Y/year, can you please help me understand what's changed?"" Usually if the manager gets involved, they'll roll over rather than risk losing you and upsetting the manager. | Is this the US? Because that’s really low amounts if it is. I’d just counter with the salary you actually feel comfortable with and if they say no then move on. Hopefully you never stopped interviewing at other places. | This sounds like a parade of red flags to me. I’d wait for an employer that respects its employees and the value they bring. | They're trying to get the best deal for themselves, which isn't a surprise, it's a business. Applying to both roles shows a bit of desperation... You think you're qualified to handle the senior position but you're willing to take the junior position and be underpaid. 

Know your worth in the marketplace and that might help guide you to the best path forward. | I'm struggling to see the problem if I'm really honest? Certainly it's not generous but hardly a ridiculous offer.

You have no experience so the senior position is not for you. You shouldn't be thinking about that at all. What you should expect is the associate role, high into the band if your medtech experience is relevant and the bottom if not.

Their new offer overlaps with the associate band so I'm struggling to see why $70k is ridiculous if you accepted that was their associate band and you have no experience. | Try negotiation, bringing on both the advertised range, typical ranges, your degrees aligning with typical person sting requirements, plus the value of your background for this role. 

It's always a bit handwavy but if you plan to reject anyways unless the comp is better, it's worth seeing how far up you can go and also letting HR know what they're doing there is uncool. | If you don't have a job, accept. 

If you don't have any professional experience, accept. 

I was in a similar position as you except w/o a master's degree and as a data analyst job and I accepted. Got max raises each of last two years and a promo/large bump separately from annual raises. More importantly I have two year experience as leverage if I wanted to leave. | Depends if you have another job willing to give you an offer. From the outside looking in, you applied to both roles so it does indeed look desperate. If you have no experience then this is still better than none. You can probably get them up to 80k on negotiations imo if you highlight your skills properly. | Forget the senior pay band you shouldn’t have applied for that in the first place with no experience, but ask for the top of the associate because you have it in writing that they could afford to split the difference (right?) or at least from a phone call, given your expertise in the subject matter and industry. Then they’ll probably offer 80 and you’ll accept because you don’t have a job at all yet. Let them pay you to learn then leave in 6 months when you find a better one. | Their offer was a RANGE?  This doesn't pass the sniff test!  An offer would be for a set dollar amount.  Even so, the range is partially within the range for the associate position,  which is absolutely where you should be!   It's your first role and you have NO EXPERIENCE!!  There is no way you'd be qualified for the senior role.  A degree alone doesn't entitle you to walk in to a senior level position.  Negotiate a bit, take the offer, be humble, and learn the job.  | Take it and use it to move. Jobs are drying up. But also DS is gold. 
So, base it on your priorities. | Are you currently employed? If not, some income is better than no income. A more important question is, is there an opportunity for you to gain valuable hands on experience while you are there? I have been in the data science space for a long time and am generally skeptical about candidates without demonstrated real world experience. Real world DS work is much different than academic work, and a lack of experience is painfully obvious in the interview process.  Think long term, what is going to set you up for the position and pay that you really want? Without the details of your situation I can't make a recommendation - just didn't view accepting/declining this role as deciding the date is your entire career. | Counter with a number you’re comfortable with. If they stick to low-balling, either reject, or accept and keep job hunting. Your call on those two options, but don’t walk away without countering. | Does your location have anything to do with that? Dont just walk away. I would counter with 80-90k. Original was for 110. Still below the max for associate. 

No equity. Like others have said, take the job for now, but plan to move on. Splitting your offer in almost half is wild. | Accept and keep looking only if you need a job then no notice quit citing better salary | Very bad offer, but if it were me, I would take it. Stay for a few months and start looking for something new. once you have professional experience, it’s easier to negotiate your next salary.

Just for context, my first job after graduating with a masters degree paid me less then what I was already making. However, I took that job as a launch pad for my next opportunity. That strategy has paid off immensely for me. | I think it really depends on how badly you need the job- and they're expecting this. 

Honestly, this is not a company I would choose to work for if I had the option to say no. As other commenters have stated, this is a sign of things to come. If you do accept their offer, expect to be overworked and underpaid, and for managerial support to be low. Leadership's goals for the business may be unclear or nonexistent- that will make your job harder.

But as I said, this is an employer's market, and they're doing this because they can. You don't have a lot of leverage here. You can counter-offer or negotiate, but only if you're willing to ultimately walk away. | Take the job, look for another. Every 6months tell them you’ve had a better offer, at the top of salary range they quoted. Require that. But it will take balls and require you to have another option job wise, even if the salary is a lie. | The strongest negotiating position is be willing to walk away and mean it. Take the job if you don't have something better and keep looking. | Looks like you shared way too many details and they know your current employment situation.

Take the offer and fly out the first chance you get when you reach that $110K. 

Don’t decline, be polite and learn on the job at their expense. And win for life!! | They probably have multiple candidates with similar profile so they are trying to low ball you. I was doing DS/ML for a startup around SF, I was on 65k and already had 9y exp at this point, eventually they asked me to do a PhD in UK and stay working for them remotely for 10k/Y  Some company are just too good at exploiting people and getting away with it. I was on visa so I eventually had to left the country and find a new job 😅 | I had a similar experience. During the initial discussions, I stated the salary I wanted, and the recruiter agreed to it. However, when I received the final offer, the amount was about 5k less. While the difference wasn’t huge, it raised some concerns: if a company doesn’t honor verbal agreements and tries to cut costs at the very beginning, what might happen after you join? In my opinion, this is a worrying sign and makes you question the reliability of the employer.

I don't know how you applied for a job, but for me, if a person applies for an associate and senior position, then he is definitely not a senior. A senior specialist will never apply for an entry-level position. | Take it and realize that you are almost assuredly leaving soon. | unless you have a competing offer do NOT reject 

always easier to get a better job once you have A job

but do not, do NOT reject an offer without another concrete offer on the table

never never never do that especially not in this job market | Everyone telling you to move on isn't aware of how shit the market is. Take the job and look around elsewhere. Better this than nothing. | I mean even before looking at the salary range what were you expecting/wanting

Personally even though you have other work experience, if you don’t have data science experience it’s unlikely you are going to be a senior, so realistically you’re looking at an associate position 

The higher end of associate might be for people that are close to senior, I would probably ask if they could give you 80k for negotiating, if they say no then you have to decide what you want to do 

But realistically, pay aside; is this a good opportunity? Will you be able to learn from it or use it as a stepping stone? | These are negotiation techniques. They may be testing your willingness to go for lower salary. 

IMO (not a blame) but your first mistake is that you applied for both level. It show them that you were open to get lower range of salary. 

IMO the best strategy is now to come straight and say:
- after interview I am not interested in the junior position anymore, get it off the table. Cite more career / responsibility reasons.
- checkout the Black Swan method for way to say « no » and make them work for you.
- identify your options, is it in your best interest to take the low offer or looking for something else?

Good luck | Take the offer,  and immediately continue looking for a new position, with a CV including your new job. | Counter offer pay is generally negotiated say what you need. If you get screwed and really need the job you can accept and keep looking for a better position. | F that.  Move on or be firm. | i think you should not take the offer, it is far too little for someone with so much experience and proven results in the field. Could you please let me know what company? And if you still have the HR email or phone number, it would be better, so that I can let those terrible, terrible people how bad they are. | Info: which role are they offering? | Ridiculous offer or hidden opportunity? Time to crunch those numbers and make a power move! | That is unprofessional from HR. If this is a negotiating tactic it is still unprofessional. If you do take the offer, show no loyalty. 2-3 years at best, take more than you give and then leave. This assumes the brand or company you are going to associate with has some weight. But also remember the names. Names of the HR
person, name of the hiring manager. Name of the hiring manager’s boss. Name
Of the director, VP. Father Time tends to be very unexpected ally! | Depends on how much you need the money. If you cannot renegotiate keep applying to other positions. Just last year I was working a $20k job as a Jr. Data Scientist out of desperation to pay rent (fortunately I got a 10x raise after switching a year later) | Say no thanks. These are not ridiculous offers. They may look ridiculous to you because you're not used to it, but they are not ridiculous. They are testing you, which means that even if they do back down and re-offer the higher amount you need to ask yourself if that's really the culture you want to work in. | This is an awful situation and it shows the company is not serious about you. If they offer a range and then reduce it below that range, imagine what else they will renege on.

Confirm that they didn't get their wires crossed (ie the offer was intended for a different position or for someone else.in a different role) and then decline.

An example response might be

""I was disappointed to learn that the offered salary range was  reduced without explanation after the initial offer was made and rescinded. This telegraphs loudly that your company is experiencing financial distress, or lacks the expertise and maturity to continue operating what is necessary for a functional data science team.

I decline your offer, with much regret for the time misspent. Please be up-front with your next candidate if you intend to not honor a posted salary range."" | They tryna lowball u, dont join the game! | Count 3 fingers from left/right to middle, flip your hand, and raise this finger while on Zoom with HR. | Even if it's lame, I'd say accept it and keep looking for you next gig..it's better than nothing | They're going to split the difference but expect you to take on the responsibilities of both, and then low ball you a second time? Wtf is that. Hard no. Also 7 YoE with a masters for only 70k? This first job is really important to set the standard for your compensation. Minimum 150k, esp if you live in a HCOL or MCOL. Keep interviewing OP. | It sounds like their way of getting skills worth 110k for 60-70k. Do try to negotiate, if you let them get away with the bait and switch then they’ll probably continue to undervalue your skills. | I think this is a huge red flag for a company and there are more issues to come! Continue interviewing | Believe someone when they show you who they are (this applies to companies too lol)

They don’t respect you and are trying to take advantage of | It’s the downside of applying to two different level roles: you’ve shown you’ll take any roles even if they’re below your experience, so they’re trying to get away with paying the lowest possible. 

I’d reject.  | Unless you're desperate, walk. That's completely disrespectful, even for a fresher, let alone for someone with 7+ YOE. Sorry that they wasted months of your time. | They’ve invested a lot of staff time in vetting you - if possible and you know how to reach  the hiring manager (vs hr) you may want to reach out to that person and let them know the situation and you are ready to walk away but wanted to inform them of the situation and see how they respond. | With 50000-300000 H1bs per year, plus AI becoming like a secretary with super Einstein brains, it’s not going to get any better. It will be a lot of shaking. My company is offering 30% cuts or letting people go. My team was told our funds will be cut August 31st but we have to work 10-12h per day to finish current project . My suggestion is get something and keep looking, jump when better opportunity opens. Loyalty in a free market economy is synonymous to stupidity. | I would take the job to add to resume then find a new job ASAP. Write all your code to break after you leave then resign with zero notice. | id be really surprised if you can't push it back to 90k. Keep negotiating | Take the offer, learn to work in production settings as much as you can while looking for something else. The knowledge and experience is what's valuable. And if you don't have anything else, why reject. Knowledge is truly power especially in DS. | Request to be interviewed for higher position? If they say no, accept and keep on looking  | Nope they won’t stop there. They’ll keep cutting if you let them. | If you don't have anything better, why reject? Just take the offer and leave in 3 weeks if you find something better then. | walk away! | Name, shame, and move on sadly | This is bad advice. Good negotiating involves asking clarifying questions to effectively get the other party to reconsider their position. ChatGPT can be helpful for coming up with ways to broach the topic with them as well as what sort of questions you’ll want to ask alongside a good negotiating strategy if you give it your circumstances | Ask for the full senior amount! | How tf is this happening if you’re usually telling a recruiter like call 1 okay the job involves xyz and my range or number is X I’d be pissed if I did everything and they end up offering what would be a different position and title with fraction of the discussed roles salary that makes no sense if a company wasted my time like that I would lose it. | I think your case is different because you seem to be an experienced DS. Your rage is totally justified though. | amen | This but definitely counter and negotiate. Don’t just take their number. You absolutely should show them no loyalty when you do take it though. Get your experience and apply elsewhere once you have it. Don’t waste more than 1.5-2 years there | 70k is fair starting salary but OP has 7 years exp and relevant academic background. That's just insulting | 100% agree with this. By applying to two roles, you’re telling them, “I don’t know what I’m qualified, I don’t know what my value is, and I’ll take anything you got for me.” | Right? I’m wondering if the 7 yoe is aligned with the subject matter of the role. If it is, no problem, if it’s not, it could barely count as experience | Agreed. I had a similar experience at my previous job, where HR tried to low-ball me, because they didn't *really* need me, according to them. I said fine, don't hire me then, and they immediately backtracked and gave me what I was asking. 

And then I spent the next few years at the worst job of my entire career. The experience with HR was a prelude to how they treat their employees, and it wasn't pleasant. One of the happiest days of my professional life was telling them I was quitting. | Nah, I agree with other commenter. If OP is unemployed and has no other offers, he should accept the position, immediately begin applying elsewhere, and leave as soon as he has another offer. | Tbf that seems like a particularly shady workplace. Any company that would rescind an offer over negotiation especially such a tiny amount shouldn’t be taken seriously to begin with | dam bro, negotiation mistake #1. Never give a number. | How did they know your then current salary? | What the fuck is this. Good thing he got canned. That recruiter is crazy work. | It is, obviously hard to get interviews these days but I haven't stopped looking and applying | I learned this the hard way during my last job search. Applying to multiple jobs at one company with very different skills / experience requirements and different pay bands makes you look like you have no understanding of your own qualifications and no idea what you want. It also makes you look desperate for a job as you said.

It's ok to apply to lots of different jobs but not with the same HR department lol. | 0 YOE in DS/analytics, 7 YOE in MedTech probably either clinical or R&D which isn't that transferrable. | 100% - get paid while looking for the next role | Absolutely this! | And no notice quit. | This is the right move | [deleted] | Name shame +1 | Agreed - negotiate. Do a quick skim of ""Getting to Yes"" by Fisher, Ury & Patton. You will ALWAYS need skills in negotiating. Black & white, zero-sum thinking gets you nowhere. | Good negotiations only work when both parties are respectful and sensible on compensation. Offering 60k for their experience isn’t either. | I was pissed, which is why I just said no. 

How does it happen? If I had to guess they found a second candidate that would do the job for way less and thought they would rather have their second choice cheaper than me at my price. 

Fair play, but also, fuck off. | In my opinion, and it is just my opinion, good employers set and follow through on expectations. Only work for good employers. Don’t tolerate this nonsense at any stage of your career. | Experience or not, there is no reason to treat potential employees with this much disrespect.

Everyone will have experience eventually. If you have baited with false salaries when you were starting out, you will probably avoid them for the rest of your career.

  
Also shows how toxic their work environment might be. | That’s a lot of life | Relevant academic experience is more like a PhD based on some ML based research. An MS in data science is just the level of academic qualification you'd expect for an entry level grad role.

We really don't know how relevant OP's medtech work was but even that could be fairly seen as irrelevant.

OP could plausibly be a junior and $70K could be very fair. | Yes exactly. OP's description sounds like some similar shady. Learn from my mistake. | Yep. learn from my mistakes. | I've heard in India it's common to tell the prospective employer your current salary. I don't have a source for that, so take it for what you will. 

At least for me in the US, I apply to things with a posted salary range and see if they want to interview me. If they do and then tell me where they think I'll end up on the range should I get an offer, I know what sort of salary the market thinks I'm worth. | Note that, even AFTER they got canned? The bonuses were still in place. They basically just added a ""if you offer $5 and, they reply with $7, and the max is $10? You MUST either take $7 or offer them $5.5+."" It didn't remove the bonuses for undercutting the max for the range. It just made it so threatening people and refusing to negotiate weren't allowed. | Is this company in a competitive industry (i.e. highly desirable to quality data scientist applicants)? If not I would definitely set the $110k offer as your minimum, because good luck to them hiring someone with work experience and a masters for $60-70k

However if you're desperate and this would still be a pay bump, and you feel they wont budget on their offer, then I would take it but still continue looking for a new job | Crazy. If you can’t get HR to be reasonable then I’d at least let the hiring manager know why you’re declining so that they can try to resolve it. To put it into perspective, I got offered 102k right out of my masters in a medium cost of living area, but it was for a fortune 100. 

I’m not really following why you wouldn’t have the senior position if your experience is relevant and you have a masters though, so I don’t really get why they’d want to put the salaries together. You don’t fit the associate level so you really shouldn’t have even applied to it to begin with. I’d withdraw that application and just do the senior. | My 2 cents.Take the job and continue applying to other companies. It is easier to get an interview when you are hired than when you are not. Stay just as long as you get a different offer and don’t look back. | Even just for a week or two of training.

Thanks for paying me to do nothing. | you actually need to look for a new job... btw...companies are shame less these days...wtf | It’s not any less shitty than severely lowballing a candidate because you think they’re in financial distress | It’s the shitty companies. If I was looking for something - I would counter and if they couldn’t go higher - I would take it until I found something else. 

Companies do shitty things all the time. 

I interviewed for a company was given a start date (4 weeks away) which was cool. I was able to give more notice to my current employer. 

They called me the FRIDAY BEFORE to tell me they weren’t ready for me. 

It was THREE WEEKS after - that I was finally able to start. The company wanted me to start by using my own equipment and have 30 minute meetings. They expected me to actually clear my calendar for this. THEN they didn’t want to pay me for 8 hours - even though they wanted to bully me into being 100% available for 8 hours a day. 

Thankfully, I was able to continue working for my original company - otherwise I would have been out THREE WEEKS of pay. 

I have no issue supporting someone to take something until something better comes along. | You don't understand incentives.

This company has actively tried to exploit desperate job seekers with a bait and switch, in return they will not be able to get loyal workers, that's a direct result of their actions and deserved.

You seem to think that only one side of the equation should be able to have market advantage, you're wrong.

To me, your attitude is actually the shitty one because you want workers to be exploited. | Agreed, you don’t burn bridges like that. You never know what’s gonna come back to bite you in the ass later on. Always try to leave jobs on a good note. You never know who you’ll work for in future.. | Bad negotiations work with bully tactics and manipulation. At the end of the day the company won't remember how much you're paid or how did the negotiation process go a year from now but you will feel it in the paycheck.

I've laughed at an offer, got my external recruiter to call the CTO and inform them that HR is trying to pull some nonsense and had my offer doubled.

Most HR people are not used to hiring special snowflakes that are difficult to hire for. They think there is a queue of willing losers to take up the shit offer. | Maybe but it doesn’t hurt to try. | Honestly, I would have taken the call with the Head of Analytics just to tell it to their face how disgraceful that behavior is and further waste their time. Will never understand how companies think this is a winning strategy | Thanks for replying to this before I got back. At this point, an MS is literally the bare minimum to get hired for actual DS work. I'm going to assume that medtech experience is interesting to the employer but they (and most other companies) are not viewing it the same as 7 YOE bc then OP would have gotten more interviews.

Thus, OP is effectively a new grad who probably has better social skills/stakeholder management than the avg grad student who has never worked a real job, but nothing else going for them.

Honestly wild to read that most comments disagree with mine, but whatever. I'm excited for the follow up post where OP tried to hard counter and they pulled the offer and now they don't ever get another job offer or they take it expecting to do cool DS stuff like they were taught in school but instead they build dashboards and do adhoc stuff because that's what they're really being hired to do as an entry level role. | [deleted] | If someone on my team leaves to double their salary, is the bridge really burned? | Ask who the business is doing and look around the corner...such a poor move is hiding a pile of s\*\*\*t... | They didn't even present a good faith offer. They have no respect for this person. That's not a great sign to start off any relationship. Yeah, maybe go through some negotiation for the experience, but this is not a place that appreciates or respects this person. | Using deceptive hiring practices to low ball candidates will ensure no loyalty, why would someone be loyal to a company that's dishonest?

Absolutely bizarre reframing of the subject.",offer. ridiculous offers. | Counter offer pay. different jobs. other work experience
1lgfmli,Toolkit to move from junior to senior data analyst (data science track),senior data analyst. Toolkit. (data science track,50,0.85,https://www.reddit.com/r/datascience/comments/1lgfmli/toolkit_to_move_from_junior_to_senior_data/,24,1750454964.0,"My suggestion is to focus less on the technical skills and more on communication and domain knowledge. When I evaluate candidates, I'm looking for someone who is strong in both with foundational technical skills.

If properly identified at hire, the technical skills you need for a specific job are easy to integrate into an onboarding plan conditional on having a solid background in the fundamentals. Most of what you listed won't be used in a specific job. And depth is preferable to breadth in this context. I think you'll also find that technical skills rapidly atrophy if you're not using them every day. | Moving up in a company has nothing to do with the toolkits you know but how to make an impact on a company, have a vision, lead people toward it, and make impact they believe in. If you’re thinking a bigger tech stack is going to get you there, you’re the prime candidate to get replaced by AI in the next couple years anyway. | It’s not about the technical skills, because you can pick those up whatever stage you are. What’s key is that people can trust you to carry out a project and to learn whatever tools you need to learn. 

My clients don’t really care what tools I use, as long as I build them what they need. Sure, that means sometimes you are not perfectly implementing something or you don’t have full knowledge of the tool’s documentation, but this is where you lean on your ability to learn things and to talk to others that have expertise peripheral to you. | I think it’s less about how many techniques you know and more about the depth in which you understand the techniques you do “know” and your ability to apply them correctly.

That in my mind separates SR from JR | Sounds more like you're trying to go from analyst to data scientist | Others have covered most of it - adding bits that might help.

At any stage of experience, I'd focus on impact - your tools are only a means for creating impact. 

Atrophy is real, and the best ROI on learning new concepts is to first choose to learn what you think might have the best application in your line of work - no easy path here, gotta iterate. 

Once you find you can exploit a concept to solve a biz problem, start building - you will identify all the gaps you thought didn't exist about whatever you learned, but the journey is fun and since you have direction, there's your motivation.

From a junior analyst's perspective, communication and ultimately adoption of your solution becomes esp tricky when stakeholder maturity hasn't evolved to digest DS solutions. Run an ELI5 of your solution to yourself and technical colleagues, use AI to fine-tune. | The statistical methods you listed here are foundational to the work. This is like your hammer and screwdriver. But having these in your toolbelt doesn't automatically make you useful.

Whats impressive to employers or clients is how you use your knowledge in a certain domain to drive progress. You having a background in marketing makes you much more attractive as a marketing DS then anything you listed here. Although, if you're not familiar with these methods you are obviously useless as a DS. I would recommend you learn the basics of DS which should be enough for a junior-mid level job and you'll learn the rest to on the job. The most important skill for me has been knowing the foundations of stats and being able to use that to understand what my current team does.

It also depends what companies you're targeting. In my company all the DS have at least a master's in stats/comp sci and you won't be considered for the role if you don't. But we regularly have to read and implement/explain academic papers we publish. | To me, DS means being almost competent as a SWE, knowing the data part, and most importantly knowing the science part, i.e. the scientific framework. | Switch companies. Internal mobility is the worst way to do it, esp if you're a junior analyst. Switch to a company where the DS role is closer to analytics, and then find ways to incorporate more technical skills into your workload while already having the DS title.

I started in marketing as an analyst at a fortune 500 company. Left to join a product analytics org in FAANG, and then left again and am now a DS at a big tech company. I have around \~5 YoE, quadrupled my salary in that time. Don't stay in the same place, unless you know hard work is rewarded generously. Now that I have experience at different places, I know what I want and am in a role that I like a lot. Also helps that my manager is fantastic so I feel like this will be a long term home for me. My advice is to interview every year and a half to see what's out there and learn how much you're worth.

Also don't over index on technical skills unless you know you want to become an ML engineer. No point in wasting time getting surface level knowledge on a broad spectrum of technical skills when there are people in specialized roles that fulfill those gaps. You need to spend more time on business communication, product sense, driving business impact, etc. The more senior you get, the more important those things are. The technical stuff will usually be handled by MLEs or you can 80/20 it with ChatGPT. | Your skillset is solid for a junior data analyst, but to reach SDA, focus on developing expertise in machine learning, data storytelling, and complex problem-solving. | Solid list !

In my experience, the jump from DA to Senior DA is less about knowing “fancier” tools and more about owning problems end-to-end. That means being trusted to choose the right method, clean messy data, explain tradeoffs to stakeholders, and deliver something actionable- whether that’s a dashboard, model insight, or a “we shouldn’t do this” recommendation.

Tool-wise, your list is great. A few thoughts:

\- Cloud familiarity is a huge plus (even just basic S3, Lambda, BigQuery, etc.). Not deep infra, just enough to not be blocked.

\- ML-lite like clustering, PCA, and feature selection is right in the sweet spot for senior analysts, especially if you can explain it well to non-technical folks.

\- AB testing + communication is where you can shine-being the person who can confidently say “this worked” (or didn’t), why, and what to do next.

You’re also totally right to draw the line at deep ML/rec systems/backend, those are more DS/Eng land.

Side note: if you’re doing a lot in Jupyter, check out Datalayer - it makes building and iterating in notebooks smoother, especially if you're collaborating or want to try AI-assisted workflows.

P.S Have some github links around Jupyter (MCP and AI Agents) use cases. Would love to share if you're interested in leveling it up later with AI-assisted workflows (like having an agent write/run cells with context) | Great breakdown—this is more comprehensive than many SDA roles I’ve seen. One thing that helps with the transition is improving how you *communicate* insights, not just produce them. Tools like [kivo.dev](https://kivo.dev) can offload the manual work of turning cleaned data into client-ready reports, freeing you up to focus on deeper analysis (like segmentation or test design). It’s not about doing everything a data scientist does, but owning the pipeline from extraction to decision-ready output. | They do atrophy; I’m in the midst of re-upping on my PCA.

This is good feedback - thank you | This is a good point 🧐 | I feel like ""trust"" is an important word here. The more expertise you have in a tool, the more trust you can doll out. | I am familiar with both high and low context environments, I’m assuming you’re implying to move communication towards more high context communication? | yes, but also no. I don't have a masters and don't plan on getting on in statistics/data science/related field. | You’d have to get specific about how you define expertise. Ultimately, it still comes down to what you build. Expertise is used as a proxy for trust, a prediction. what you actually build is a direct connection to trust and accrues as work is completed.

Someone could have a phd in computer vision, but if they can’t apply that (assumed) expertise to a simple logistic regression problem all the way up to the topic of their dissertation they’re useless. Even more if they can’t be bothered to work with others. | Yeah, I mean like you know DBSCAN, but why do you use that over hierarchical clustering? Then once you choose how can you effectively communicate the outcome/insights from your modeling or analytics process, and how does it impact them. | A masters helps but experience trumps all, the term data scientist is really broad but to me is at the minimum someone who uses probably a higher degree of python than sql | Yeah, I get that. True! | Right, like there benefits to both types, for a high dimensional dataset you might use something like a DBSCAN to pick up on things you can’t see just with an itertools segmentation | Or even this: standard k-means classifies all points into 1 of N clusters. Does this fit your use case? DBSCAN actually keeps points as outliers if they aren’t clustered. Both of these could be appropriate for a given use case, and both could require a different explanation to your stakeholders (eg. “this model is now actually not just categorizing points into different clusters but if the point is not found close enough to a cluster, it is left as an outlier”). 

Data science, mathematics, computer science, language use, cooking, painting, and building things are all similar in that you could know how about some obscure method on how to cook a potato a special French way or paint with fine craft oil paints from Italy… but still be out classed by the guy who makes S tier French fries or paints with Walmart water color sets but uses them expertly. The experts usually have exposure to the obscure techniques, but are not experts because they employ obscure techniques, but utilize fundamentals expertly (see Tim Duncan if you like sports)!

I think what pushes Jr to Sr is that sort of thing. I’m sure you have adequate hard skills, but as you go up the soft skills matter more and more. That’s why all the other comments also point to communication as key.",technical skills. foundational technical skills. technical colleagues. adequate hard skills. DS solutions
1lgdg9j,Has anyone seen research or articles proving that code quality matters in data science projects?,data science projects. articles. research. anyone,17,0.61,https://www.reddit.com/r/datascience/comments/1lgdg9j/has_anyone_seen_research_or_articles_proving_that/,54,1750449460.0,"On my team, code quality matters as soon as someone else might need to read your code. Because I fucking hate being that someone and trying to read an incomprehensible mess. | I don’t think there’s going to be a paper proving this but as someone who’s written production ml code for the past 7 years I can assure you the answer is yes. 

Unclean code is a disaster waiting to happen.  | The might be a good start: https://hdsr.mitpress.mit.edu/pub/8wsiqh1c/release/4

Has some good references, too. | Quantifying time lost because someone's code is straight ass isn't always easy to do... | This is a good article that coincided with the emergence of MLOps frameworks and tools

https://papers.nips.cc/paper_files/paper/2015/hash/86df7dcfd896fcaf2674f757a2463eba-Abstract.html | The ask is kind of silly. Let me try to put it this way.

We already know that sanitization and good hygiene in hospitals is critically important. We have data and research from large medical facilities with hundreds of staff and thousands of patients proving the importance of hygiene. But what if no such study was also conducted for small private clinics?! So? What are we supposed to conclude or hypothesize here?! That it might be ok if private, single-practitioner, clinics or offices do not pay attention to sanitization and hygiene?

That means the person reading the studies is a half-wit who lacks critical thinking as well as common sense. The same risks and benefits apply. The only difference is in proportionality. Perhaps a small scale clinic may get away with it or get lucky, but that doesn't make it unimportant, because we already have the evidence of importance. The reasons cited in those large software studies logically translate to any scale and field; data science and beyond.

There is a good-global reason we have a whole science on styles, hints, and code design standards. | I’m not sure we need research to confirm this. It seems fairly intuitive that code quality matters, even if you’re the only person using your code. | My entire subject is a huge mess and several YEARS behind where it could be due to poor code quality and reliability:

https://genomebiology.biomedcentral.com/articles/10.1186/s13059-022-02625-x Sustained software development, not number of citations or journal choice, is indicative of accurate bioinformatic software | Genome Biology | Full Text

Would personally say each dollar spent on new bioinformatics costs two dollars of time navigating systemic tech debt. | commenting because I'd like to know as well | Good question, but I wonder if data science code quality (and use of best practices and process documentation) differ depending on the stage of data science. 

Do the steps of data acquisition, verification and cleaning get treated differently versus model building, testing and optimization or implementation and on-going monitoring and optimization? 

Or is scale of the data and project the critical factor when it comes to code quality, best practices and process documentation? 

Intuition suggests it would matter in all phases regardless of scope or size simply to minimize errors-not just in the code base but also the outputs (or even the utilization of compute, storage and network resources and overall costs to run any model). | Code quality absolutely matters even 1 tiny error and | I'm guessing it would be hard to quantify 1) code quality, and 2) ""pays off"" in a typical science workflow. I'm sure there are papers out there, but I'm guessing it would be more qualitative? | Search for technical debt | I don't think anyone has done research on it. It's just pretty obvious that it does. 


One issue is that everyone idea of quality code is different. We just don't want bad code that either works poorly or no one can follow.  | I mean this is a no brainer. Good Coding Practices.

Why do you need a paper showing this, anyway? | Isn’t Deepseek a good example of optimization gains through good engineering?  | I would doubt that there’s anything consistent that would even be usable for this. Sometimes you have data engineers that build out code for data scientist, sometimes data scientists are also data engineers. Sometimes the data scientist, build an compressed file that gets pointed to by the data engineer and that’s it. There are too many contextual things tied in with organization structure that would complicate this meaning anything.

Following standard good code practices would be ideal. Whether it matters, depends on who you’re measuring and how their team is structured. | This is a really interesting question (to think about creating a causal framework around it). As several others have alluded to in their answers, primary factor is comprehensibility when working in a team. I personally haven't seen any research trying to address your question causally, but I have come across many guides advocating for best practices to enhance comprehensibility and reproducibility. 

Examples:

1. [https://journals.plos.org/ploscompbiol/article/file?id=10.1371/journal.pcbi.1007007&type=printable](https://journals.plos.org/ploscompbiol/article/file?id=10.1371/journal.pcbi.1007007&type=printable)

2. [https://vdsbook.com/](https://vdsbook.com/)

One of the authors of \[1\] Fernando Pérez built jupyter notebooks and has written several other articles about the benefits of code quality. \[2\] is a book length treatment of what the authors call the ""Data Science Life Cycle"" (DSLC) similar to SDLC and introduce a the ""PCS"" framework: Predictability, Computability, Stability. | offbeat license longing instinctive long history decide joke future fragile

 *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)* | Data science projects no, ML system projects yes. | You don’t need an article to prove that. Just take a github project from a arxiv paper that is not clean and try to understand…

Or take a project someone else did a few month ago in your team and try to reproduce the result T.T | Go ahead and don’t write any tests.  

Go build your data transform pipelines that denormalize your source data, with no test cases for your code and no quality checks on your data.  

Go ahead and write feature engineering code without a test suite.  Ignore error handling, data validation, unit tests, integration tests.   

Non-deterministic SQL? Sure!  Transforms and feature engineering with complex business logic that nobody code reviews or QAs against reference expected values?  Sure!  

You’re a Data Scientist after all, and what matters is your fancy model, right?   Not this boring grunt work.   Test cases are for those non-academic, non-intellectuals on thar other team doing all that boring web app stuff.  

Just plow forward and generate some denormalized data, generate some training data, train your model.   When you find that your model performance sucks, spend lots of time retraining iterating on hyper parameter tuning before you eventually figure out  that your model is crap because something upstream is crap. 

Eventually you find the issue in your upstream transform or data or feature engineering.  because you don’t have a culture of quality, you fix the one bug but don’t add a test case.

Now go spend money to backfill your denormalized transform tables from your source data,  spend money to regenerate your training set data, and spend money to retrain your model.  The performance is still crap.   

Repeat until all the money is gone, your model performance is still crap, and you get fired. | Great question—most DS workflows aren’t designed with longevity or collaboration in mind, which makes “clean code” feel optional… until it bites. I haven’t seen many studies, but I’ve felt the impact firsthand: faster onboarding, fewer bugs, and less rewriting when outputs need to scale or go into production. Some platforms like [kivo.dev](https://kivo.dev) help reduce the mess altogether by skipping boilerplate—letting you focus on logic and insight while keeping output structured and reproducible. Might be a helpful angle to explore. | I used to manage a team of 3. I let my associates work however they want but writing clean code and documentation were non-negotiable. I had weekly 1:1’s with them until it was consistent across the team. Indentation and caps had to be perfect. The team never had problems reading each others code | I think code quality is over blown in a lot of settings. 

My stakeholders care about the results I give them. My peers care that they can at least read and understand my work, but not necessarily that they can iterate on it. | this. also, future me is technically someone else, and future me is always thankful to past me for writing clean code. so even if you don't want to write clean code for others, do it for yourself at least | I used to work with a guy who refused to do anything resembling organization in his code or other work. One time he wants me to make some changes to ""sheet 41 (2)"" in a Tableau workbook and I told him I'm not touching it until he at least labels what I'm supposed to work on.

His SQL was unreadable. I rewrote anything he sent me from scratch because it was faster than trying to decipher it. | I’m an academic who also does some consulting, and I spent time learning to write good code for just this reason. I often hand over prototypes for others to integrate.  Writing good code means that it’s easier for them to integrate, with no weird edge cases, and they can run a lot of it as is in production. 

It nets out to cost less for them, is more predictable for me, and speeds up the time to value on their side, which often gets us on to the next project. 

I also do plenty of one-offs that are either a brief report or even just a paragraph in an email with a notebook export for evidence. I write good code there, too. You never know when someone will follow up in six months, and you’re the one trying to figure out what past you did. | Has anyone seen research or articles proving that product quality matters in business? | If you want to ensure no one will ever help you ever again, try handing them some horribly written undocumented code. You learn that lesson pretty quickly on the job, even as a junior. | In my organization there are no standards whatsoever - some people don't even use a version control system . Which is making me crazy... | I am right there with you; I worked 7 years as a software developer before moving to data science in a non tech organization. I am trying to convince the leadership this is the right move, and it would be great to show it's not just a feel of the developers. | Here’s one of the references that might be worth reading, for example: https://www.nature.com/articles/s41597-022-01143-6 | HDSR is a good resource and the quote below from the article pretty much sums it up:

>Trisovic et al. (2022) carried out a large-scale study on code quality and found that 74% of R files did not run successfully. After incorporating some automated code cleaning targeting “some of the most common execution errors,” 56% still failed. | Pun? | It is for me and you; not so much for the leadership of my company, who 'does not believe' in (blind) standards, apparently, and does not have technical background. | If nobody uses or reuses your work, instead only your results, then it probably doesn’t matter. But if others need to incorporate or build upon your code, it matters. 

I have seen crap notebooks that were developed by one persons and only executed on one persons machine  to export a few images and a csv. The code never saw a repository and wasn’t reused in any way. Code quality matters very little here. 

I have also seen teams try to promote notebook code to production pipelines/models that were ooorly written and it essential had to be rewritten because it was difficult to understand when troubleshooting and adding features to it. Here it matters. | Probably ran faster too - I cringe whenever someone hands me a sql query with multi-level nested subqueries that could have been written as a CTE

It’s like people have 0 pride in their own work output | I’m doubtful scholarly articles are the answer for the crowd that has those naive coding practices. 

If the team delivers value, no one seems to care how they do it. It works until it doesn’t. 

Maybe try to ask what the contingency plan is when the seasoned ppl leave for greener pastures and new hires enter into the undocumented, untested, sloppy codebase. How can they expect to grow and scale with confidence and efficiency and attract and retain talent? | Document your time lost when you need to update something/ familiarize yourself with someone's crap code. Once you have that measure, you can lean on them to improve it -- if ""no duh, good code is good so we should write good code"" isn't a winning argument | If you want to convince the leasership don’t ever bring research articles…in most cases you will get laughed at and shown a way out. Measure the business impact to show that this is a priority and make an easy-to-understand and concise deck for communication. Also, even before bringing it to the leadership and make sure to get sponsors for your project before going in. Get help from your sponsors to get the leadership think about the project befoee listening to you. | You don't convince leadership with research papers. I would try two approaches:

1. The ""past shit show"" approach, i.e., an example of a time where bad code cost the company a bunch of time or money.  Or alternative a list of cases where bad code cost the company a reasonable amount of time and money. It hits them more when it's real and it happened to them.

2. Look at Gartner stuff. Gartner does a good job of getting answers to shit like that. | Adding to the chorus that you are probably misjudging what sort of evidence you need to provide to get movement on this.

It sounds like you've been at this for a long time. In your experience, how often have you actually seen people, especially those in leadership positions, do literal 180s because evidence contradicted their ""common sense""? It's just not human nature. The few times I've actually gotten it to work I had to burn all of my social capital and it was trust in my judgment and working them that actually got them to change their mind, not the numbers.

I see where you're coming from but I will suggest to you that you will likely find greater success if you intsead try to fix the problem at the ""my team"" level first. Work with your manager, get some standards in, give the appearance of it working (like it's great if it does but again that's secondary), and then go from there. | My company is so code quality focused that they tried to ban notebooks and prevent us from developing in databricks ide due to the lack of linting, testing and extensions.

Code quality definitely has its place, but too much can be overkill. I.e.  going full on SOLID principles and creating classes for an some EDA or data validation exercise.

Perhaps convince them with pecific examples. If they're creating a package of reusable code (like feature engineering stuff) tell about how abstract classes enable scalability. 10 people can contribute 10 new features independently without changing other people's code.

For models that are used in production, make the argument for unit tests. 

For general code readability, try linting. | You may want to check out a book called “naming things”. It’s mostly centered around studies showing how well chosen names improve rate of understanding the first time you read code and subsequent times. 

You can try and spin this to explain how well named code is easier to maintain and modify. 

Then you may be able to explain that this is also true of folder naming structures. 

Outside of good names, I wouldn’t expect your analysts or scientist to write great code. Their concern is usually just trying to figure out how some analysis could be done. 

But if they want someone to productionalize that in a way that’s extensible, they need to work hand in hand with an engineer.  It shouldn’t be thought of as a hand off with no contact.  However it’s really on whoever is designing the human processes between teams that has to understand this. | Good find. Thanks for sharing | no, genuinely want to know | I mean you're the one working in the field so you should do what's best for the company in your field. Is it good to apply good coding practices in industry? Yes, of course. 

What does the leadership have to do with it though? | To be fair the thing about CTEs is you have to plan ahead how you're going to tackle the problem, whereas nested subqueries tend to come from wanting to try to get anything that works and then never having time to go back and fix it. | Banning notebooks is doing God’s work. | I work in a non tech organization. Many contributors are self thought and come from different fields, typically scientific ones. As such not everybody is knowledgeable about code quality. My proposal is for the *managers*, not the developers, to be responsible for enforcing minimal standard - e.g. code in repositories, a minimal git workflow including PRs.

In my (r&d) environment these concepts are very hard to defend. | I promise you, it’s worth the effort to abstract whatever you’re doing into a CTE 9 times out of 10 - No one wants to work with that guy that spins up “anything that works” and ships it | I definitely agree. If I ever end up running a team I want to build pretty rigorous guidelines for stuff like documentation, code formatting, etc.",good code. data science code quality. Code quality. code quality. quality code
1lg4t92,How are you making AI applications in settings where no external APIs are allowed?,AI applications. settings. AI. no external APIs. you,29,0.87,https://www.reddit.com/r/datascience/comments/1lg4t92/how_are_you_making_ai_applications_in_settings/,18,1750428242.0,"How big of a model can you run locally? Having a machine with enough memory is obviously a challenge here. If you have some budget, buy a machine with tons of memory and just run DeepSeek or Gemma locally. | Go check out r/localllama. They have lots of interesting deployment setups, including a bunch of hacky shit using old mining rigs, running a shit ton of PCIe lanes at 1x because they have too many cards, etc.  

Probably the best answer is that you’re going to need to buy some hardware and look at either running a relatively small model or doing mixed inference where some layers are offloaded to GPU and some are run on the CPU. 

For enterprise stuff, I’d probably run vLLM over llama.cpp or something based off llama.cpp like Ollama, but depending on your setup llama.cpp might have more flexibility on the inference side of things.  

You can set up TLS, api keys, etc., and end up running everything behind a corporate firewall so there’s no external API dependencies, which will make compliance and cyber happy. 

The downside, of course, is that the tooling isn’t as good since it’s free and the models are on average dumber. | Mosst of my time is spend in this kind of org (pharma). Solution in our case was just doing it in ... the cloud. 



Takes a lot of organizational buy in, but we designed our architecture to be zero trust, rely on private networking, ...

The entire setup is also audited / verified etc. Might seem like an uphill battle but it's the way to go for sure. | Cohere can provide on-prem private deployments. Definitely worth looking into. 

Otherwise, AWS bedrock gives you access to really powerful LLMs (e.g. Anthropic’s latest) in a VPC that is highly secure. If your org does literally anything with AWS, then this use case should probably be allowed as well. | RAGs would solve this problem real fast. | We build trading bots for a bank that can’t send a single byte to the cloud, so everything runs local. The trick is pre-packing the entire model stack — embeddings, quantisation, even the feature DLLs — into one Docker image and signing it for IT. No pip installs on prod servers, no outbound calls. For retraining we run a nightly job in an isolated lab network, export the weights to an internal artifact repo, then the prod container pulls that artefact hash the next morning. Keeps compliance happy and still lets the ML team iterate weekly. | I have a workstation that my company bought me that has a rtx 6000. Our goal is to build a server but so far this workstation hasnt been too bad | I develop generically without the clients data. Usually mocks.  | 7k-20k budget sounds reasonable for something of this scale, depending on the trust in the person using it and the redundancy. | Please provide specifics on how you imagine a machine to run a behemoth such as deepseek with good performance locally. | You know, I've never done mixed inference in my life. Do you have experience with it? Is it easy to whip up on PyTorch or HuggingFace Transformers or something? | With a $20k budget, you could get something with over 500GB of memory (even just a maxed out Mac Studio has 512GB unified and it’s like under $15k I think) and that should be enough to run R1 in 4 bit quantized form locally? Even if I am wrong there you could run a smaller version of R1 for sure. | Its built into llamacpp, lmstudio which may use llamacpp, and most other local runners, probably possible in pytorch.  Those first can give you an OpenAI api endpoint running locally.

$20K budget you can run deepseek on an epyc (12 channel ddr5) or threadripper (8?) with router model fully on GPU since the router is always a bottleneck.

Another option for full deepseek for $20K is two 512GB Mac studios linked with thunderbolt. | As u/muchcharles said, it’s built into llama.cpp. Most common use case is a regex cli argument when launching the server to load certain layers on GPU. It does require some knowledge of internal naming conventions in the layers, but is otherwise not too bad. 

The biggest issue with mixed inference is that you’ll still take a performance hit and will want to tune the layers offloaded so you’re not passing tons of kv cache data between CPU and GPU via PCIe. 

The CPU-only option would be good for moderate sized MoE models, particularly with something like a threadripper or Epyc and fast RAM. | I will say, I think a lot of people put too much stock on the LLM.

In many on-prem environments, the essence of the job is to use an LLM to analyze the content of documents, which requires very little logic. The RAG platform does a lot of the heavy lifting.  
  
I've found that most RAG systems fail due to scale of information:   
[https://www.eyelevel.ai/post/do-vector-databases-lose-accuracy-at-scale](https://www.eyelevel.ai/post/do-vector-databases-lose-accuracy-at-scale) (I wrote this)

Or in parsing  
[https://www.eyelevel.ai/post/guide-to-document-parsing](https://www.eyelevel.ai/post/guide-to-document-parsing) (I also wrote this)

When talking with devs about this problem, the LLM comes first, but I feel like the performance of the RAG system is a bigger problem. | Thoughts on the new mega context non transformer models in research? | You know what, I filmed a podcast on that yesterday, should be up in a week or two!  
[https://www.youtube.com/@EyeLevelAI](https://www.youtube.com/@EyeLevelAI)

My punchline is that super big context windows are great, but I don't think they'll get rid of workflows like RAG.  
\- for transformer style models, you need to pay for attention, so bigger inputs are more money  
\- Practically, long context means difficult control, so if you're trying to do any adjustment with prompt engineering, having a massive ""kitchen sink"" context has serious concerns

I do think, when used in conjunction with technologies like CAG though, there are some super useful tricks you can do.  
[https://iaee.substack.com/p/cache-augmented-generation-intuitively?utm\_source=publication-search](https://iaee.substack.com/p/cache-augmented-generation-intuitively?utm_source=publication-search) (I wrote this)  
[https://www.youtube.com/watch?v=HqJ-KDPE6PY](https://www.youtube.com/watch?v=HqJ-KDPE6PY) ( filmed this)

In terms of non-transformer models, I think they're interesting, but one will have to be really, really good to see the level of adoption we've seen. At this point transformers have seen so much addoption, there will need to be a significant improvement to justify the switching cost. | Thanks that seems really interesting! I feel the majority use of my LLM usage really does have to do with caching. I believe there's a lot of room to move the needle on high veracity caching so that does seem appealing. I don't mind lower accuracy if caching tooling and context size are satisfied.

By the way do you know any good data sci subs? this one is so negative and idk if they actually know anything tbh.",non transformer models. transformer style models. router model. non-transformer models. super big context windows
